{"version":3,"sources":["hooks/useLocalStorage.js","context.js","components/Navbar/navbar.js","hooks/useHorizontalScroll.js","components/Homepage/ToggleButton/toggleButton.js","components/Homepage/RenderedCard/renderedCard.js","components/Homepage/homepage.js","components/Searchbar/searchbar.js","components/SearchResultsCard/movieresultdata.js","components/SearchResultsCard/tvresultdata.js","components/SearchResultsCard/peopleresultdata.js","components/SearchTrending/trendingdata.js","components/SearchResults/searchresults.js","components/FullScreenResult/fullscreenreview/fullscreenreview.js","components/FullScreenResult/moviefullscreenresult.js","components/FullScreenResult/tvfullscreenresult.js","components/FullScreenResult/peoplefullscreenresults.js","components/Watchlist/watchlist.js","App.js","index.js"],"names":["useLocalStorage","key","initialState","useState","retrieve","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","AppContext","React","createContext","AppProvider","children","category","results","searchResults","setSearchResults","movie","tv","watchList","setWatchList","type","person","trendingData","setTrendingData","isAdded","isRemoved","title","watchListAlert","setWatchListAlert","searchMovies","query","a","fetch","response","json","data","console","log","searchTVShows","searchPeople","search","timer","setTimeout","clearTimeout","Provider","value","addToWatchList","item","find","w","id","obj","poster_path","vote_average","name","removeFromWatchList","filter","isMovieInWatchlist","isTvShowInWatchlist","convertDate","info","Date","toLocaleString","day","month","year","useGlobalContext","useContext","Navbar","className","to","useHorizontalScroll","preventParentScrolling","elRef","useRef","el","current","onWheel","e","deltaY","preventDefault","scrollLeft","scrollWidth","clientWidth","Math","round","scrollTo","left","addEventListener","removeEventListener","ToggleButton","handleClick","active","onClick","disabled","RenderedCard","found","imgSrc","linkTo","vote","removeCat","removeID","addCat","addID","src","alt","focusable","Homepage","popularData","setPopularData","topRatedData","setTopRatedData","popScrollRef","topScrollRef","watchScrollRef","getPopularMovieData","prev","getPopularTVData","getTopRatedMovieData","getTopRatedTVData","ref","map","length","Searchbar","searchTitle","setSearchTitle","setCategory","htmlFor","placeholder","onChange","target","MovieResultData","release_date","overview","TvResultData","tvshow","first_air_date","PeopleResultData","profile_path","known_for_department","known_for","role","TrendingData","img","link","SearchResults","movieTrendingRef","tvTrendingRef","peopleTrendingRef","getTrendingMovieData","getTrendingTVData","getTrendingPeopleData","getAllTrending","index","film","show","peep","FullScreenReview","author","written","review","MovieFullScreenResult","useParams","movieData","setMovieData","movieReviewData","setMovieReviewData","movieCreditData","setMovieCreditData","toggle","setToggle","getMovieData","getMovieReview","getMovieCredit","undefined","genres","runtime","production_companies","company","tagline","result","created_at","content","cast","character","TvFullScreenResult","tvData","setTvData","tvResultData","setTvResultData","tvCreditData","setTvCreditData","getTvData","getTvReview","PeopleFullScreenResult","peopleData","setPeopleData","peopleCreditData","setPeopleCreditData","peopleImageData","setPeopleImageData","getPeopleData","getPeopleCreditData","getPeopleImageData","birthday","place_of_birth","biography","profiles","file_path","Watchlist","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ed95881.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key, initialState) => {\r\n    const [state, setState] = useState(() => {\r\n        const retrieve = localStorage.getItem(key);\r\n        return retrieve ? JSON.parse(retrieve) : initialState;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (state) {\r\n            localStorage.setItem(key, JSON.stringify(state));\r\n        }\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [searchResults, setSearchResults] = useState({\r\n        category: \"\",\r\n        results: [],\r\n    });\r\n    const [watchList, setWatchList] = useLocalStorage(\"Watchlist\", {\r\n        category: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n    });\r\n    const [trendingData, setTrendingData] = useState({\r\n        type: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n        person: [],\r\n    });\r\n    const [watchListAlert, setWatchListAlert] = useState({\r\n        isAdded: false,\r\n        isRemoved: false,\r\n        title: \"\",\r\n    });\r\n\r\n    const searchMovies = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setSearchResults({ category: \"movie\", results: data.results });\r\n    };\r\n\r\n    const searchTVShows = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/tv?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setSearchResults({ category: \"tv\", results: data.results });\r\n    };\r\n\r\n    const searchPeople = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/person?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setSearchResults({ category: \"people\", results: data.results });\r\n    };\r\n\r\n    const search = async (category, query) => {\r\n        switch (category) {\r\n            case \"movie\":\r\n                searchMovies(query);\r\n                break;\r\n            case \"tv\":\r\n                searchTVShows(query);\r\n                break;\r\n            case \"people\":\r\n                searchPeople(query);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const convertDate = (info) => {\r\n        const date = new Date(info);\r\n        const string = date.toLocaleString(\"default\", {\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n        });\r\n        return string;\r\n    };\r\n\r\n    const addToWatchList = (category, item) => {\r\n        if ([...watchList.movie, ...watchList.tv].find((w) => w.id === item.id))\r\n            return;\r\n        if (category === \"movie\") {\r\n            const obj = {\r\n                id: item.id,\r\n                title: item.title,\r\n                poster_path: item.poster_path,\r\n                vote_average: item.vote_average,\r\n            };\r\n            setWatchList({\r\n                ...watchList,\r\n                movie: [...watchList.movie, obj],\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: true,\r\n                isRemoved: false,\r\n                title: item.title,\r\n            });\r\n        } else if (category === \"tv\") {\r\n            const obj = {\r\n                id: item.id,\r\n                name: item.name,\r\n                poster_path: item.poster_path,\r\n                vote_average: item.vote_average,\r\n            };\r\n            setWatchList({\r\n                ...watchList,\r\n                tv: [...watchList.tv, obj],\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: true,\r\n                isRemoved: false,\r\n                title: item.name,\r\n            });\r\n        }\r\n    };\r\n\r\n    const removeFromWatchList = (category, id) => {\r\n        if (category === \"movie\") {\r\n            setWatchList({\r\n                ...watchList,\r\n                movie: watchList.movie.filter((item) => item.id !== id),\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: false,\r\n                isRemoved: true,\r\n                title: watchList.movie.find((item) => item.id === id).title,\r\n            });\r\n        } else if (category === \"tv\") {\r\n            setWatchList({\r\n                ...watchList,\r\n                tv: watchList.tv.filter((item) => item.id !== id),\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: false,\r\n                isRemoved: true,\r\n                title: watchList.tv.find((item) => item.id === id).name,\r\n            });\r\n        }\r\n    };\r\n\r\n    const isMovieInWatchlist = (id) => {\r\n        return watchList.movie.find((item) => item.id === id);\r\n    };\r\n    const isTvShowInWatchlist = (id) => {\r\n        return watchList.tv.find((item) => item.id === id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setWatchListAlert({ isAdded: false, isRemoved: false, title: \"\" });\r\n        }, 3000);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n    }, [watchListAlert]);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                trendingData,\r\n                setTrendingData,\r\n                search,\r\n                searchResults,\r\n                watchList,\r\n                setWatchList,\r\n                addToWatchList,\r\n                removeFromWatchList,\r\n                isMovieInWatchlist,\r\n                isTvShowInWatchlist,\r\n                convertDate,\r\n                watchListAlert,\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Navbar = () => {\r\n    const { watchListAlert } = useGlobalContext();\r\n    return (\r\n        <div>\r\n            <nav id=\"navbar\">\r\n                <ul id=\"navbar-list\">\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/watchlist\">\r\n                            Watchlist\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/search\">\r\n                            <GoSearch className=\"link-icon\" />\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div id=\"display\">\r\n                <div\r\n                    id=\"watchlist-alert\"\r\n                    className={\r\n                        watchListAlert.isAdded\r\n                            ? \"added\"\r\n                            : watchListAlert.isRemoved\r\n                            ? \"removed\"\r\n                            : \"\"\r\n                    }\r\n                >\r\n                    {watchListAlert.isAdded ? (\r\n                        <p>Added to Watchlist - {watchListAlert.title}</p>\r\n                    ) : watchListAlert.isRemoved ? (\r\n                        <p>Removed from Watchlist - {watchListAlert.title}</p>\r\n                    ) : (\r\n                        <p></p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nconst useHorizontalScroll = (preventParentScrolling = true) => {\r\n    const elRef = useRef();\r\n    useEffect(() => {\r\n        const el = elRef.current;\r\n        if (el) {\r\n            const onWheel = (e) => {\r\n                if (e.deltaY === 0) return;\r\n                if (preventParentScrolling === true) {\r\n                    e.preventDefault();\r\n                } else if (\r\n                    !(el.scrollLeft === 0 && e.deltaY < 0) &&\r\n                    !(\r\n                        el.scrollWidth -\r\n                            el.clientWidth -\r\n                            Math.round(el.scrollLeft) ===\r\n                            0 && e.deltaY > 0\r\n                    )\r\n                ) {\r\n                    e.preventDefault();\r\n                }\r\n                el.scrollTo({\r\n                    left: el.scrollLeft + e.deltaY,\r\n                });\r\n            };\r\n            el.addEventListener(\"wheel\", onWheel);\r\n            return () => el.removeEventListener(\"wheel\", onWheel);\r\n        }\r\n    }, []);\r\n    return elRef;\r\n};\r\n\r\nexport default useHorizontalScroll;\r\n","import React from \"react\";\r\n\r\nconst ToggleButton = ({ handleClick, active }) => {\r\n    return (\r\n        <div className=\"toggle-button-group\">\r\n            <button\r\n                className={`toggle-btn movie-toggle ${\r\n                    active === \"movie\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={handleClick}\r\n                disabled={active === \"movie\"}\r\n            >\r\n                Movie\r\n            </button>\r\n            <button\r\n                className={`toggle-btn tv-toggle ${\r\n                    active === \"tv\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={handleClick}\r\n                disabled={active === \"tv\"}\r\n            >\r\n                TV\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\nimport { useGlobalContext } from \"../../../context\";\r\n\r\nconst RenderedCard = ({\r\n    found,\r\n    imgSrc,\r\n    linkTo,\r\n    title,\r\n    vote,\r\n    removeCat,\r\n    removeID,\r\n    addCat,\r\n    addID,\r\n}) => {\r\n    const { addToWatchList, removeFromWatchList } = useGlobalContext();\r\n\r\n    return (\r\n        <div className=\"render-card\">\r\n            <img\r\n                src={`https://image.tmdb.org/t/p/w500/${imgSrc}`}\r\n                alt=\"\"\r\n                className=\"render-img\"\r\n            />\r\n            <Link to={linkTo} className=\"render-card-link\">\r\n                <h3>{title}</h3>\r\n            </Link>\r\n            <p className=\"render-vote\">\r\n                <AiFillStar className=\"render-icon\" />\r\n                {vote}\r\n            </p>\r\n            <button\r\n                className=\"remove-from-wishlist\"\r\n                onClick={() => {\r\n                    found\r\n                        ? removeFromWatchList(removeCat, removeID)\r\n                        : addToWatchList(addCat, addID);\r\n                }}\r\n            >\r\n                {found ? (\r\n                    <IoMdRemoveCircleOutline\r\n                        className=\"remove-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                ) : (\r\n                    <IoMdAddCircleOutline\r\n                        className=\"add-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RenderedCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport useHorizontalScroll from \"../../hooks/useHorizontalScroll\";\r\nimport ToggleButton from \"./ToggleButton/toggleButton\";\r\nimport RenderedCard from \"./RenderedCard/renderedCard\";\r\n\r\nconst Homepage = () => {\r\n    const { watchList, setWatchList, isMovieInWatchlist, isTvShowInWatchlist } =\r\n        useGlobalContext();\r\n    const [popularData, setPopularData] = useState({\r\n        category: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n    });\r\n    const [topRatedData, setTopRatedData] = useState({\r\n        category: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n    });\r\n\r\n    const popScrollRef = useHorizontalScroll(false);\r\n    const topScrollRef = useHorizontalScroll(false);\r\n    const watchScrollRef = useHorizontalScroll(false);\r\n\r\n    const getPopularMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/popular?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPopularData((prev) => {\r\n            return { ...prev, movie: data.results };\r\n        });\r\n    };\r\n\r\n    const getPopularTVData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/popular?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPopularData((prev) => {\r\n            return { ...prev, tv: data.results };\r\n        });\r\n    };\r\n\r\n    const getTopRatedMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/top_rated?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTopRatedData((prev) => {\r\n            return { ...prev, movie: data.results };\r\n        });\r\n    };\r\n\r\n    const getTopRatedTVData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/top_rated?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTopRatedData((prev) => {\r\n            return { ...prev, tv: data.results };\r\n        });\r\n    };\r\n\r\n    const togglePopularCategory = () => {\r\n        setPopularData({\r\n            ...popularData,\r\n            category: popularData.category === \"movie\" ? \"tv\" : \"movie\",\r\n        });\r\n    };\r\n\r\n    const toggleTopRatedCategory = () => {\r\n        setTopRatedData({\r\n            ...topRatedData,\r\n            category: topRatedData.category === \"movie\" ? \"tv\" : \"movie\",\r\n        });\r\n    };\r\n\r\n    const toggleWatchlistCategory = () => {\r\n        setWatchList({\r\n            ...watchList,\r\n            category: watchList.category === \"movie\" ? \"tv\" : \"movie\",\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPopularMovieData();\r\n        getPopularTVData();\r\n        getTopRatedMovieData();\r\n        getTopRatedTVData();\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"homepage\">\r\n            <section id=\"popular\" className=\"section\">\r\n                <h2>What's Popular</h2>\r\n                <ToggleButton\r\n                    handleClick={togglePopularCategory}\r\n                    active={popularData.category}\r\n                />\r\n                <div\r\n                    id=\"popular-container\"\r\n                    className=\"homepage-render-container\"\r\n                    ref={popScrollRef}\r\n                >\r\n                    {popularData.category === \"movie\" ? (\r\n                        popularData.movie.map((movie) => {\r\n                            return (\r\n                                <RenderedCard\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    found={isMovieInWatchlist(movie.id)}\r\n                                    imgSrc={movie.poster_path}\r\n                                    linkTo={`/result/movie/${movie.id}`}\r\n                                    title={movie.title}\r\n                                    vote={movie.vote_average}\r\n                                    removeCat={\"movie\"}\r\n                                    removeID={movie.id}\r\n                                    addCat={\"movie\"}\r\n                                    addID={movie}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : popularData.category === \"tv\" ? (\r\n                        popularData.tv.map((tv) => {\r\n                            return (\r\n                                <RenderedCard\r\n                                    key={tv.id}\r\n                                    id={tv.id}\r\n                                    found={isTvShowInWatchlist(tv.id)}\r\n                                    imgSrc={tv.poster_path}\r\n                                    linkTo={`/result/tv/${tv.id}`}\r\n                                    title={tv.name}\r\n                                    vote={tv.vote_average}\r\n                                    removeCat={\"tv\"}\r\n                                    removeID={tv.id}\r\n                                    addCat={\"tv\"}\r\n                                    addID={tv}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            <section id=\"rated\" className=\"section\">\r\n                <h2>Top Rated</h2>\r\n                <ToggleButton\r\n                    handleClick={toggleTopRatedCategory}\r\n                    active={topRatedData.category}\r\n                />\r\n                <div\r\n                    id=\"top-rated-container\"\r\n                    className=\"homepage-render-container\"\r\n                    ref={topScrollRef}\r\n                >\r\n                    {topRatedData.category === \"movie\" ? (\r\n                        topRatedData.movie.map((movie) => {\r\n                            return (\r\n                                <RenderedCard\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    found={isMovieInWatchlist(movie.id)}\r\n                                    imgSrc={movie.poster_path}\r\n                                    linkTo={`/result/movie/${movie.id}`}\r\n                                    title={movie.title}\r\n                                    vote={movie.vote_average}\r\n                                    removeCat={\"movie\"}\r\n                                    removeID={movie.id}\r\n                                    addCat={\"movie\"}\r\n                                    addID={movie}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : topRatedData.category === \"tv\" ? (\r\n                        topRatedData.tv.map((tv) => {\r\n                            return (\r\n                                <RenderedCard\r\n                                    key={tv.id}\r\n                                    id={tv.id}\r\n                                    found={isTvShowInWatchlist(tv.id)}\r\n                                    imgSrc={tv.poster_path}\r\n                                    linkTo={`/result/tv/${tv.id}`}\r\n                                    title={tv.name}\r\n                                    vote={tv.vote_average}\r\n                                    removeCat={\"tv\"}\r\n                                    removeID={tv.id}\r\n                                    addCat={\"tv\"}\r\n                                    addID={tv}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            <section id=\"watchlist\" className=\"section\">\r\n                <h2>Watchlist</h2>\r\n                <ToggleButton\r\n                    handleClick={toggleWatchlistCategory}\r\n                    active={watchList.category}\r\n                />\r\n                <div\r\n                    id=\"watchlist-container\"\r\n                    className=\"homepage-render-container\"\r\n                    ref={watchScrollRef}\r\n                >\r\n                    {(watchList.category === \"movie\" &&\r\n                        !watchList.movie.length) ||\r\n                    (watchList.category === \"tv\" && !watchList.tv.length) ? (\r\n                        <div id=\"watchlist-empty\">\r\n                            <h2>Your Watchlist is Empty...</h2>\r\n                        </div>\r\n                    ) : watchList.category === \"movie\" ? (\r\n                        watchList.movie.map((item) => {\r\n                            return (\r\n                                <RenderedCard\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    found={isMovieInWatchlist(item.id)}\r\n                                    imgSrc={item.poster_path}\r\n                                    linkTo={`/result/movie/${item.id}`}\r\n                                    title={item.title}\r\n                                    vote={item.vote_average}\r\n                                    removeCat={\"movie\"}\r\n                                    removeID={item.id}\r\n                                    addCat={\"movie\"}\r\n                                    addID={item}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : watchList.category === \"tv\" ? (\r\n                        watchList.tv.map((item) => {\r\n                            return (\r\n                                <RenderedCard\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    found={isTvShowInWatchlist(item.id)}\r\n                                    imgSrc={item.poster_path}\r\n                                    linkTo={`/result/tv/${item.id}`}\r\n                                    title={item.name}\r\n                                    vote={item.vote_average}\r\n                                    removeCat={\"tv\"}\r\n                                    removeID={item.id}\r\n                                    addCat={\"tv\"}\r\n                                    addID={item}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Searchbar = () => {\r\n    const [searchTitle, setSearchTitle] = useState(\"\");\r\n    const [category, setCategory] = useState(\"movie\");\r\n\r\n    const { search, trendingData, setTrendingData } = useGlobalContext();\r\n\r\n    useEffect(() => {\r\n        setTrendingData({ ...trendingData, type: category });\r\n    }, [category]);\r\n\r\n    return (\r\n        <form id=\"title-searchbar\">\r\n            <div className=\"title-bar\">\r\n                <label htmlFor=\"title-input\" className=\"hidden-label\">\r\n                    Location Input\r\n                </label>\r\n                <input\r\n                    id=\"title-input\"\r\n                    type=\"text\"\r\n                    value={searchTitle}\r\n                    placeholder=\"Search for a title\"\r\n                    onChange={(e) => {\r\n                        setSearchTitle(e.target.value);\r\n                    }}\r\n                />\r\n                <label htmlFor=\"search-btn\" className=\"hidden-label\">\r\n                    Search Button\r\n                </label>\r\n                <button\r\n                    id=\"search-btn\"\r\n                    type=\"submit\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        search(category, searchTitle);\r\n                        setSearchTitle(\"\");\r\n                    }}\r\n                >\r\n                    Search\r\n                </button>\r\n                <label\r\n                    htmlFor=\"search-options-dropdown\"\r\n                    className=\"hidden-label\"\r\n                >\r\n                    Search Options\r\n                </label>\r\n                <select\r\n                    value={category}\r\n                    onChange={(e) => {\r\n                        setCategory(e.target.value);\r\n                    }}\r\n                    id=\"search-options-dropdown\"\r\n                >\r\n                    <option value=\"movie\">Movie</option>\r\n                    <option value=\"tv\">TV Show</option>\r\n                    <option value=\"people\">Person</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst MovieResultData = ({ movie }) => {\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isMovieInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n    const found = isMovieInWatchlist(movie.id);\r\n    return (\r\n        <div id=\"movie-search-results\">\r\n            <Link\r\n                to={`/result/movie/${movie.id}`}\r\n                id=\"movie-image-container\"\r\n                className=\"movie-link\"\r\n            >\r\n                {movie.poster_path === null ? (\r\n                    <div className=\"search-img\">\r\n                        <AiOutlineFileImage\r\n                            className=\"btn-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <img\r\n                        id=\"movie-img\"\r\n                        className=\"search-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n            </Link>\r\n            <div className=\"search-info\">\r\n                <Link to={`/result/movie/${movie.id}`} className=\"movie-link\">\r\n                    <h3 id=\"movie-title\">{movie.title}</h3>\r\n                </Link>\r\n                <p id=\"movie-release-date\">{convertDate(movie.release_date)}</p>\r\n                <p id=\"movie-overview\" className=\"overview\">\r\n                    {movie.overview}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className=\"remove-from-wishlist\"\r\n                    onClick={() => {\r\n                        found\r\n                            ? removeFromWatchList(\"movie\", movie.id)\r\n                            : addToWatchList(\"movie\", movie);\r\n                    }}\r\n                >\r\n                    {found ? (\r\n                        <IoMdRemoveCircleOutline\r\n                            className=\"remove-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    ) : (\r\n                        <IoMdAddCircleOutline\r\n                            className=\"add-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\n\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst TvResultData = ({ tvshow }) => {\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isTvShowInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n\r\n    const found = isTvShowInWatchlist(tvshow.id);\r\n    return (\r\n        <div id=\"tvshow-search-results\">\r\n            <Link\r\n                to={`/result/tv/${tvshow.id}`}\r\n                id=\"tvshow-image-container\"\r\n                className=\"tv-link\"\r\n            >\r\n                {tvshow.poster_path === null ? (\r\n                    <div className=\"search-img\">\r\n                        <AiOutlineFileImage\r\n                            className=\"btn-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <img\r\n                        id=\"tvshow-img\"\r\n                        className=\"search-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${tvshow.poster_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n            </Link>\r\n            <div className=\"search-info\">\r\n                <Link to={`/result/tv/${tvshow.id}`} className=\"tv-link\">\r\n                    <h3 id=\"tvshow-title\">{tvshow.name}</h3>\r\n                </Link>\r\n                <p id=\"tvshow-air-date\">{convertDate(tvshow.first_air_date)}</p>\r\n                <p id=\"tvshow-overview\" className=\"overview\">\r\n                    {tvshow.overview}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className=\"remove-from-wishlist\"\r\n                    onClick={() => {\r\n                        found\r\n                            ? removeFromWatchList(\"tv\", tvshow.id)\r\n                            : addToWatchList(\"tv\", tvshow);\r\n                    }}\r\n                >\r\n                    {found ? (\r\n                        <IoMdRemoveCircleOutline\r\n                            className=\"remove-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    ) : (\r\n                        <IoMdAddCircleOutline\r\n                            className=\"add-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TvResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\n\r\nconst PeopleResultData = ({ person }) => {\r\n    return (\r\n        <div id=\"person-result-card\">\r\n            <div id=\"person-search-results\">\r\n                <Link to={`/result/people/${person.id}`}>\r\n                    <div id=\"person-image-container\">\r\n                        {person.profile_path === null ? (\r\n                            <div className=\"search-img\">\r\n                                <AiOutlineFileImage\r\n                                    className=\"btn-icon\"\r\n                                    aria-hidden={true}\r\n                                    focusable={false}\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <img\r\n                                id=\"person-img\"\r\n                                className=\"search-img\"\r\n                                src={`https://image.tmdb.org/t/p/w500/${person.profile_path}`}\r\n                                alt=\"\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Link>\r\n                <div className=\"search-info\">\r\n                    <Link to={`/result/people/${person.id}`}>\r\n                        <h3 id=\"person-name\">{person.name}</h3>\r\n                    </Link>\r\n                    <p id=\"person-known-for\">{person.known_for_department}</p>\r\n                    {person.known_for.map((role) => {\r\n                        return (\r\n                            <div key={role.id}>\r\n                                <p>{role.title}</p>\r\n                                <p>{role.release_date}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TrendingData = ({ title, img, id, link }) => {\r\n    return (\r\n        <div className=\"trending-tile\">\r\n            <img\r\n                src={`https://image.tmdb.org/t/p/w500/${img}`}\r\n                alt=\"\"\r\n                className=\"trending-img\"\r\n            />\r\n            <Link to={`/result/${link}/${id}`} className=\"trending-link\">\r\n                <h3 className=\"trending-title\">{title}</h3>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrendingData;\r\n","import React, { useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport useHorizontalScroll from \"../../hooks/useHorizontalScroll\";\r\nimport MovieResultData from \"../SearchResultsCard/movieresultdata\";\r\nimport TvResultData from \"../SearchResultsCard/tvresultdata\";\r\nimport PeopleResultData from \"../SearchResultsCard/peopleresultdata\";\r\nimport TrendingData from \"../SearchTrending/trendingdata\";\r\n\r\nconst SearchResults = () => {\r\n    const { searchResults, trendingData, setTrendingData } = useGlobalContext();\r\n\r\n    const movieTrendingRef = useHorizontalScroll();\r\n    const tvTrendingRef = useHorizontalScroll();\r\n    const peopleTrendingRef = useHorizontalScroll();\r\n\r\n    const getTrendingMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/movie/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n    const getTrendingTVData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/tv/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n    const getTrendingPeopleData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/person/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n\r\n    const getAllTrending = async () => {\r\n        const obj = {\r\n            type: \"movie\",\r\n            movie: await getTrendingMovieData(),\r\n            tv: await getTrendingTVData(),\r\n            person: await getTrendingPeopleData(),\r\n        };\r\n        setTrendingData(obj);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllTrending();\r\n    }, []);\r\n\r\n    if (searchResults.results.length === 0) {\r\n        switch (trendingData.type) {\r\n            case \"movie\":\r\n                return (\r\n                    <div\r\n                        className=\"trending-data-container\"\r\n                        ref={movieTrendingRef}\r\n                    >\r\n                        {trendingData.movie.map((film) => {\r\n                            return (\r\n                                <TrendingData\r\n                                    key={film.id}\r\n                                    id={film.id}\r\n                                    title={film.title}\r\n                                    img={film.poster_path}\r\n                                    link={\"movie\"}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            case \"tv\":\r\n                return (\r\n                    <div\r\n                        className=\"trending-data-container\"\r\n                        ref={tvTrendingRef}\r\n                    >\r\n                        {trendingData.tv.map((show) => {\r\n                            return (\r\n                                <TrendingData\r\n                                    key={show.id}\r\n                                    id={show.id}\r\n                                    title={show.name}\r\n                                    img={show.poster_path}\r\n                                    link={\"tv\"}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            case \"people\":\r\n                return (\r\n                    <div\r\n                        className=\"trending-data-container\"\r\n                        ref={peopleTrendingRef}\r\n                    >\r\n                        {trendingData.person.map((peep) => {\r\n                            return (\r\n                                <TrendingData\r\n                                    key={peep.id}\r\n                                    id={peep.id}\r\n                                    title={peep.name}\r\n                                    img={peep.profile_path}\r\n                                    link={\"people\"}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n    } else {\r\n        return (\r\n            <div id=\"search-results-container\">\r\n                {searchResults.results.map((item, index) => {\r\n                    switch (searchResults.category) {\r\n                        case \"movie\":\r\n                            return (\r\n                                <MovieResultData\r\n                                    key={item.id}\r\n                                    index={index}\r\n                                    movie={item}\r\n                                />\r\n                            );\r\n                        case \"tv\":\r\n                            return (\r\n                                <TvResultData\r\n                                    index={index}\r\n                                    tvshow={item}\r\n                                    key={item.id}\r\n                                />\r\n                            );\r\n                        case \"people\":\r\n                            return (\r\n                                <PeopleResultData\r\n                                    key={item.id}\r\n                                    index={index}\r\n                                    person={item}\r\n                                />\r\n                            );\r\n                        default:\r\n                            break;\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\n\r\nconst FullScreenReview = ({ author, written, review }) => {\r\n    return (\r\n        <div className=\"fullscreen-review\">\r\n            <h4>A review by {author}</h4>\r\n            <h5>\r\n                <i>\r\n                    Written by {author} on {written}\r\n                </i>\r\n            </h5>\r\n            <p className=\"review-content\">{review}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FullScreenReview;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { AiFillStar, AiOutlineFileImage } from \"react-icons/ai\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport FullScreenReview from \"./fullscreenreview/fullscreenreview\";\r\n\r\nconst MovieFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [movieData, setMovieData] = useState({});\r\n    const [movieReviewData, setMovieReviewData] = useState({});\r\n    const [movieCreditData, setMovieCreditData] = useState({});\r\n    const [toggle, setToggle] = useState({ category: \"cast\" });\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isMovieInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n\r\n    const getMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieData(data);\r\n    };\r\n\r\n    const getMovieReview = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieReviewData(data);\r\n    };\r\n\r\n    const getMovieCredit = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieCreditData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMovieData();\r\n        getMovieReview();\r\n        getMovieCredit();\r\n    }, []);\r\n\r\n    const found = isMovieInWatchlist(movieData.id);\r\n\r\n    return (\r\n        <div\r\n            className=\"fullscreen\"\r\n            // style={{\r\n            //     backgroundImage:\r\n            //         \"url(\" +\r\n            //         `http://image.tmdb.org/t/p/w500/${movieData.backdrop_path}` +\r\n            //         \")\",\r\n            //     backgroundSize: \"cover\",\r\n            //     backgroundPosition: \"center\",\r\n            // }}\r\n        >\r\n            <div className=\"fullscreen-card\">\r\n                <img\r\n                    className=\"fullscreen-img\"\r\n                    src={`https://image.tmdb.org/t/p/w500/${movieData.poster_path}`}\r\n                    alt=\"\"\r\n                />\r\n                <section className=\"fullscreen-section\">\r\n                    <section className=\"fullscreen-info\">\r\n                        <h1 className=\"fullscreen-title\">{movieData.title}</h1>\r\n                        <div className=\"fullscreen-list-info\">\r\n                            <p className=\"fullscreen-release-date\">\r\n                                {convertDate(movieData.release_date)}\r\n                            </p>\r\n                            <div className=\"ball\"></div>\r\n                            <div className=\"fullscreen-genre\">\r\n                                {movieData.genres !== undefined ? (\r\n                                    movieData.genres.map((type) => {\r\n                                        return <p key={type.id}>{type.name}</p>;\r\n                                    })\r\n                                ) : (\r\n                                    <p></p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"ball\"></div>\r\n                            <p>{movieData.runtime} mins</p>\r\n                        </div>\r\n                        <div className=\"fullscreen-rating\">\r\n                            <h4 className=\"average-score-title\">\r\n                                Average Score:\r\n                            </h4>\r\n                            <p className=\"fullscreen-vote\">\r\n                                <AiFillStar className=\"render-icon\" />\r\n                                {movieData.vote_average}\r\n                            </p>\r\n                            <button\r\n                                className=\"add-remove-button\"\r\n                                onClick={() => {\r\n                                    found\r\n                                        ? removeFromWatchList(\r\n                                              \"movie\",\r\n                                              movieData.id\r\n                                          )\r\n                                        : addToWatchList(\"movie\", movieData);\r\n                                }}\r\n                            >\r\n                                {found ? (\r\n                                    <IoMdRemoveCircleOutline\r\n                                        className=\"remove-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                ) : (\r\n                                    <IoMdAddCircleOutline\r\n                                        className=\"add-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"fullscreen-production\">\r\n                            {movieData.production_companies !== undefined ? (\r\n                                movieData.production_companies.map(\r\n                                    (company) => {\r\n                                        return (\r\n                                            <p\r\n                                                key={company.id}\r\n                                                className=\"company-name\"\r\n                                            >\r\n                                                {company.name}\r\n                                            </p>\r\n                                        );\r\n                                    }\r\n                                )\r\n                            ) : (\r\n                                <p></p>\r\n                            )}\r\n                        </div>\r\n                        <h4 className=\"fullscreen-tagline\">\r\n                            <i>{movieData.tagline}</i>\r\n                        </h4>\r\n                        <div className=\"fullscreen-overview\">\r\n                            <h3>Overview</h3>\r\n                            <p>{movieData.overview}</p>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"review-cast-btn-container\">\r\n                        <div className=\"review-cast-toggle-button\">\r\n                            <button\r\n                                id=\"cast-btn\"\r\n                                className={`fullscreen-toggle-btn cast-btn ${\r\n                                    toggle.category === \"cast\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() => setToggle({ category: \"cast\" })}\r\n                            >\r\n                                Cast\r\n                            </button>\r\n                            <button\r\n                                id=\"review-btn\"\r\n                                className={`fullscreen-toggle-btn review-btn ${\r\n                                    toggle.category === \"review\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() =>\r\n                                    setToggle({ category: \"review\" })\r\n                                }\r\n                            >\r\n                                Reviews\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    {toggle.category === \"review\" ? (\r\n                        movieReviewData.results !== undefined ? (\r\n                            <div className=\"fullscreen-reviews\">\r\n                                {movieReviewData.results.map(\r\n                                    (result, index) => {\r\n                                        return (\r\n                                            <FullScreenReview\r\n                                                key={index}\r\n                                                author={result.author}\r\n                                                written={convertDate(\r\n                                                    result.created_at\r\n                                                )}\r\n                                                review={result.content}\r\n                                            />\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : toggle.category === \"cast\" ? (\r\n                        movieCreditData.cast !== undefined ? (\r\n                            <div className=\"fullscreen-cast\">\r\n                                {movieCreditData.cast.map((cast) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={cast.id}\r\n                                            className=\"cast-credit\"\r\n                                        >\r\n                                            <div className=\"cast-img-container\">\r\n                                                {cast.profile_path === null ? (\r\n                                                    <div className=\"cast-btn-icon-container\">\r\n                                                        <AiOutlineFileImage\r\n                                                            className=\"cast-btn-icon\"\r\n                                                            aria-hidden={true}\r\n                                                            focusable={false}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <img\r\n                                                        className=\"cast-img\"\r\n                                                        src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <Link\r\n                                                to={`/result/people/${cast.id}`}\r\n                                                className=\"cast-name\"\r\n                                            >\r\n                                                {cast.character}\r\n                                            </Link>\r\n                                            <p className=\"cast-role\">\r\n                                                {cast.name}\r\n                                            </p>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieFullScreenResult;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FullScreenReview from \"./fullscreenreview/fullscreenreview\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { AiFillStar, AiOutlineFileImage } from \"react-icons/ai\";\r\n\r\nconst TvFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [tvData, setTvData] = useState({});\r\n    const [tvResultData, setTvResultData] = useState({});\r\n    const [tvCreditData, setTvCreditData] = useState({});\r\n    const [toggle, setToggle] = useState({ category: \"cast\" });\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isTvShowInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n\r\n    const getTvData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvData(data);\r\n    };\r\n\r\n    const getTvReview = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvResultData(data);\r\n    };\r\n\r\n    const getMovieCredit = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}/credits?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvCreditData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTvData();\r\n        getTvReview();\r\n        getMovieCredit();\r\n    }, []);\r\n\r\n    const found = isTvShowInWatchlist(tvData.id);\r\n\r\n    return (\r\n        <div\r\n            className=\"fullscreen\"\r\n            // style={{\r\n            //     backgroundImage:\r\n            //         \"url(\" +\r\n            //         `http://image.tmdb.org/t/p/w500/${tvData.backdrop_path}` +\r\n            //         \")\",\r\n            //     backgroundSize: \"cover\",\r\n            //     backgroundPosition: \"center\",\r\n            // }}\r\n        >\r\n            <div className=\"fullscreen-card\">\r\n                <img\r\n                    className=\"fullscreen-img\"\r\n                    src={`https://image.tmdb.org/t/p/w500/${tvData.poster_path}`}\r\n                    alt=\"\"\r\n                />\r\n                <section className=\"fullscreen-section\">\r\n                    <section className=\"fullscreen-info\">\r\n                        <h1 className=\"fullscreen-title\">{tvData.name}</h1>\r\n                        <div className=\"fullscreen-list-info\">\r\n                            <p className=\"fullscreen-release-date\">\r\n                                {convertDate(tvData.release_date)}\r\n                            </p>\r\n                            <div className=\"ball\"></div>\r\n                            <div className=\"fullscreen-genre\">\r\n                                {tvData.genres !== undefined ? (\r\n                                    tvData.genres.map((type) => {\r\n                                        return <p key={type.id}>{type.name}</p>;\r\n                                    })\r\n                                ) : (\r\n                                    <p></p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"ball\"></div>\r\n                            <p>{tvData.runtime} mins</p>\r\n                        </div>\r\n                        <div className=\"fullscreen-rating\">\r\n                            <h4 className=\"average-score-title\">\r\n                                Average Score:\r\n                            </h4>\r\n                            <p className=\"fullscreen-vote\">\r\n                                <AiFillStar className=\"render-icon\" />\r\n                                {tvData.vote_average}\r\n                            </p>\r\n                            <button\r\n                                className=\"add-remove-button\"\r\n                                onClick={() => {\r\n                                    found\r\n                                        ? removeFromWatchList(\"tv\", tvData.id)\r\n                                        : addToWatchList(\"tv\", tvData);\r\n                                }}\r\n                            >\r\n                                {found ? (\r\n                                    <IoMdRemoveCircleOutline\r\n                                        className=\"remove-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                ) : (\r\n                                    <IoMdAddCircleOutline\r\n                                        className=\"add-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"fullscreen-production\">\r\n                            {tvData.production_companies !== undefined ? (\r\n                                tvData.production_companies.map((company) => {\r\n                                    return (\r\n                                        <p\r\n                                            key={company.id}\r\n                                            className=\"company-name\"\r\n                                        >\r\n                                            {company.name}\r\n                                        </p>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <p></p>\r\n                            )}\r\n                        </div>\r\n                        <h4 className=\"fullscreen-tagline\">\r\n                            <i>{tvData.tagline}</i>\r\n                        </h4>\r\n                        <div className=\"fullscreen-overview\">\r\n                            <h3>Overview</h3>\r\n                            <p>{tvData.overview}</p>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"review-cast-btn-container\">\r\n                        <div className=\"review-cast-toggle-button\">\r\n                            <button\r\n                                id=\"cast-btn\"\r\n                                className={`fullscreen-toggle-btn cast-btn ${\r\n                                    toggle.category === \"cast\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() => setToggle({ category: \"cast\" })}\r\n                            >\r\n                                Cast\r\n                            </button>\r\n                            <button\r\n                                id=\"review-btn\"\r\n                                className={`fullscreen-toggle-btn review-btn ${\r\n                                    toggle.category === \"review\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() =>\r\n                                    setToggle({ category: \"review\" })\r\n                                }\r\n                            >\r\n                                Reviews\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    {toggle.category === \"review\" ? (\r\n                        tvResultData.results !== undefined ? (\r\n                            <div className=\"fullscreen-reviews\">\r\n                                {tvResultData.results.map((result, index) => {\r\n                                    return (\r\n                                        <FullScreenReview\r\n                                            key={index}\r\n                                            author={result.author}\r\n                                            written={convertDate(\r\n                                                result.created_at\r\n                                            )}\r\n                                            review={result.content}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : toggle.category === \"cast\" ? (\r\n                        tvCreditData.cast !== undefined ? (\r\n                            <div className=\"fullscreen-cast\">\r\n                                {tvCreditData.cast.map((cast) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={cast.id}\r\n                                            className=\"cast-credit\"\r\n                                        >\r\n                                            <div className=\"cast-img-container\">\r\n                                                {cast.profile_path === null ? (\r\n                                                    <AiOutlineFileImage\r\n                                                        className=\"cast-btn-icon\"\r\n                                                        aria-hidden={true}\r\n                                                        focusable={false}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <img\r\n                                                        className=\"cast-img\"\r\n                                                        src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <Link\r\n                                                to={`/result/people/${cast.id}`}\r\n                                                className=\"cast-name\"\r\n                                            >\r\n                                                {cast.character}\r\n                                            </Link>\r\n                                            <p className=\"cast-role\">\r\n                                                {cast.name}\r\n                                            </p>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TvFullScreenResult;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PeopleFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [peopleData, setPeopleData] = useState({});\r\n    const [peopleCreditData, setPeopleCreditData] = useState({});\r\n    const [peopleImageData, setPeopleImageData] = useState({});\r\n    const [toggle, setToggle] = useState({ category: \"credit\" });\r\n\r\n    const { convertDate } = useGlobalContext();\r\n\r\n    const getPeopleData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/person/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPeopleData(data);\r\n    };\r\n\r\n    const getPeopleCreditData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/person/${id}/combined_credits?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPeopleCreditData(data);\r\n    };\r\n\r\n    const getPeopleImageData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/person/${id}/images?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        setPeopleImageData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPeopleData();\r\n        getPeopleCreditData();\r\n        getPeopleImageData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <div className=\"fullscreen-card\">\r\n                {peopleData.profile_path === null ? (\r\n                    <div className=\"fullscreen-img\">\r\n                        <AiOutlineFileImage\r\n                            className=\"cast-btn-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <img\r\n                        className=\"fullscreen-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${peopleData.profile_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n                <section className=\"person-fullscreen-section\">\r\n                    <section className=\"fullscreen-info\">\r\n                        <h1 className=\"fullscreen-title\">{peopleData.name}</h1>\r\n                        <section className=\"person-info\">\r\n                            <div className=\"person-info-div\">\r\n                                <h4 className=\"person-info-title\">\r\n                                    Birthdate:\r\n                                </h4>\r\n                                <p className=\"person-info-para\">\r\n                                    {convertDate(peopleData.birthday)}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"person-info-div\">\r\n                                <h4 className=\"person-info-title\">\r\n                                    Place of Birth:\r\n                                </h4>\r\n                                <p className=\"person-info-para\">\r\n                                    {peopleData.place_of_birth}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"person-info-div\">\r\n                                <h4 className=\"person-info-title\">\r\n                                    Known For:\r\n                                </h4>\r\n                                <p className=\"person-info-para\">\r\n                                    {peopleData.known_for_department}\r\n                                </p>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"person-biography\">\r\n                            <h3>Biography</h3>\r\n                            <p className=\"person-bio-content\">\r\n                                {peopleData.biography}\r\n                            </p>\r\n                        </section>\r\n                    </section>\r\n                    <section className=\"review-cast-btn-container\">\r\n                        <div className=\"review-cast-toggle-button\">\r\n                            <button\r\n                                id=\"cast-btn\"\r\n                                className={`fullscreen-toggle-btn cast-btn ${\r\n                                    toggle.category === \"credit\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() =>\r\n                                    setToggle({ category: \"credit\" })\r\n                                }\r\n                            >\r\n                                Movie\r\n                            </button>\r\n                            <button\r\n                                id=\"review-btn\"\r\n                                className={`fullscreen-toggle-btn review-btn ${\r\n                                    toggle.category === \"image\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() => setToggle({ category: \"image\" })}\r\n                            >\r\n                                Images\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    {toggle.category === \"credit\" ? (\r\n                        <div className=\"person-fullscreen-cast\">\r\n                            {peopleCreditData.cast !== undefined ? (\r\n                                peopleCreditData.cast.map((cast, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={index}\r\n                                            className=\"cast-credit\"\r\n                                        >\r\n                                            <div className=\"cast-img-container\">\r\n                                                {cast.poster_path === null ? (\r\n                                                    <div className=\"cast-btn-icon-container\">\r\n                                                        <AiOutlineFileImage\r\n                                                            className=\"cast-btn-icon\"\r\n                                                            aria-hidden={true}\r\n                                                            focusable={false}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <img\r\n                                                        className=\"cast-img\"\r\n                                                        src={`https://image.tmdb.org/t/p/w500/${cast.poster_path}`}\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n                                            <Link\r\n                                                to={`/result/movie/${cast.id}`}\r\n                                                className=\"cast-name\"\r\n                                            >\r\n                                                <p className=\"cast-name\">\r\n                                                    {cast.title}\r\n                                                </p>\r\n                                            </Link>\r\n                                            <p className=\"cast-role\">\r\n                                                {cast.character}\r\n                                            </p>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <div></div>\r\n                            )}\r\n                        </div>\r\n                    ) : toggle.category === \"image\" ? (\r\n                        <div className=\"person-fullscreen-images-container\">\r\n                            {peopleImageData.profiles !== null ? (\r\n                                peopleImageData.profiles.map((img, index) => {\r\n                                    return (\r\n                                        <img\r\n                                            className=\"person-img\"\r\n                                            src={`https://image.tmdb.org/t/p/w500/${img.file_path}`}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <div></div>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleFullScreenResult;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Watchlist = () => {\r\n    const { Watchlist } = useGlobalContext();\r\n    return <div></div>;\r\n};\r\n\r\nexport default Watchlist;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/navbar\";\r\nimport Homepage from \"./components/Homepage/homepage\";\r\nimport Searchbar from \"./components/Searchbar/searchbar\";\r\nimport SearchResults from \"./components/SearchResults/searchresults\";\r\nimport MovieFullScreenResult from \"./components/FullScreenResult/moviefullscreenresult\";\r\nimport TvFullScreenResult from \"./components/FullScreenResult/tvfullscreenresult\";\r\nimport PeopleFullScreenResult from \"./components/FullScreenResult/peoplefullscreenresults\";\r\nimport Watchlist from \"./components/Watchlist/watchlist\";\r\n// import Footer from \"./components/Navbar/footer\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <div id=\"app-container\">\r\n                <Navbar />\r\n\r\n                <Switch>\r\n                    <Route path=\"/search\">\r\n                        <Searchbar />\r\n                        <SearchResults />\r\n                    </Route>\r\n                    <Route path=\"/result/movie/:id\">\r\n                        <MovieFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/result/tv/:id\">\r\n                        <TvFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/result/people/:id\">\r\n                        <PeopleFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/watchlist\">\r\n                        <Watchlist />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Homepage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./components/Navbar/navbar.css\";\r\nimport \"./components/Homepage/homepage.css\";\r\nimport \"./components/Searchbar/searchbar.css\";\r\nimport \"./components/SearchResults/searchresults.css\";\r\nimport \"./components/FullScreenResult/fullscreenresults.css\";\r\nimport \"./components/SearchResultsCard/movieresultdata.css\";\r\nimport \"./components/SearchResultsCard/tvresultdata.css\";\r\nimport \"./components/SearchResultsCard/peopleresultdata.css\";\r\nimport \"./components/SearchTrending/trendingdata.css\";\r\nimport App from \"./App\";\r\nimport { AppProvider } from \"./context\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppProvider>\r\n            <App />\r\n        </AppProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}