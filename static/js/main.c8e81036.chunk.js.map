{"version":3,"sources":["components/Navbar/navbar.js","context.js","components/Homepage/homepage.js","components/Searchbar/searchbar.js","components/SearchResultsCard/movieresultdata.js","components/SearchResultsCard/tvresultdata.js","components/SearchResultsCard/peopleresultdata.js","components/SearchTrending/trendingdata.js","components/SearchResults/searchresults.js","components/FullScreenResult/moviefullscreenresult.js","components/FullScreenResult/tvfullscreenresult.js","components/FullScreenResult/peoplefullscreenresults.js","components/Watchlist/watchlist.js","App.js","index.js"],"names":["Navbar","id","className","to","AppContext","React","createContext","AppProvider","children","useState","category","results","searchResults","setSearchResults","movie","tv","watchList","setWatchList","type","person","trendingData","setTrendingData","searchMovies","query","a","fetch","response","json","data","console","log","searchTVShows","searchPeople","search","Provider","value","addToWatchList","item","find","w","removeFromWatchList","filter","isMovieInWatchlist","isTvShowInWatchlist","convertDate","info","Date","toLocaleString","day","month","year","useGlobalContext","useContext","Homepage","popularData","setPopularData","topRatedData","setTopRatedData","getPopularMovieData","getPopularTVData","getTopRatedMovieData","getTopRatedTVData","useEffect","onClick","map","found","src","poster_path","alt","title","vote_average","htmlFor","focusable","name","Searchbar","searchTitle","setSearchTitle","setCategory","placeholder","onChange","e","target","preventDefault","MovieResultData","release_date","overview","TvResultData","tvshow","first_air_date","PeopleResultData","profile_path","known_for_department","known_for","role","TrendingData","img","link","SearchResults","getTrendingMovieData","getTrendingTVData","getTrendingPeopleData","getAllTrending","obj","length","index","film","show","peep","MovieFullScreenResult","useParams","movieData","setMovieData","movieReviewData","setMovieReviewData","movieCreditData","setMovieCreditData","toggle","setToggle","getMovieData","getMovieReview","getMovieCredit","undefined","genres","runtime","production_companies","company","tagline","result","author","created_at","class","content","cast","character","TvFullScreenResult","tvData","setTvData","tvResultData","setTvResultData","getTvData","getTvReview","PeopleFullScreenResult","peopleData","setPeopleData","string","birthday","getPeopleData","place_of_birth","biography","Watchlist","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8e81036.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GoSearch } from \"react-icons/go\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav id=\"navbar\">\r\n            <ul id=\"navbar-list\">\r\n                <li>\r\n                    <Link className=\"nav-link\" to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link className=\"nav-link\" to=\"/watchlist\">\r\n                        Watchlist\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link className=\"nav-link\" to=\"/search\">\r\n                        <GoSearch className=\"link-icon\" />\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [searchResults, setSearchResults] = useState({\r\n        category: \"\",\r\n        results: [],\r\n    });\r\n    const [watchList, setWatchList] = useState({\r\n        category: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n    });\r\n    const [trendingData, setTrendingData] = useState({\r\n        type: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n        person: [],\r\n    });\r\n\r\n    const searchMovies = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setSearchResults({ category: \"movie\", results: data.results });\r\n    };\r\n\r\n    const searchTVShows = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/tv?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setSearchResults({ category: \"tv\", results: data.results });\r\n    };\r\n\r\n    const searchPeople = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/person?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setSearchResults({ category: \"people\", results: data.results });\r\n    };\r\n\r\n    const search = async (category, query) => {\r\n        switch (category) {\r\n            case \"movie\":\r\n                searchMovies(query);\r\n                break;\r\n            case \"tv\":\r\n                searchTVShows(query);\r\n                break;\r\n            case \"people\":\r\n                searchPeople(query);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const convertDate = (info) => {\r\n        const date = new Date(info);\r\n        const string = date.toLocaleString(\"default\", {\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n        });\r\n        return string;\r\n    };\r\n\r\n    const addToWatchList = (category, item) => {\r\n        if (\r\n            ![...watchList.movie, ...watchList.tv].find((w) => w.id === item.id)\r\n        ) {\r\n            if (category === \"movie\") {\r\n                setWatchList({\r\n                    ...watchList,\r\n                    movie: [...watchList.movie, item],\r\n                });\r\n            } else if (category === \"tv\") {\r\n                setWatchList({\r\n                    ...watchList,\r\n                    tv: [...watchList.tv, item],\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeFromWatchList = (category, id) => {\r\n        if (category === \"movie\") {\r\n            setWatchList({\r\n                ...watchList,\r\n                movie: watchList.movie.filter((item) => item.id !== id),\r\n            });\r\n        } else if (category === \"tv\") {\r\n            setWatchList({\r\n                ...watchList,\r\n                tv: watchList.tv.filter((item) => item.id !== id),\r\n            });\r\n        }\r\n    };\r\n\r\n    const isMovieInWatchlist = (id) => {\r\n        return watchList.movie.find((item) => item.id === id);\r\n    };\r\n    const isTvShowInWatchlist = (id) => {\r\n        return watchList.tv.find((item) => item.id === id);\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                trendingData,\r\n                setTrendingData,\r\n                search,\r\n                searchResults,\r\n                watchList,\r\n                setWatchList,\r\n                addToWatchList,\r\n                removeFromWatchList,\r\n                isMovieInWatchlist,\r\n                isTvShowInWatchlist,\r\n                convertDate,\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Homepage = () => {\r\n    const {\r\n        watchList,\r\n        setWatchList,\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isMovieInWatchlist,\r\n        isTvShowInWatchlist,\r\n    } = useGlobalContext();\r\n    const [popularData, setPopularData] = useState({\r\n        category: \"\",\r\n        results: [],\r\n    });\r\n    const [topRatedData, setTopRatedData] = useState({\r\n        category: \"\",\r\n        results: [],\r\n    });\r\n\r\n    const getPopularMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/popular?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPopularData({ category: \"movie\", results: data.results });\r\n    };\r\n\r\n    const getPopularTVData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/popular?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPopularData({ category: \"tv\", results: data.results });\r\n    };\r\n\r\n    const getTopRatedMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/top_rated?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTopRatedData({ category: \"movie\", results: data.results });\r\n    };\r\n\r\n    const getTopRatedTVData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/top_rated?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTopRatedData({ category: \"tv\", results: data.results });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPopularMovieData();\r\n        getTopRatedMovieData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"section\">\r\n                <h2>What's Popular</h2>\r\n                <div className=\"toggle-button-group\">\r\n                    <button\r\n                        className=\"toggle-btn movie-toggle\"\r\n                        onClick={getPopularMovieData}\r\n                    >\r\n                        Movie\r\n                    </button>\r\n                    <button\r\n                        className=\"toggle-btn tv-toggle\"\r\n                        onClick={getPopularTVData}\r\n                    >\r\n                        TV\r\n                    </button>\r\n                </div>\r\n\r\n                <div id=\"popular-container\">\r\n                    {popularData.category === \"movie\" ? (\r\n                        popularData.results.map((movie) => {\r\n                            const found = isMovieInWatchlist(movie.id);\r\n                            return (\r\n                                <div className=\"popular-card\" key={movie.id}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                                        alt=\"\"\r\n                                        className=\"popular-img\"\r\n                                    />\r\n                                    <Link\r\n                                        to={`/result/movie/${movie.id}`}\r\n                                        className=\"popular-card-link\"\r\n                                    >\r\n                                        <h3>{movie.title}</h3>\r\n                                    </Link>\r\n                                    <p className=\"popular-vote\">\r\n                                        {movie.vote_average}/10\r\n                                    </p>\r\n                                    <label\r\n                                        className=\"hidden-label\"\r\n                                        htmlFor=\"remove2\"\r\n                                    >\r\n                                        Remove/Add Watchlist\r\n                                    </label>\r\n                                    <button\r\n                                        id=\"remove2\"\r\n                                        className=\"remove-from-wishlist\"\r\n                                        onClick={() => {\r\n                                            found\r\n                                                ? removeFromWatchList(\r\n                                                      \"movie\",\r\n                                                      movie.id\r\n                                                  )\r\n                                                : addToWatchList(\r\n                                                      \"movie\",\r\n                                                      movie\r\n                                                  );\r\n                                        }}\r\n                                    >\r\n                                        {found ? (\r\n                                            <IoMdRemoveCircleOutline\r\n                                                className=\"remove-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        ) : (\r\n                                            <IoMdAddCircleOutline\r\n                                                className=\"add-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : popularData.category === \"tv\" ? (\r\n                        popularData.results.map((tv) => {\r\n                            const found = isTvShowInWatchlist(tv.id);\r\n                            return (\r\n                                <div className=\"popular-card\" key={tv.id}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${tv.poster_path}`}\r\n                                        alt=\"\"\r\n                                        className=\"popular-img\"\r\n                                    />\r\n                                    <Link\r\n                                        to={`/result/tv/${tv.id}`}\r\n                                        className=\"popular-card-link\"\r\n                                    >\r\n                                        <h3>{tv.name}</h3>\r\n                                    </Link>\r\n                                    <p className=\"popular-vote\">\r\n                                        {tv.vote_average}/10\r\n                                    </p>\r\n                                    <label\r\n                                        className=\"hidden-label\"\r\n                                        htmlFor=\"remove3\"\r\n                                    >\r\n                                        Remove/Add Watchlist\r\n                                    </label>\r\n                                    <button\r\n                                        id=\"remove3\"\r\n                                        className=\"remove-from-wishlist\"\r\n                                        onClick={() => {\r\n                                            found\r\n                                                ? removeFromWatchList(\r\n                                                      \"tv\",\r\n                                                      tv.id\r\n                                                  )\r\n                                                : addToWatchList(\"tv\", tv);\r\n                                        }}\r\n                                    >\r\n                                        {found ? (\r\n                                            <IoMdRemoveCircleOutline\r\n                                                className=\"remove-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        ) : (\r\n                                            <IoMdAddCircleOutline\r\n                                                className=\"add-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            <section className=\"section\">\r\n                <h2>Top Rated</h2>\r\n                <div className=\"toggle-button-group\">\r\n                    <button\r\n                        className=\"toggle-btn movie-toggle\"\r\n                        onClick={getTopRatedMovieData}\r\n                    >\r\n                        Movie\r\n                    </button>\r\n                    <button\r\n                        className=\"toggle-btn tv-toggle\"\r\n                        onClick={getTopRatedTVData}\r\n                    >\r\n                        TV\r\n                    </button>\r\n                </div>\r\n                <div id=\"top-rated-container\">\r\n                    {topRatedData.category === \"movie\" ? (\r\n                        topRatedData.results.map((movie) => {\r\n                            const found = isMovieInWatchlist(movie.id);\r\n                            return (\r\n                                <div className=\"top-rated-card\" key={movie.id}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                                        alt=\"\"\r\n                                        className=\"top-rated-img\"\r\n                                    />\r\n                                    <Link\r\n                                        to={`/result/movie/${movie.id}`}\r\n                                        className=\"top-rated-card-link\"\r\n                                    >\r\n                                        <h3>{movie.title}</h3>\r\n                                    </Link>\r\n                                    <p className=\"top-rated-vote\">\r\n                                        {movie.vote_average}/10\r\n                                    </p>\r\n                                    <label\r\n                                        className=\"hidden-label\"\r\n                                        htmlFor=\"remove4\"\r\n                                    >\r\n                                        Remove/Add Watchlist\r\n                                    </label>\r\n                                    <button\r\n                                        id=\"remove4\"\r\n                                        className=\"remove-from-wishlist\"\r\n                                        onClick={() => {\r\n                                            found\r\n                                                ? removeFromWatchList(\r\n                                                      \"movie\",\r\n                                                      movie.id\r\n                                                  )\r\n                                                : addToWatchList(\r\n                                                      \"movie\",\r\n                                                      movie\r\n                                                  );\r\n                                        }}\r\n                                    >\r\n                                        {found ? (\r\n                                            <IoMdRemoveCircleOutline\r\n                                                className=\"remove-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        ) : (\r\n                                            <IoMdAddCircleOutline\r\n                                                className=\"add-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : topRatedData.category === \"tv\" ? (\r\n                        topRatedData.results.map((tv) => {\r\n                            const found = isTvShowInWatchlist(tv.id);\r\n                            return (\r\n                                <div className=\"top-rated-card\" key={tv.id}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${tv.poster_path}`}\r\n                                        alt=\"\"\r\n                                        className=\"top-rated-img\"\r\n                                    />\r\n                                    <Link\r\n                                        to={`/result/tv/${tv.id}`}\r\n                                        className=\"top-rated-card-link\"\r\n                                    >\r\n                                        <h3>{tv.name}</h3>\r\n                                    </Link>\r\n                                    <p className=\"top-rated-vote\">\r\n                                        {tv.vote_average}/10\r\n                                    </p>\r\n                                    <label\r\n                                        className=\"hidden-label\"\r\n                                        htmlFor=\"remove5\"\r\n                                    >\r\n                                        Remove/Add Watchlist\r\n                                    </label>\r\n                                    <button\r\n                                        id=\"remove5\"\r\n                                        className=\"remove-from-wishlist\"\r\n                                        onClick={() => {\r\n                                            found\r\n                                                ? removeFromWatchList(\r\n                                                      \"tv\",\r\n                                                      tv.id\r\n                                                  )\r\n                                                : addToWatchList(\"tv\", tv);\r\n                                        }}\r\n                                    >\r\n                                        {found ? (\r\n                                            <IoMdRemoveCircleOutline\r\n                                                className=\"remove-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        ) : (\r\n                                            <IoMdAddCircleOutline\r\n                                                className=\"add-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n            <section className=\"watchlist\" className=\"section\">\r\n                <h2>Watchlist</h2>\r\n                <div className=\"toggle-button-group\">\r\n                    <button\r\n                        className=\"toggle-btn movie-toggle\"\r\n                        onClick={() =>\r\n                            setWatchList({ ...watchList, category: \"movie\" })\r\n                        }\r\n                    >\r\n                        Movie\r\n                    </button>\r\n                    <button\r\n                        className=\"toggle-btn tv-toggle\"\r\n                        onClick={() =>\r\n                            setWatchList({ ...watchList, category: \"tv\" })\r\n                        }\r\n                    >\r\n                        TV\r\n                    </button>\r\n                </div>\r\n                <div id=\"watchlist-container\">\r\n                    {watchList.category === \"movie\" ? (\r\n                        watchList.movie.map((item) => {\r\n                            const found = isMovieInWatchlist(item.id);\r\n                            return (\r\n                                <div className=\"watchlist-card\" key={item.id}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n                                        alt=\"\"\r\n                                        className=\"watchlist-img\"\r\n                                    />\r\n                                    <Link\r\n                                        to={`/result/movie/${item.id}`}\r\n                                        className=\"wishlist-card-link\"\r\n                                    >\r\n                                        <h3 className=\"watchlist-title\">\r\n                                            {item.title}\r\n                                        </h3>\r\n                                    </Link>\r\n                                    <p className=\"watchlist-vote\">\r\n                                        {item.vote_average}/10\r\n                                    </p>\r\n                                    <label\r\n                                        className=\"hidden-label\"\r\n                                        htmlFor=\"remove-from-wishlist\"\r\n                                    >\r\n                                        Remove/Add Watchlist\r\n                                    </label>\r\n                                    <button\r\n                                        id=\"remove-from-wishlist\"\r\n                                        className=\"remove-from-wishlist\"\r\n                                        onClick={() => {\r\n                                            if (found) {\r\n                                                removeFromWatchList(\r\n                                                    \"movie\",\r\n                                                    item.id\r\n                                                );\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <IoMdRemoveCircleOutline\r\n                                            className=\"remove-icon\"\r\n                                            aria-hidden={true}\r\n                                            focusable={false}\r\n                                        />\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : watchList.category === \"tv\" ? (\r\n                        watchList.tv.map((item) => {\r\n                            const found = isTvShowInWatchlist(item.id);\r\n                            return (\r\n                                <div className=\"watchlist-card\" key={item.id}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n                                        alt=\"\"\r\n                                        className=\"watchlist-img\"\r\n                                    />\r\n                                    <Link\r\n                                        to={`/result/tv/${item.id}`}\r\n                                        className=\"wishlist-card-link\"\r\n                                    >\r\n                                        <h3>{item.name}</h3>\r\n                                    </Link>\r\n                                    <p className=\"watchlist-vote\">\r\n                                        {item.vote_average}/10\r\n                                    </p>\r\n                                    <label\r\n                                        className=\"hidden-label\"\r\n                                        htmlFor=\"remove1\"\r\n                                    >\r\n                                        Remove/Add Watchlist\r\n                                    </label>\r\n                                    <button\r\n                                        id=\"remove1\"\r\n                                        className=\"remove-from-wishlist\"\r\n                                        onClick={() => {\r\n                                            if (found) {\r\n                                                removeFromWatchList(\r\n                                                    \"tv\",\r\n                                                    item.id\r\n                                                );\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <IoMdRemoveCircleOutline\r\n                                            className=\"remove-icon\"\r\n                                            aria-hidden={true}\r\n                                            focusable={false}\r\n                                        />\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Searchbar = () => {\r\n    const [searchTitle, setSearchTitle] = useState(\"\");\r\n    const [category, setCategory] = useState(\"movie\");\r\n\r\n    const { search, trendingData, setTrendingData } = useGlobalContext();\r\n\r\n    useEffect(() => {\r\n        setTrendingData({ ...trendingData, type: category });\r\n    }, [category]);\r\n\r\n    return (\r\n        <form id=\"title-searchbar\">\r\n            <div className=\"title-bar\">\r\n                <label htmlFor=\"title-input\" className=\"hidden-label\">\r\n                    Location Input\r\n                </label>\r\n                <input\r\n                    id=\"title-input\"\r\n                    type=\"text\"\r\n                    value={searchTitle}\r\n                    placeholder=\"Search for a title\"\r\n                    onChange={(e) => {\r\n                        setSearchTitle(e.target.value);\r\n                    }}\r\n                />\r\n                <label htmlFor=\"search-btn\" className=\"hidden-label\">\r\n                    Search Button\r\n                </label>\r\n                <button\r\n                    id=\"search-btn\"\r\n                    type=\"submit\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        search(category, searchTitle);\r\n                        setSearchTitle(\"\");\r\n                    }}\r\n                >\r\n                    Search\r\n                </button>\r\n                <label\r\n                    htmlFor=\"search-options-dropdown\"\r\n                    className=\"hidden-label\"\r\n                >\r\n                    Search Options\r\n                </label>\r\n                <select\r\n                    value={category}\r\n                    onChange={(e) => {\r\n                        setCategory(e.target.value);\r\n                    }}\r\n                    id=\"search-options-dropdown\"\r\n                >\r\n                    <option value=\"movie\">Movie</option>\r\n                    <option value=\"tv\">TV Show</option>\r\n                    <option value=\"people\">Person</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst MovieResultData = ({ movie }) => {\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isMovieInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n    const found = isMovieInWatchlist(movie.id);\r\n    return (\r\n        <div id=\"movie-search-results\">\r\n            <Link\r\n                to={`/result/movie/${movie.id}`}\r\n                id=\"movie-image-container\"\r\n                className=\"movie-link\"\r\n            >\r\n                {movie.poster_path === null ? (\r\n                    <div className=\"search-img\">\r\n                        <AiOutlineFileImage\r\n                            className=\"btn-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <img\r\n                        id=\"movie-img\"\r\n                        className=\"search-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n            </Link>\r\n            <div className=\"search-info\">\r\n                <Link to={`/result/movie/${movie.id}`} className=\"movie-link\">\r\n                    <h3 id=\"movie-title\">{movie.title}</h3>\r\n                </Link>\r\n                <p id=\"movie-release-date\">{convertDate(movie.release_date)}</p>\r\n                <p id=\"movie-overview\" className=\"overview\">\r\n                    {movie.overview}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className=\"remove-from-wishlist\"\r\n                    onClick={() => {\r\n                        found\r\n                            ? removeFromWatchList(\"movie\", movie.id)\r\n                            : addToWatchList(\"movie\", movie);\r\n                    }}\r\n                >\r\n                    {found ? (\r\n                        <IoMdRemoveCircleOutline\r\n                            className=\"remove-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    ) : (\r\n                        <IoMdAddCircleOutline\r\n                            className=\"add-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\n\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst TvResultData = ({ tvshow }) => {\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isTvShowInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n\r\n    const found = isTvShowInWatchlist(tvshow.id);\r\n    return (\r\n        <div id=\"tvshow-search-results\">\r\n            <Link\r\n                to={`/result/tv/${tvshow.id}`}\r\n                id=\"tvshow-image-container\"\r\n                className=\"tv-link\"\r\n            >\r\n                {tvshow.poster_path === null ? (\r\n                    <div className=\"search-img\">\r\n                        <AiOutlineFileImage\r\n                            className=\"btn-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <img\r\n                        id=\"tvshow-img\"\r\n                        className=\"search-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${tvshow.poster_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n            </Link>\r\n            <div className=\"search-info\">\r\n                <Link to={`/result/tv/${tvshow.id}`} className=\"tv-link\">\r\n                    <h3 id=\"tvshow-title\">{tvshow.name}</h3>\r\n                </Link>\r\n                <p id=\"tvshow-air-date\">{convertDate(tvshow.first_air_date)}</p>\r\n                <p id=\"tvshow-overview\" className=\"overview\">\r\n                    {tvshow.overview}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className=\"remove-from-wishlist\"\r\n                    onClick={() => {\r\n                        found\r\n                            ? removeFromWatchList(\"tv\", tvshow.id)\r\n                            : addToWatchList(\"tv\", tvshow);\r\n                    }}\r\n                >\r\n                    {found ? (\r\n                        <IoMdRemoveCircleOutline\r\n                            className=\"remove-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    ) : (\r\n                        <IoMdAddCircleOutline\r\n                            className=\"add-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TvResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\n\r\nconst PeopleResultData = ({ person }) => {\r\n    return (\r\n        <div id=\"person-result-card\">\r\n            <div id=\"person-search-results\">\r\n                <Link to={`/result/people/${person.id}`}>\r\n                    <div id=\"person-image-container\">\r\n                        {person.profile_path === null ? (\r\n                            <div className=\"search-img\">\r\n                                <AiOutlineFileImage\r\n                                    className=\"btn-icon\"\r\n                                    aria-hidden={true}\r\n                                    focusable={false}\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <img\r\n                                id=\"person-img\"\r\n                                className=\"search-img\"\r\n                                src={`https://image.tmdb.org/t/p/w500/${person.profile_path}`}\r\n                                alt=\"\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </Link>\r\n                <div className=\"search-info\">\r\n                    <Link to={`/result/people/${person.id}`}>\r\n                        <h3 id=\"person-name\">{person.name}</h3>\r\n                    </Link>\r\n                    <p id=\"person-known-for\">{person.known_for_department}</p>\r\n                    {person.known_for.map((role) => {\r\n                        return (\r\n                            <div key={role.id}>\r\n                                <p>{role.title}</p>\r\n                                <p>{role.release_date}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TrendingData = ({ title, img, id, link }) => {\r\n    return (\r\n        <div className=\"trending-tile\">\r\n            <img\r\n                src={`https://image.tmdb.org/t/p/w500/${img}`}\r\n                alt=\"\"\r\n                className=\"trending-img\"\r\n            />\r\n            <Link to={`/result/${link}/${id}`} className=\"trending-link\">\r\n                <h3 className=\"trending-title\">{title}</h3>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrendingData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport MovieResultData from \"../SearchResultsCard/movieresultdata\";\r\nimport TvResultData from \"../SearchResultsCard/tvresultdata\";\r\nimport PeopleResultData from \"../SearchResultsCard/peopleresultdata\";\r\nimport TrendingData from \"../SearchTrending/trendingdata\";\r\n\r\nconst SearchResults = () => {\r\n    const { searchResults, trendingData, setTrendingData } = useGlobalContext();\r\n\r\n    const getTrendingMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/movie/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n    const getTrendingTVData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/tv/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n    const getTrendingPeopleData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/person/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n\r\n    const getAllTrending = async () => {\r\n        const obj = {\r\n            type: \"movie\",\r\n            movie: await getTrendingMovieData(),\r\n            tv: await getTrendingTVData(),\r\n            person: await getTrendingPeopleData(),\r\n        };\r\n        setTrendingData(obj);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllTrending();\r\n    }, []);\r\n\r\n    if (searchResults.results.length === 0) {\r\n        switch (trendingData.type) {\r\n            case \"movie\":\r\n                return (\r\n                    <div className=\"trending-data-container\">\r\n                        {trendingData.movie.map((film) => {\r\n                            return (\r\n                                <TrendingData\r\n                                    key={film.id}\r\n                                    id={film.id}\r\n                                    title={film.title}\r\n                                    img={film.poster_path}\r\n                                    link={\"movie\"}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            case \"tv\":\r\n                return (\r\n                    <div className=\"trending-data-container\">\r\n                        {trendingData.tv.map((show) => {\r\n                            return (\r\n                                <TrendingData\r\n                                    key={show.id}\r\n                                    id={show.id}\r\n                                    title={show.name}\r\n                                    img={show.poster_path}\r\n                                    link={\"tv\"}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            case \"people\":\r\n                return (\r\n                    <div className=\"trending-data-container\">\r\n                        {trendingData.person.map((peep) => {\r\n                            return (\r\n                                <TrendingData\r\n                                    key={peep.id}\r\n                                    id={peep.id}\r\n                                    title={peep.name}\r\n                                    img={peep.profile_path}\r\n                                    link={\"people\"}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n    } else {\r\n        return (\r\n            <div id=\"search-results-container\">\r\n                {searchResults.results.map((item, index) => {\r\n                    switch (searchResults.category) {\r\n                        case \"movie\":\r\n                            return (\r\n                                <MovieResultData\r\n                                    key={item.id}\r\n                                    index={index}\r\n                                    movie={item}\r\n                                />\r\n                            );\r\n                        case \"tv\":\r\n                            return (\r\n                                <TvResultData\r\n                                    index={index}\r\n                                    tvshow={item}\r\n                                    key={item.id}\r\n                                />\r\n                            );\r\n                        case \"people\":\r\n                            return (\r\n                                <PeopleResultData\r\n                                    key={item.id}\r\n                                    index={index}\r\n                                    person={item}\r\n                                />\r\n                            );\r\n                        default:\r\n                            break;\r\n                    }\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst MovieFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [movieData, setMovieData] = useState({});\r\n    const [movieReviewData, setMovieReviewData] = useState({});\r\n    const [movieCreditData, setMovieCreditData] = useState({});\r\n    const [toggle, setToggle] = useState(false);\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isMovieInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n\r\n    const getMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieData(data);\r\n    };\r\n\r\n    const getMovieReview = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieReviewData(data);\r\n    };\r\n\r\n    const getMovieCredit = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieCreditData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMovieData();\r\n        getMovieReview();\r\n        getMovieCredit();\r\n    }, []);\r\n\r\n    const found = isMovieInWatchlist(movieData.id);\r\n\r\n    return (\r\n        <div\r\n            className=\"fullscreen\"\r\n            // style={{\r\n            //     backgroundImage:\r\n            //         \"url(\" +\r\n            //         `http://image.tmdb.org/t/p/w500/${movieData.backdrop_path}` +\r\n            //         \")\",\r\n            //     backgroundSize: \"cover\",\r\n            //     backgroundPosition: \"center\",\r\n            // }}\r\n        >\r\n            <div className=\"fullscreen-card\">\r\n                <div className=\"fullscreen-img\">\r\n                    <img\r\n                        src={`http://image.tmdb.org/t/p/w500/${movieData.poster_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n                <div className=\"fullscreen-info\">\r\n                    <h1 className=\"fullscreen-title\">{movieData.title}</h1>\r\n                    <div className=\"fullscreen-list-info\">\r\n                        <p>{convertDate(movieData.release_date)}</p>\r\n                        <div className=\"ball\"></div>\r\n                        <div className=\"fullscreen-genre\">\r\n                            {movieData.genres !== undefined ? (\r\n                                movieData.genres.map((type) => {\r\n                                    return <p key={type.id}>{type.name}</p>;\r\n                                })\r\n                            ) : (\r\n                                <p></p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"ball\"></div>\r\n                        <p>{movieData.runtime} mins</p>\r\n                    </div>\r\n                    <div className=\"fullscreen-rating\">\r\n                        <h4>Average Score:</h4>\r\n                        <p>{movieData.vote_average}/10</p>\r\n                        <button\r\n                            className=\"add-remove-button\"\r\n                            onClick={() => {\r\n                                found\r\n                                    ? removeFromWatchList(\"movie\", movieData.id)\r\n                                    : addToWatchList(\"movie\", movieData);\r\n                            }}\r\n                        >\r\n                            {found\r\n                                ? \"Remove From Watchlist\"\r\n                                : \"Add To Watchlist\"}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"fullscreen-production\">\r\n                        {movieData.production_companies !== undefined ? (\r\n                            movieData.production_companies.map((company) => {\r\n                                return (\r\n                                    <p\r\n                                        key={company.id}\r\n                                        className=\"company-name\"\r\n                                    >\r\n                                        {company.name}\r\n                                    </p>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <p></p>\r\n                        )}\r\n                    </div>\r\n                    <h4 className=\"fullscreen-tagline\">\r\n                        <i>{movieData.tagline}</i>\r\n                    </h4>\r\n                    <div className=\"fullscreen-overview\">\r\n                        <h3>Overview</h3>\r\n                        <p>{movieData.overview}</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"review-cast-toggle-button\">\r\n                    <button onClick={() => setToggle(false)}>Cast</button>\r\n                    <button onClick={() => setToggle(true)}>Reviews</button>\r\n                </div>\r\n                <div className=\"fullscreen-review-cast\">\r\n                    {toggle ? (\r\n                        movieReviewData.results !== undefined ? (\r\n                            <div className=\"fullscreen-reviews\">\r\n                                {movieReviewData.results.map((result) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={result.id}\r\n                                            className=\"fullscreen-review\"\r\n                                        >\r\n                                            <h4>A review by {result.author}</h4>\r\n                                            <h5>\r\n                                                <i>\r\n                                                    Written by {result.author}{\" \"}\r\n                                                    on{\" \"}\r\n                                                    {convertDate(\r\n                                                        result.created_at\r\n                                                    )}\r\n                                                </i>\r\n                                            </h5>\r\n                                            <p class=\"review-content\">\r\n                                                {result.content}\r\n                                            </p>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : movieCreditData.cast !== undefined ? (\r\n                        <div className=\"fullscreen-cast\">\r\n                            {movieCreditData.cast.map((cast) => {\r\n                                return (\r\n                                    <Link\r\n                                        to={`/result/people/${cast.id}`}\r\n                                        key={cast.id}\r\n                                        className=\"cast-credit\"\r\n                                    >\r\n                                        <img\r\n                                            className=\"cast-img\"\r\n                                            src={`http://image.tmdb.org/t/p/w500/${cast.profile_path}`}\r\n                                            alt=\"\"\r\n                                        />\r\n                                        <div>\r\n                                            <h4 className=\"cast-name\">\r\n                                                {cast.name}\r\n                                            </h4>\r\n                                            <p className=\"cast-role\">\r\n                                                {cast.character}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieFullScreenResult;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst TvFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [tvData, setTvData] = useState({});\r\n    const [tvResultData, setTvResultData] = useState({});\r\n\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isTvShowInWatchlist,\r\n        convertDate,\r\n    } = useGlobalContext();\r\n\r\n    const getTvData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvData(data);\r\n    };\r\n\r\n    const getTvReview = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvResultData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTvData();\r\n        getTvReview();\r\n    }, []);\r\n\r\n    const found = isTvShowInWatchlist(tvData.id);\r\n\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <div className=\"fullscreen-card\">\r\n                <div className=\"fullscreen-img\">\r\n                    <img\r\n                        src={`http://image.tmdb.org/t/p/w500/${tvData.poster_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n                <div className=\"fullscreen-info\">\r\n                    <h1 className=\"fullscreen-title\">{tvData.name}</h1>\r\n                    <div className=\"fullscreen-list-info\">\r\n                        <p>{convertDate(tvData.first_air_date)}</p>\r\n                        <div className=\"ball\"></div>\r\n                        <div className=\"fullscreen-genre\">\r\n                            {tvData.genres !== undefined ? (\r\n                                tvData.genres.map((type) => {\r\n                                    return <p key={type.id}>{type.name}</p>;\r\n                                })\r\n                            ) : (\r\n                                <p></p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"ball\"></div>\r\n                        <p>{tvData.runtime} mins</p>\r\n                    </div>\r\n                    <div className=\"fullscreen-rating\">\r\n                        <h4>Average Score:</h4>\r\n                        <p>{tvData.vote_average}/10</p>\r\n                        <button\r\n                            className=\"add-remove-button\"\r\n                            onClick={() => {\r\n                                found\r\n                                    ? removeFromWatchList(\"tv\", tvData.id)\r\n                                    : addToWatchList(\"tv\", tvData);\r\n                            }}\r\n                        >\r\n                            {found\r\n                                ? \"Remove From Watchlist\"\r\n                                : \"Add To Watchlist\"}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"fullscreen-production\">\r\n                        {tvData.production_companies !== undefined ? (\r\n                            tvData.production_companies.map((company) => {\r\n                                return (\r\n                                    <p\r\n                                        key={company.id}\r\n                                        className=\"company-name\"\r\n                                    >\r\n                                        {company.name}\r\n                                    </p>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <p></p>\r\n                        )}\r\n                    </div>\r\n                    <h4 className=\"fullscreen-tagline\">\r\n                        <i>{tvData.tagline}</i>\r\n                    </h4>\r\n                    <div className=\"fullscreen-overview\">\r\n                        <h3>Overview</h3>\r\n                        <p>{tvData.overview}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullscreen-reviews\">\r\n                    {tvResultData.results !== undefined ? (\r\n                        tvResultData.results.map((result) => {\r\n                            return (\r\n                                <div\r\n                                    key={result.id}\r\n                                    className=\"fullscreen-review\"\r\n                                >\r\n                                    <h4>A review by {result.author}</h4>\r\n                                    <h5>\r\n                                        <i>\r\n                                            Written by {result.author} on{\" \"}\r\n                                            {convertDate(result.created_at)}\r\n                                        </i>\r\n                                    </h5>\r\n                                    <p class=\"review-content\">\r\n                                        {result.content}\r\n                                    </p>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TvFullScreenResult;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PeopleFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [peopleData, setPeopleData] = useState({});\r\n\r\n    const date = new Date(peopleData.birthday);\r\n    const string = date.toLocaleString(\"default\", {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n    });\r\n\r\n    const getPeopleData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/person/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPeopleData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPeopleData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <div id=\"people-fullscreen-card\">\r\n                <div id=\"people-fullscreen-img\">\r\n                    <img\r\n                        src={`http://image.tmdb.org/t/p/w500/${peopleData.profile_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n                <div id=\"people-info\">\r\n                    <h1>{peopleData.name}</h1>\r\n                    <h3>Personal Info</h3>\r\n                    <h4>Known For:</h4>\r\n                    <p>{peopleData.known_for_department}</p>\r\n                    <h4>Birthdate:</h4>\r\n                    <p>{string}</p>\r\n                    <h4>Place of Birth:</h4>\r\n                    <p>{peopleData.place_of_birth}</p>\r\n                </div>\r\n                <div id=\"people-biography\">\r\n                    <h3>Biography</h3>\r\n                    <p>{peopleData.biography}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleFullScreenResult;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Watchlist = () => {\r\n    const { Watchlist } = useGlobalContext();\r\n    return <div></div>;\r\n};\r\n\r\nexport default Watchlist;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/navbar\";\r\nimport Homepage from \"./components/Homepage/homepage\";\r\nimport Searchbar from \"./components/Searchbar/searchbar\";\r\nimport SearchResults from \"./components/SearchResults/searchresults\";\r\nimport MovieFullScreenResult from \"./components/FullScreenResult/moviefullscreenresult\";\r\nimport TvFullScreenResult from \"./components/FullScreenResult/tvfullscreenresult\";\r\nimport PeopleFullScreenResult from \"./components/FullScreenResult/peoplefullscreenresults\";\r\nimport Watchlist from \"./components/Watchlist/watchlist\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <div id=\"app-container\">\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route path=\"/search\">\r\n                        <Searchbar />\r\n                        <SearchResults />\r\n                    </Route>\r\n                    <Route path=\"/result/movie/:id\">\r\n                        <MovieFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/result/tv/:id\">\r\n                        <TvFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/result/people/:id\">\r\n                        <PeopleFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/watchlist\">\r\n                        <Watchlist />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Homepage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./components/Navbar/navbar.css\";\r\nimport \"./components/Homepage/homepage.css\";\r\nimport \"./components/Searchbar/searchbar.css\";\r\nimport \"./components/SearchResults/searchresults.css\";\r\nimport \"./components/FullScreenResult/fullscreenresults.css\";\r\nimport \"./components/FullScreenResult/peoplefullscreenresults.css\";\r\nimport \"./components/SearchResultsCard/movieresultdata.css\";\r\nimport \"./components/SearchResultsCard/tvresultdata.css\";\r\nimport \"./components/SearchResultsCard/peopleresultdata.css\";\r\nimport \"./components/SearchTrending/trendingdata.css\";\r\nimport App from \"./App\";\r\nimport { AppProvider } from \"./context\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppProvider>\r\n            <App />\r\n        </AppProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}