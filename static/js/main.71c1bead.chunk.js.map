{"version":3,"sources":["hooks/useLocalStorage.js","hooks/useWindowDimensions.js","context.js","components/Navbar/navbar.js","hooks/useHorizontalScroll.js","hooks/useFetch.js","components/ToggleButton/toggleButton.js","components/Homepage/RenderedCard/renderedCard.js","components/Carousel/Carousel.js","components/Homepage/homepage.js","components/FullScreenResult/fullscreenreview/fullscreenreview.js","components/FullScreenResult/moviefullscreenresult.js","components/FullScreenResult/tvfullscreenresult.js","components/FullScreenResult/peoplefullscreenresults.js","components/Watchlist/WatchlistCard/watchlistcard.js","components/Watchlist/WatchlistCard/watchlistList.js","components/Watchlist/watchlist.js","components/Search/Searchbar/searchbar.js","components/Search/SearchResults/SearchResultsCard/movietvresultdata.js","components/Search/SearchResults/SearchResultsCard/peopleresultdata.js","components/Search/SearchResults/SearchTrending/trendingdata.js","components/Search/SearchResults/searchresults.js","components/Search/Search.js","components/Navbar/addremovewatchlist.js","App.js","index.js"],"names":["useLocalStorage","key","initialState","useState","retrieve","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","window","width","innerWidth","height","innerHeight","getWindowDimensions","addEventListener","removeEventListener","AppContext","React","createContext","AppProvider","children","category","movie","tv","people","query","searchResults","setSearchResults","watchList","setWatchList","type","person","trendingData","setTrendingData","isAdded","isRemoved","title","watchListAlert","setWatchListAlert","expandBiography","setExpandBiography","modalContent","setModalContent","movieCount","setMovieCount","tvCount","setTvCount","isScroll","setIsScroll","searchMovies","a","fetch","response","json","data","results","searchTVShows","searchPeople","search","timer","setTimeout","clearTimeout","length","Provider","value","addToWatchList","item","find","w","id","obj","poster_path","vote_average","date_added","Date","now","overview","name","removeFromWatchList","filter","isMovieInWatchlist","isTvShowInWatchlist","convertDate","info","toLocaleString","day","month","year","toggleWatchlistCategory","returnToTop","ref","className","onTouchStart","current","scrollTop","useGlobalContext","useContext","Navbar","isHover","setIsHover","toggleHover","onMouseEnter","onMouseLeave","to","onClick","useHorizontalScroll","preventParentScrolling","elRef","useRef","el","onWheel","e","deltaY","preventDefault","scrollLeft","scrollWidth","clientWidth","Math","round","scrollTo","left","useFetch","url","loading","setLoading","setData","error","setError","ok","Error","statusText","fetchData","ToggleButton","handleClick","active","disabled","RenderedCard","found","imgSrc","linkTo","vote","removeCat","removeID","addCat","addID","index","position","src","alt","focusable","Carousel","activeCardIndex","setActiveCardIndex","touchStart","setTouchStart","touchEnd","setTouchEnd","handlePreviousClick","newIndex","handleNextClick","getPositionClassName","targetTouches","clientX","onTouchMove","onTouchEnd","map","child","Homepage","popularMovieData","popularMovieLoading","popularTVData","popularTVLoading","topRatedMovieData","topRatedMovieLoading","topRatedTVData","topRatedTVLoading","popularCategory","setPopularCategory","topRatedCategory","setTopRatedCategory","homeScroll","popScrollRef","topScrollRef","watchScrollRef","togglePopularCategory","toggleTopRatedCategory","getMappedCards","array","onScroll","FullScreenReview","author","written","review","MovieFullScreenResult","useParams","movieData","setMovieData","movieReviewData","setMovieReviewData","movieCreditData","setMovieCreditData","toggle","setToggle","mobileToggle","setMobileToggle","getMovieData","getMovieReview","getMovieCredit","release_date","undefined","genres","runtime","production_companies","company","tagline","cast","profile_path","character","result","created_at","content","movieContentToggle","TvFullScreenResult","tvData","setTvData","tvResultData","setTvResultData","tvCreditData","setTvCreditData","getTvData","getTvReview","getTvCredit","PeopleFullScreenResult","peopleData","setPeopleData","peopleCreditData","setPeopleCreditData","peopleImageData","setPeopleImageData","expandImg","setExpandImg","imgModal","setImgModal","getPeopleData","getPeopleCreditData","getPeopleImageData","birthday","place_of_birth","known_for_department","biography","profiles","img","file_path","WatchlistCard","WatchlistList","Watchlist","movieWatchlist","setMovieWatchlist","tvWatchlist","setTvWatchlist","ascending","descending","valueSelect","setValueSelect","watchlistView","setWatchlistView","isMovieShown","setIsMovieShown","isTVShown","setIsTVShown","sortingTypeRef","sortingDirectionRef","movieWatchlistRef","tvWatchlistRef","sortWatchlist","b","sortedMovieWatchlist","sortedTvWatchlist","sort","compareMovieName","compareTvName","compareRating","compareDate","reverse","nameA","toUpperCase","nameB","useLayoutEffect","onChange","style","display","Searchbar","searchTitle","setSearchTitle","setCategory","placeholder","placeHolderSearchText","target","alert","MovieTVResultData","release","PeopleResultData","known_for","role","TrendingData","link","SearchResults","movieTrendingRef","tvTrendingRef","peopleTrendingRef","getTrendingMovieData","getTrendingTVData","getTrendingPeopleData","getAllTrending","film","show","tvshow","first_air_date","peep","Search","scrollRef","Addremovewatchlist","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yYAiBeA,EAfS,SAACC,EAAKC,GAC1B,MAA0BC,oBAAS,WAC/B,IAAMC,EAAWC,aAAaC,QAAQL,GACtC,OAAOG,EAAWG,KAAKC,MAAMJ,GAAYF,KAF7C,mBAAOO,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACFF,GACAJ,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MAE9C,CAACA,IAEG,CAACA,EAAOC,ICSJI,EArBa,WACxB,MAAgDX,mBAAS,IAAzD,mBAAOY,EAAP,KAAyBC,EAAzB,KAiBA,OAVAL,qBAAU,WACN,IAAMM,EAAe,WACjBD,EAPoB,WACxB,MAAmDE,OACnD,MAAO,CAAEC,MADT,EAAQC,WACQC,OADhB,EAA2BC,aAMHC,KAIxB,OAFAN,IACAC,OAAOM,iBAAiB,SAAUP,GAC3B,WACHC,OAAOO,oBAAoB,SAAUR,MAE1C,IACI,CAACF,I,eCfNW,EAAaC,IAAMC,gBAEnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAA0C3B,mBAAS,CAC/C4B,SAAU,QACVC,MAAO,GACPC,GAAI,GACJC,OAAQ,GACRC,MAAO,KALX,mBAAOC,EAAP,KAAsBC,EAAtB,KAOA,EAAkCrC,EAAgB,YAAa,CAC3D+B,SAAU,QACVC,MAAO,GACPC,GAAI,KAHR,mBAAOK,EAAP,KAAkBC,EAAlB,KAKA,EAAwCpC,mBAAS,CAC7CqC,KAAM,QACNR,MAAO,GACPC,GAAI,GACJQ,OAAQ,KAJZ,mBAAOC,EAAP,KAAqBC,EAArB,KAMA,EAA4CxC,mBAAS,CACjDyC,SAAS,EACTC,WAAW,EACXC,MAAO,KAHX,mBAAOC,EAAP,KAAuBC,EAAvB,KAKA,EAA8C7C,oBAAS,GAAvD,mBAAO8C,EAAP,KAAwBC,EAAxB,KACA,EAAwC/C,mBAAS,MAAjD,mBAAOgD,EAAP,KAAqBC,EAArB,KACA,EAAoCjD,mBAAS,GAA7C,mBAAOkD,EAAP,KAAmBC,EAAnB,KACA,EAA8BnD,mBAAS,GAAvC,mBAAOoD,EAAP,KAAgBC,EAAhB,KACA,EAAgCrD,oBAAS,GAAzC,mBAAOsD,EAAP,KAAiBC,EAAjB,KACA,EAA2B5C,IAErB6C,GAFN,oBAEkB,uCAAG,WAAOxB,GAAP,iBAAAyB,EAAA,sEACMC,MAAM,2GAAD,OACmF1B,EADnF,gCADX,cACX2B,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjB3B,EAAiB,2BACVD,GADS,IAEZL,SAAU,QACVC,MAAOgC,EAAKC,QACZ9B,MAAM,2BAAMC,EAAcD,OAArB,IAA4BH,MAAOG,OAT3B,2CAAH,uDAaZ+B,EAAa,uCAAG,WAAO/B,GAAP,iBAAAyB,EAAA,sEACKC,MAAM,wGAAD,OACgF1B,EADhF,gCADV,cACZ2B,EADY,gBAICA,EAASC,OAJV,OAIZC,EAJY,OAKlB3B,EAAiB,2BACVD,GADS,IAEZL,SAAU,KACVE,GAAI+B,EAAKC,QACT9B,MAAM,2BAAMC,EAAcD,OAArB,IAA4BF,GAAIE,OATvB,2CAAH,sDAabgC,EAAY,uCAAG,WAAOhC,GAAP,iBAAAyB,EAAA,sEACMC,MAAM,4GAAD,OACoF1B,EADpF,gCADX,cACX2B,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjB3B,EAAiB,2BACVD,GADS,IAEZL,SAAU,SACVG,OAAQ8B,EAAKC,QACb9B,MAAM,2BAAMC,EAAcD,OAArB,IAA4BM,OAAQN,OAT5B,2CAAH,sDAaZiC,EAAM,uCAAG,WAAOrC,EAAUI,GAAjB,SAAAyB,EAAA,2DACH7B,EADG,OAEF,UAFE,OAKF,OALE,OAQF,WARE,6BAGH4B,EAAaxB,GAHV,mCAMH+B,EAAc/B,GANX,mCASHgC,EAAahC,GATV,oGAAH,wDAuIZ,OAdAxB,qBAAU,WACN,IAAM0D,EAAQC,YAAW,WACrBtB,EAAkB,CAAEJ,SAAS,EAAOC,WAAW,EAAOC,MAAO,OAC9D,KACH,OAAO,WACHyB,aAAaF,MAElB,CAACtB,IAEJpC,qBAAU,WACN2C,EAAchB,EAAUN,MAAMwC,QAC9BhB,EAAWlB,EAAUL,GAAGuC,UACzB,CAAClC,IAGA,cAACZ,EAAW+C,SAAZ,CACIC,MAAO,CACHhC,eACAC,kBACAN,mBACA+B,SACAhC,gBACAE,YACAC,eACAoC,eAvHW,SAAC5C,EAAU6C,GAC9B,IAAI,sBAAItC,EAAUN,OAAd,YAAwBM,EAAUL,KAAI4C,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOH,EAAKG,MAEpE,GAAiB,UAAbhD,EAAsB,CACtB,IAAMiD,EAAM,CACRD,GAAIH,EAAKG,GACTjC,MAAO8B,EAAK9B,MACZmC,YAAaL,EAAKK,YAClBC,aAAcN,EAAKM,aACnBC,WAAYC,KAAKC,MACjBC,SAAUV,EAAKU,UAEnB/C,EAAa,2BACND,GADK,IAERN,MAAM,GAAD,mBAAMM,EAAUN,OAAhB,CAAuBgD,OAEhChC,EAAkB,CACdJ,SAAS,EACTC,WAAW,EACXC,MAAO8B,EAAK9B,aAEb,GAAiB,OAAbf,EAAmB,CAC1B,IAAMiD,EAAM,CACRD,GAAIH,EAAKG,GACTQ,KAAMX,EAAKW,KACXN,YAAaL,EAAKK,YAClBC,aAAcN,EAAKM,aACnBC,WAAYC,KAAKC,MACjBC,SAAUV,EAAKU,UAEnB/C,EAAa,2BACND,GADK,IAERL,GAAG,GAAD,mBAAMK,EAAUL,IAAhB,CAAoB+C,OAE1BhC,EAAkB,CACdJ,SAAS,EACTC,WAAW,EACXC,MAAO8B,EAAKW,SAmFZC,oBA9EgB,SAACzD,EAAUgD,GAClB,UAAbhD,GACAQ,EAAa,2BACND,GADK,IAERN,MAAOM,EAAUN,MAAMyD,QAAO,SAACb,GAAD,OAAUA,EAAKG,KAAOA,QAExD/B,EAAkB,CACdJ,SAAS,EACTC,WAAW,EACXC,MAAOR,EAAUN,MAAM6C,MAAK,SAACD,GAAD,OAAUA,EAAKG,KAAOA,KAAIjC,SAEtC,OAAbf,IACPQ,EAAa,2BACND,GADK,IAERL,GAAIK,EAAUL,GAAGwD,QAAO,SAACb,GAAD,OAAUA,EAAKG,KAAOA,QAElD/B,EAAkB,CACdJ,SAAS,EACTC,WAAW,EACXC,MAAOR,EAAUL,GAAG4C,MAAK,SAACD,GAAD,OAAUA,EAAKG,KAAOA,KAAIQ,SA4DnDG,mBAvDe,SAACX,GACxB,OAAOzC,EAAUN,MAAM6C,MAAK,SAACD,GAAD,OAAUA,EAAKG,KAAOA,MAuD1CY,oBArDgB,SAACZ,GACzB,OAAOzC,EAAUL,GAAG4C,MAAK,SAACD,GAAD,OAAUA,EAAKG,KAAOA,MAqDvCa,YArIQ,SAACC,GAOjB,OANa,IAAIT,KAAKS,GACFC,eAAe,UAAW,CAC1CC,IAAK,UACLC,MAAO,OACPC,KAAM,aAiIFlD,iBACAM,aACAE,UACAN,kBACAC,qBACAC,eACAC,kBACA8C,wBA1DoB,WAC5B3D,EAAa,2BACND,GADK,IAERP,SAAiC,UAAvBO,EAAUP,SAAuB,KAAO,YAwD9C0B,WACAC,cACAyC,YAtDQ,SAACC,GACjB,GAAI3C,EACA,OACI,wBACI4C,UAAU,gBACVC,aAAc,WACVF,EAAIG,QAAQC,UAAY,GAHhC,SAMI,cAAC,IAAD,CAAWH,UAAU,gBAqBjC,SA2BKvE,KAMA2E,EAAmB,WAC5B,OAAOC,qBAAWhF,IC/JPiF,EAnFA,WACX,MAMIF,IALApE,EADJ,EACIA,iBACAa,EAFJ,EAEIA,mBACAE,EAHJ,EAGIA,gBACAK,EAJJ,EAIIA,SACAC,EALJ,EAKIA,YAGJ,EAA8BvD,oBAAS,GAAvC,mBAAOyG,EAAP,KAAgBC,EAAhB,KACMC,EAAc,kBAAMD,GAAYD,IAEtC,OACI,qBACIP,UAAW5C,EAAW,uBAAyB,SAC/CsD,aAAcD,EACdE,aAAcF,EAHlB,SAKI,qBAAI/B,GAAG,cAAP,UACI,6BACI,cAAC,IAAD,CAEIsB,UACI5C,EAAW,uBAAyB,WAExCsB,GAAI6B,EAAU,eAAiB,GAC/BK,GAAG,IACHC,QAAS,WACL7E,EAAiB,CACbN,SAAU,QACVC,MAAO,GACPC,GAAI,GACJC,OAAQ,KAEZgB,GAAmB,GACnBE,EAAgB,IAChBM,GAAY,IAhBpB,oBAsBJ,6BACI,cAAC,IAAD,CAEI2C,UACI5C,EAAW,uBAAyB,WAExCsB,GAAI6B,EAAU,eAAiB,GAC/BK,GAAG,aACHC,QAAS,WACLhE,GAAmB,GACnBE,EAAgB,IAChBM,GAAY,IAVpB,yBAgBJ,6BACI,cAAC,IAAD,CAEI2C,UACI5C,EACM,wCACA,4BAEVsB,GAAI6B,EAAU,eAAiB,GAC/BK,GAAG,UACHC,QAAS,WACLhE,GAAmB,GACnBE,EAAgB,IAChBM,GAAY,IAZpB,SAeI,cAAC,IAAD,CAAU2C,UAAU,wBC/C7Bc,EA/Ba,WAAoC,IAAnCC,IAAkC,yDACrDC,EAAQC,mBA2Bd,OA1BA3G,qBAAU,WACN,IAAM4G,EAAKF,EAAMd,QACjB,GAAIgB,EAAI,CACJ,IAAMC,EAAU,SAACC,GACI,IAAbA,EAAEC,UACyB,IAA3BN,EACAK,EAAEE,iBAEkB,IAAlBJ,EAAGK,YAAoBH,EAAEC,OAAS,GAEhCH,EAAGM,YACCN,EAAGO,YACHC,KAAKC,MAAMT,EAAGK,cACd,GAAKH,EAAEC,OAAS,GAGxBD,EAAEE,iBAENJ,EAAGU,SAAS,CACRC,KAAMX,EAAGK,WAAaH,EAAEC,WAIhC,OADAH,EAAG/F,iBAAiB,QAASgG,GACtB,kBAAMD,EAAG9F,oBAAoB,QAAS+F,OAElD,IACIH,GCHIc,EAzBE,SAACC,GACd,MAA8BjI,oBAAS,GAAvC,mBAAOkI,EAAP,KAAgBC,EAAhB,KACA,EAAwBnI,mBAAS,MAAjC,mBAAO6D,EAAP,KAAauE,EAAb,KACA,EAA0BpI,mBAAS,MAAnC,mBAAOqI,EAAP,KAAcC,EAAd,KAmBA,OAjBA9H,qBAAU,WACN2H,GAAW,GACI,uCAAG,4BAAA1E,EAAA,+EAEaC,MAAMuE,GAFnB,WAEJtE,EAFI,QAGI4E,GAHJ,sBAIA,IAAIC,MAAM7E,EAAS8E,YAJnB,mBAMVL,EANU,SAMIzE,EAASC,OANb,kCAOVuE,GAAW,GAPD,kDASVG,EAAS,EAAD,IACRH,GAAW,GAVD,0DAAH,oDAafO,KACD,CAACT,IACG,CAACpE,EAAMqE,EAASG,ICGZM,EAzBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OACjC,OACI,sBAAK3C,UAAU,sBAAf,UACI,wBACIA,UAAS,kCACM,UAAX2C,EAAqB,SAAW,IAEpC9B,QAAS6B,EACTE,SAAqB,UAAXD,EALd,mBASA,wBACI3C,UAAS,+BACM,OAAX2C,EAAkB,SAAW,IAEjC9B,QAAS6B,EACTE,SAAqB,OAAXD,EALd,oB,eCkDGE,EA1DM,SAAC,GAYf,IAXHC,EAWE,EAXFA,MACAC,EAUE,EAVFA,OACAC,EASE,EATFA,OACAvG,EAQE,EARFA,MACAwG,EAOE,EAPFA,KACAC,EAME,EANFA,UACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,MAGE,KAFFC,MAEE,EADFC,iBACE,MADS,GACT,EACF,EAAgDnD,IAAxC9B,EAAR,EAAQA,eAAgBa,EAAxB,EAAwBA,oBAExB,OACI,sBAEIa,UAAS,sBAAiBuD,GAF9B,UAII,qBACIC,IAAG,0CAAqCT,GACxCU,IAAI,GACJzD,UAAU,eAEd,cAAC,IAAD,CAAMY,GAAIoC,EAAQhD,UAAU,mBAA5B,SACI,6BAAKvD,MAET,oBAAGuD,UAAU,cAAb,UACI,cAAC,IAAD,CAAYA,UAAU,gBACrBiD,KAEL,wBACIjD,UAAU,uBACVa,QAAS,WACLiC,EACM3D,EAAoB+D,EAAWC,GAC/B7E,EAAe8E,EAAQC,IALrC,SAQKP,EACG,cAAC,IAAD,CACI9C,UAAU,cACV,eAAa,EACb0D,WAAW,IAGf,cAAC,IAAD,CACI1D,UAAU,WACV,eAAa,EACb0D,WAAW,UCwBpBC,EA7EE,SAAC,GAAkB,IAAhBlI,EAAe,EAAfA,SAChB,EAA8C3B,mBAAS,GAAvD,mBAAO8J,EAAP,KAAwBC,EAAxB,KACA,EAAoC/J,mBAAS,GAA7C,mBAAOgK,EAAP,KAAmBC,EAAnB,KACA,EAAgCjK,mBAAS,GAAzC,mBAAOkK,EAAP,KAAiBC,EAAjB,KAEMC,EAAsB,WACxB,IAAMC,EAAWP,EAAkB,EACnCC,EAAmBM,EAAW,EAAI1I,EAAS0C,OAAS,EAAIgG,IAEtDC,EAAkB,WACpB,IAAMD,EAAWP,EAAkB,EACnCC,EAAmBM,EAAW1I,EAAS0C,OAAS,EAAI,EAAIgG,IAEtDE,EAAuB,SAACf,GAC1B,OAAOA,EAAQM,EACT,gBACAN,EAAQM,EACR,YACA,eAmBV,OACI,0BACI5D,UAAU,qBACVC,aApBiB,SAACmB,GACtB2C,EAAc3C,EAAEkD,cAAc,GAAGC,UAoB7BC,YAlBgB,SAACpD,GACrB6C,EAAY7C,EAAEkD,cAAc,GAAGC,UAkB3BE,WAhBe,WACF,IAAbT,IACAF,EAAaE,EAAW,KACxBI,IAEAN,EAAaE,GAAY,KACzBE,IAEJH,EAAc,GACdE,EAAY,KAGZ,UAMKxI,EAAS0C,OAAS,GACf,wBAAQ6B,UAAU,eAAea,QAASqD,EAA1C,SACI,cAAC,IAAD,CACIlE,UAAU,qBACV,eAAa,EACb0D,WAAW,MAItBjI,EAAS0C,OAAS,GACf,wBAAQ6B,UAAU,WAAWa,QAASuD,EAAtC,SACI,cAAC,IAAD,CACIpE,UAAU,qBACV,eAAa,EACb0D,WAAW,MAItBjI,EAASiJ,KAAI,SAACC,EAAOrB,GAClB,OACI,qBACItD,UAAS,wBAAmBqE,EACxBf,IAFR,SAKKqB,WCqMVC,EApQE,WACb,MAMIxE,IALAnE,EADJ,EACIA,UACAoD,EAFJ,EAEIA,mBACAC,EAHJ,EAGIA,oBACAO,EAJJ,EAIIA,wBACAxC,EALJ,EAKIA,YAGJ,EAAmEyE,EAAS,sGAA5E,mBAAO+C,EAAP,KAAyBC,EAAzB,KAGA,GAHA,KAG0DhD,EAAS,oGAAnE,mBAAOiD,EAAP,KAAsBC,EAAtB,KAGA,GAHA,KAIIlD,EAAS,yGADb,mBAAOmD,EAAP,KAA0BC,EAA1B,KAIA,GAJA,KAI6DpD,EAAS,sGAAtE,mBAAOqD,EAAP,KAAuBC,EAAvB,KAIA,GAJA,KAI8CtL,mBAAS,UAAvD,mBAAOuL,EAAP,KAAwBC,EAAxB,KACA,EAAgDxL,mBAAS,SAAzD,mBAAOyL,EAAP,KAAyBC,EAAzB,KAEMC,EAAaxE,mBAEbyE,EAAe5E,GAAoB,GACnC6E,EAAe7E,GAAoB,GACnC8E,EAAiB9E,GAAoB,GAE3C,EAA2BrG,IAApBC,EAAP,oBAEMmL,EAAwB,WAC1BP,EAAuC,UAApBD,EAA8B,KAAO,UAGtDS,EAAyB,WAC3BN,EAAyC,UAArBD,EAA+B,KAAO,UAGxDQ,EAAiB,SAACC,EAAOtK,GAC3B,OAAQA,GACJ,IAAK,QACD,OAAOsK,EAAMtB,KAAI,SAACnG,GACd,OACI,cAAC,EAAD,CAEIG,GAAIH,EAAKG,GACToE,MAAOzD,EAAmBd,EAAKG,IAC/BqE,OAAQxE,EAAKK,YACboE,OAAM,wBAAmBzE,EAAKG,IAC9BjC,MAAO8B,EAAK9B,MACZwG,KAAM1E,EAAKM,aACXqE,UAAW,QACXC,SAAU5E,EAAKG,GACf0E,OAAQ,QACRC,MAAO9E,GAVFA,EAAKG,OAc1B,IAAK,KACD,OAAOsH,EAAMtB,KAAI,SAACnG,GACd,OACI,cAAC,EAAD,CAEIG,GAAIH,EAAKG,GACToE,MAAOxD,EAAoBf,EAAKG,IAChCqE,OAAQxE,EAAKK,YACboE,OAAM,qBAAgBzE,EAAKG,IAC3BjC,MAAO8B,EAAKW,KACZ+D,KAAM1E,EAAKM,aACXqE,UAAW,KACXC,SAAU5E,EAAKG,GACf0E,OAAQ,KACRC,MAAO9E,GAVFA,EAAKG,OAc1B,QACI,MAAM,IAAI4D,MAAM,wBAI5B,OAAI5H,EAAiBI,OAAS,IAEtB,sBAAK4D,GAAG,WAAR,UACI,0BAASA,GAAG,UAAUsB,UAAU,UAAhC,UACI,qBAAKA,UAAU,0BAAf,SACI,oBAAIA,UAAU,gBAAd,8BAEJ,cAAC,EAAD,CACI0C,YAAamD,EACblD,OAAQ0C,IAEXP,GAAuBE,EACpB,qBAAKhF,UAAU,eAAf,SACI,8CAGJ,cAAC,EAAD,UACK+F,EACuB,UAApBV,EACMR,EAAiBjH,QACjBmH,EAAcnH,QACpByH,QAKhB,0BAAS3G,GAAG,QAAQsB,UAAU,UAA9B,UACI,qBAAKA,UAAU,0BAAf,SACI,oBAAIA,UAAU,gBAAd,yBAEJ,cAAC,EAAD,CACI0C,YAAaoD,EACbnD,OAAQ4C,IAEXL,GAAwBE,EACrB,qBAAKpF,UAAU,eAAf,SACI,8CAGJ,cAAC,EAAD,UACK+F,EACwB,UAArBR,EACMN,EAAkBrH,QAClBuH,EAAevH,QACrB2H,QAKhB,0BAAS7G,GAAG,YAAYsB,UAAU,UAAlC,UACI,qBAAKA,UAAU,0BAAf,SACI,oBAAIA,UAAU,gBAAd,yBAEJ,cAAC,EAAD,CACI0C,YAAa7C,EACb8C,OAAQ1G,EAAUP,WAEG,UAAvBO,EAAUP,WACPO,EAAUN,MAAMwC,QACG,OAAvBlC,EAAUP,WAAsBO,EAAUL,GAAGuC,OAC1C,qBAAKO,GAAG,kBAAR,SACI,8DAGJ,cAAC,EAAD,UACKqH,EAC0B,UAAvB9J,EAAUP,SACJO,EAAUN,MACVM,EAAUL,GAChBK,EAAUP,kBAUlC,sBACIqE,IAAK0F,EACL/G,GAAG,WACHuH,SAAU,WACFvL,EAAiBI,MAAQ,MACrB2K,EAAWvF,QAAQC,WAAa,EAChC9C,GAAY,GAEZA,GAAY,KAR5B,UAaI,0BAASqB,GAAG,UAAUsB,UAAU,UAAhC,UACI,qBAAKA,UAAU,0BAAf,SACI,oBAAIA,UAAU,gBAAd,8BAEJ,cAAC,EAAD,CACI0C,YAAamD,EACblD,OAAQ0C,IAEZ,qBACI3G,GAAG,oBACHsB,UAAU,4BACVD,IAAK2F,EAHT,SAKKZ,GAAuBE,EACpB,yCAEAe,EACwB,UAApBV,EACMR,EAAiBjH,QACjBmH,EAAcnH,QACpByH,QAKhB,0BAAS3G,GAAG,QAAQsB,UAAU,UAA9B,UACI,qBAAKA,UAAU,0BAAf,SACI,oBAAIA,UAAU,gBAAd,yBAEJ,cAAC,EAAD,CACI0C,YAAaoD,EACbnD,OAAQ4C,IAEZ,qBACI7G,GAAG,sBACHsB,UAAU,4BACVD,IAAK4F,EAHT,SAKKT,GAAwBE,EACrB,yCAEAW,EACyB,UAArBR,EACMN,EAAkBrH,QAClBuH,EAAevH,QACrB2H,QAKhB,0BAAS7G,GAAG,YAAYsB,UAAU,UAAlC,UACI,qBAAKA,UAAU,0BAAf,SACI,oBAAIA,UAAU,gBAAd,yBAEJ,cAAC,EAAD,CACI0C,YAAa7C,EACb8C,OAAQ1G,EAAUP,WAEtB,qBACIgD,GAAG,sBACHsB,UAAU,4BACVD,IAAK6F,EAHT,SAK6B,UAAvB3J,EAAUP,WACPO,EAAUN,MAAMwC,QACG,OAAvBlC,EAAUP,WAAsBO,EAAUL,GAAGuC,OAC1C,qBAAKO,GAAG,kBAAR,SACI,8DAGJqH,EAC2B,UAAvB9J,EAAUP,SACJO,EAAUN,MACVM,EAAUL,GAChBK,EAAUP,mBCpPvBwK,EAdU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACzC,OACI,sBAAKrG,UAAU,oBAAf,UACI,8CAAiBmG,KACjB,6BACI,4CACgBA,EADhB,OAC4BC,OAGhC,mBAAGpG,UAAU,iBAAb,SAA+BqG,QCijB5BC,EA9iBe,WAC1B,IAAQ5H,EAAO6H,cAAP7H,GACR,EAAkC5E,mBAAS,IAA3C,mBAAO0M,EAAP,KAAkBC,EAAlB,KACA,EAA8C3M,mBAAS,IAAvD,mBAAO4M,EAAP,KAAwBC,EAAxB,KACA,EAA8C7M,mBAAS,IAAvD,mBAAO8M,EAAP,KAAwBC,EAAxB,KACA,EAA4B/M,mBAAS,CAAE4B,SAAU,SAAjD,mBAAOoL,EAAP,KAAeC,EAAf,KACA,EAAwCjN,mBAAS,CAAE4B,SAAU,aAA7D,mBAAOsL,EAAP,KAAqBC,EAArB,KACA,EASI7G,IARA9B,EADJ,EACIA,eACAa,EAFJ,EAEIA,oBACAE,EAHJ,EAGIA,mBACAE,EAJJ,EAIIA,YACA3C,EALJ,EAKIA,gBACAC,EANJ,EAMIA,mBACAC,EAPJ,EAOIA,aACAC,EARJ,EAQIA,gBAGJ,EAA2BtC,IAApBC,EAAP,oBACMoI,EAAQzD,EAAmBmH,EAAU9H,IAErCwI,EAAY,uCAAG,8BAAA3J,EAAA,sEACMC,MAAM,sCAAD,OACckB,EADd,6DADX,cACXjB,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjB8I,EAAa9I,GALI,2CAAH,qDAQZwJ,EAAc,uCAAG,8BAAA5J,EAAA,sEACIC,MAAM,sCAAD,OACckB,EADd,qEADT,cACbjB,EADa,gBAIAA,EAASC,OAJT,OAIbC,EAJa,OAKnBgJ,EAAmBhJ,GALA,2CAAH,qDAQdyJ,EAAc,uCAAG,8BAAA7J,EAAA,sEACIC,MAAM,sCAAD,OACckB,EADd,qEADT,cACbjB,EADa,gBAIAA,EAASC,OAJT,OAIbC,EAJa,OAKnBkJ,EAAmBlJ,GALA,2CAAH,qDAQpBrD,qBAAU,WACN4M,IACAC,IACAC,MACD,IAkLH,OAAI1M,EAAiBI,OAAS,IAEtB,qBAAKkF,UAAU,oBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBACIA,UAAU,wBACVwD,IAAG,0CAAqCgD,EAAU5H,aAClD6E,IAAI,KAER,sBAAKzD,UAAU,sCAAf,UACI,oBAAIA,UAAU,0BAAd,SACKwG,EAAU/J,QAEf,qBAAKuD,UAAU,qCAAf,SACI,qBAAIA,UAAU,2BAAd,UACI,oBACIA,UAAS,gDACqB,aAA1BgH,EAAatL,SACP,SACA,IAEVuE,aAAc,kBACVgH,EAAgB,CACZvL,SAAU,cAGlBkH,SAC8B,aAA1BoE,EAAatL,SAZrB,sBAiBA,oBACIsE,UAAS,4CACqB,SAA1BgH,EAAatL,SACP,SACA,IAEVuE,aAAc,kBACVgH,EAAgB,CACZvL,SAAU,UAGlBkH,SAAoC,SAA1BoE,EAAatL,SAX3B,kBAeA,oBACIsE,UAAS,8CACqB,WAA1BgH,EAAatL,SACP,SACA,IAEVuE,aAAc,kBACVgH,EAAgB,CACZvL,SAAU,YAGlBkH,SAC8B,WAA1BoE,EAAatL,SAZrB,yBA/ND,WACvB,OAAQsL,EAAatL,UACjB,IAAK,WACD,OACI,sBAAKsE,UAAU,6BAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,mBAAGA,UAAU,iCAAb,SACKT,EAAYiH,EAAUa,gBAE3B,qBAAKrH,UAAU,SACf,qBAAKA,UAAU,0BAAf,cAC0BsH,IAArBd,EAAUe,OACPf,EAAUe,OAAO7C,KAAI,SAACvI,GAClB,OAAO,4BAAkBA,EAAK+C,MAAf/C,EAAKuC,OAGxB,wBAGR,qBAAKsB,UAAU,SACf,8BAAIwG,EAAUgB,QAAd,cAEJ,sBAAKxH,UAAU,2BAAf,UACI,oBAAIA,UAAU,6BAAd,4BAGA,oBAAGA,UAAU,yBAAb,UACI,cAAC,IAAD,CAAYA,UAAU,gBACrBwG,EAAU3H,gBAEf,wBACImB,UAAU,oBACVa,QAAS,WACLiC,EACM3D,EACI,QACAqH,EAAU9H,IAEdJ,EAAe,QAASkI,IARtC,SAWK1D,EACG,cAAC,IAAD,CACI9C,UAAU,cACV,eAAa,EACb0D,WAAW,IAGf,cAAC,IAAD,CACI1D,UAAU,WACV,eAAa,EACb0D,WAAW,SAK3B,qBAAK1D,UAAU,+BAAf,cACwCsH,IAAnCd,EAAUiB,qBACPjB,EAAUiB,qBAAqB/C,KAC3B,SAACgD,GACG,OACI,mBAEI1H,UAAU,sBAFd,SAIK0H,EAAQxI,MAHJwI,EAAQhJ,OAS7B,wBAGR,oBAAIsB,UAAU,4BAAd,SACI,4BAAIwG,EAAUmB,YAElB,sBAAK3H,UAAU,kCAAf,UACI,0CACA,mBAAGA,UAAU,qCAAb,SACKwG,EAAUvH,WAEf,wBACIe,UAAU,oBACVa,QAAS,WACLhE,GAAoBD,GACpBG,EAAgByJ,EAAUvH,WAJlC,SAOI,cAAC,IAAD,CACIe,UAAU,cACV,eAAa,EACb0D,WAAW,YAMnC,IAAK,OACD,YAAgC4D,IAAzBV,EAAgBgB,KACnB,qBAAK5H,UAAU,yBAAf,SACK4G,EAAgBgB,KAAKlD,KAAI,SAACkD,GACvB,OACI,sBAEI5H,UAAU,qBAFd,UAI2B,OAAtB4H,EAAKC,aACF,qBAAK7H,UAAU,iCAAf,SACI,cAAC,IAAD,CACIA,UAAU,uBACV,eAAa,EACb0D,WAAW,MAInB,qBACI1D,UAAU,kBACVwD,IAAG,0CAAqCoE,EAAKC,cAC7CpE,IAAI,KAGZ,cAAC,IAAD,CACI7C,GAAE,yBAAoBgH,EAAKlJ,IAC3BsB,UAAU,mBAFd,SAIK4H,EAAKE,YAEV,mBAAG9H,UAAU,mBAAb,SACK4H,EAAK1I,SAzBL0I,EAAKlJ,SAgC1B,wBAER,IAAK,SACD,YAAmC4I,IAA5BZ,EAAgB9I,QACnB,qBAAKoC,UAAU,4BAAf,SACK0G,EAAgB9I,QAAQ8G,KAAI,SAACqD,EAAQzE,GAClC,OACI,gCACI,cAAC,EAAD,CACI6C,OAAQ4B,EAAO5B,OACfC,QAAS7G,EAAYwI,EAAOC,YAC5B3B,OAAQ0B,EAAOE,UAEnB,wBACIjI,UAAU,0BACVa,QAAS,WACLhE,GACKD,GAELG,EAAgBgL,EAAOE,UAN/B,SASI,cAAC,IAAD,CACIjI,UAAU,cACV,eAAa,EACb0D,WAAW,QAlBbJ,QA0BtB,yBAyEK4E,MAEL,sBACIlI,UACIpD,EACM,yBACA,yBAJd,UAOI,wBACIoD,UAAU,iBACVa,QAAS,kBAAMhE,GAAmB,IAFtC,SAII,cAAC,IAAD,CACImD,UAAU,iBACV,eAAa,EACb0D,WAAW,MAGnB,mBAAG1D,UAAU,kBAAb,SAAgClD,YAQhD,sBAAKkD,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBACIA,UAAU,iBACVwD,IAAG,0CAAqCgD,EAAU5H,aAClD6E,IAAI,KAER,0BAASzD,UAAU,qBAAnB,UACI,0BAASA,UAAU,kBAAnB,UACI,oBAAIA,UAAU,mBAAd,SAAkCwG,EAAU/J,QAC5C,sBAAKuD,UAAU,uBAAf,UACI,mBAAGA,UAAU,0BAAb,SACKT,EAAYiH,EAAUa,gBAE3B,qBAAKrH,UAAU,SACf,qBAAKA,UAAU,mBAAf,cAC0BsH,IAArBd,EAAUe,OACPf,EAAUe,OAAO7C,KAAI,SAACvI,GAClB,OAAO,4BAAkBA,EAAK+C,MAAf/C,EAAKuC,OAGxB,wBAGR,qBAAKsB,UAAU,SACf,8BAAIwG,EAAUgB,QAAd,cAEJ,sBAAKxH,UAAU,oBAAf,UACI,oBAAIA,UAAU,sBAAd,4BAGA,oBAAGA,UAAU,kBAAb,UACI,cAAC,IAAD,CAAYA,UAAU,gBACrBwG,EAAU3H,gBAEf,wBACImB,UAAU,oBACVa,QAAS,WACLiC,EACM3D,EACI,QACAqH,EAAU9H,IAEdJ,EAAe,QAASkI,IARtC,SAWK1D,EACG,cAAC,IAAD,CACI9C,UAAU,cACV,eAAa,EACb0D,WAAW,IAGf,cAAC,IAAD,CACI1D,UAAU,WACV,eAAa,EACb0D,WAAW,SAK3B,qBAAK1D,UAAU,wBAAf,cACwCsH,IAAnCd,EAAUiB,qBACPjB,EAAUiB,qBAAqB/C,KAC3B,SAACgD,GACG,OACI,mBAEI1H,UAAU,eAFd,SAIK0H,EAAQxI,MAHJwI,EAAQhJ,OAS7B,wBAGR,oBAAIsB,UAAU,qBAAd,SACI,4BAAIwG,EAAUmB,YAElB,sBAAK3H,UAAU,sBAAf,UACI,0CACA,mBAAGA,UAAU,8BAAb,SACKwG,EAAUvH,WAEf,wBACIe,UAAU,aACVa,QAAS,WACLhE,GAAoBD,GACpBG,EAAgByJ,EAAUvH,WAJlC,SAOI,cAAC,IAAD,CACIe,UAAU,cACV,eAAa,EACb0D,WAAW,YAK3B,yBAAS1D,UAAU,4BAAnB,SACI,sBAAKA,UAAU,4BAAf,UACI,wBACItB,GAAG,WACHsB,UAAS,yCACe,SAApB8G,EAAOpL,SACD,qBACA,IAEVmF,QAAS,kBAAMkG,EAAU,CAAErL,SAAU,UAPzC,kBAWA,wBACIgD,GAAG,aACHsB,UAAS,2CACe,WAApB8G,EAAOpL,SACD,qBACA,IAEVmF,QAAS,kBACLkG,EAAU,CAAErL,SAAU,YAR9B,0BAea,WAApBoL,EAAOpL,cACwB4L,IAA5BZ,EAAgB9I,QACZ,qBAAKoC,UAAU,qBAAf,SACK0G,EAAgB9I,QAAQ8G,KACrB,SAACqD,EAAQzE,GACL,OACI,gCACI,cAAC,EAAD,CACI6C,OAAQ4B,EAAO5B,OACfC,QAAS7G,EACLwI,EAAOC,YAEX3B,OAAQ0B,EAAOE,UAEnB,wBACIjI,UAAU,0BACVa,QAAS,WACLhE,GACKD,GAELG,EACIgL,EAAOE,UAPnB,SAWI,cAAC,IAAD,CACIjI,UAAU,cACV,eAAa,EACb0D,WAAW,QAtBbJ,QA+B1B,wBAEgB,SAApBwD,EAAOpL,eACkB4L,IAAzBV,EAAgBgB,KACZ,qBAAK5H,UAAU,kBAAf,SACK4G,EAAgBgB,KAAKlD,KAAI,SAACkD,GACvB,OACI,sBAEI5H,UAAU,cAFd,UAI2B,OAAtB4H,EAAKC,aACF,qBAAK7H,UAAU,0BAAf,SACI,cAAC,IAAD,CACIA,UAAU,gBACV,eAAa,EACb0D,WAAW,MAInB,qBACI1D,UAAU,WACVwD,IAAG,0CAAqCoE,EAAKC,cAC7CpE,IAAI,KAIZ,cAAC,IAAD,CACI7C,GAAE,yBAAoBgH,EAAKlJ,IAC3BsB,UAAU,YAFd,SAIK4H,EAAKE,YAEV,mBAAG9H,UAAU,YAAb,SACK4H,EAAK1I,SA1BL0I,EAAKlJ,SAoC9B,8BAIZ,sBACIsB,UACIpD,EACM,yBACA,yBAJd,UAOI,wBACIoD,UAAU,iBACVa,QAAS,kBAAMhE,GAAmB,IAFtC,SAII,cAAC,IAAD,CACImD,UAAU,iBACV,eAAa,EACb0D,WAAW,MAGnB,mBAAG1D,UAAU,kBAAb,SAAgClD,WC/QjCqL,EA1RY,WACvB,IAAQzJ,EAAO6H,cAAP7H,GACR,EAA4B5E,mBAAS,IAArC,mBAAOsO,EAAP,KAAeC,EAAf,KACA,EAAwCvO,mBAAS,IAAjD,mBAAOwO,EAAP,KAAqBC,EAArB,KACA,EAAwCzO,mBAAS,IAAjD,mBAAO0O,EAAP,KAAqBC,EAArB,KACA,EAA4B3O,mBAAS,CAAE4B,SAAU,SAAjD,mBAAOoL,EAAP,KAAeC,EAAf,KACA,EASI3G,IARA9B,EADJ,EACIA,eACAa,EAFJ,EAEIA,oBACAG,EAHJ,EAGIA,oBACAC,EAJJ,EAIIA,YACA3C,EALJ,EAKIA,gBACAC,EANJ,EAMIA,mBACAC,EAPJ,EAOIA,aACAC,EARJ,EAQIA,gBAGE2L,EAAS,uCAAG,8BAAAnL,EAAA,sEACSC,MAAM,mCAAD,OACWkB,EADX,6DADd,cACRjB,EADQ,gBAIKA,EAASC,OAJd,OAIRC,EAJQ,OAKd0K,EAAU1K,GALI,2CAAH,qDAQTgL,EAAW,uCAAG,8BAAApL,EAAA,sEACOC,MAAM,mCAAD,OACWkB,EADX,qEADZ,cACVjB,EADU,gBAIGA,EAASC,OAJZ,OAIVC,EAJU,OAKhB4K,EAAgB5K,GALA,2CAAH,qDAQXiL,EAAW,uCAAG,8BAAArL,EAAA,sEACOC,MAAM,mCAAD,OACWkB,EADX,qEADZ,cACVjB,EADU,gBAIGA,EAASC,OAJZ,OAIVC,EAJU,OAKhB8K,EAAgB9K,GALA,2CAAH,qDAQjBrD,qBAAU,WACNoO,IACAC,IACAC,MACD,IAEH,IAAM9F,EAAQxD,EAAoB8I,EAAO1J,IAEzC,OACI,sBAAKsB,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBACIA,UAAU,iBACVwD,IAAG,0CAAqC4E,EAAOxJ,aAC/C6E,IAAI,KAER,0BAASzD,UAAU,qBAAnB,UACI,0BAASA,UAAU,kBAAnB,UACI,oBAAIA,UAAU,mBAAd,SAAkCoI,EAAOlJ,OACzC,sBAAKc,UAAU,uBAAf,UACI,mBAAGA,UAAU,0BAAb,SACKT,EAAY6I,EAAOf,gBAExB,qBAAKrH,UAAU,SACf,qBAAKA,UAAU,mBAAf,cACuBsH,IAAlBc,EAAOb,OACJa,EAAOb,OAAO7C,KAAI,SAACvI,GACf,OAAO,4BAAkBA,EAAK+C,MAAf/C,EAAKuC,OAGxB,wBAGR,qBAAKsB,UAAU,SACf,8BAAIoI,EAAOZ,QAAX,cAEJ,sBAAKxH,UAAU,oBAAf,UACI,oBAAIA,UAAU,sBAAd,4BAGA,oBAAGA,UAAU,kBAAb,UACI,cAAC,IAAD,CAAYA,UAAU,gBACrBoI,EAAOvJ,gBAEZ,wBACImB,UAAU,oBACVa,QAAS,WACLiC,EACM3D,EAAoB,KAAMiJ,EAAO1J,IACjCJ,EAAe,KAAM8J,IALnC,SAQKtF,EACG,cAAC,IAAD,CACI9C,UAAU,cACV,eAAa,EACb0D,WAAW,IAGf,cAAC,IAAD,CACI1D,UAAU,WACV,eAAa,EACb0D,WAAW,SAK3B,qBAAK1D,UAAU,wBAAf,cACqCsH,IAAhCc,EAAOX,qBACJW,EAAOX,qBAAqB/C,KAAI,SAACgD,GAC7B,OACI,mBAEI1H,UAAU,eAFd,SAIK0H,EAAQxI,MAHJwI,EAAQhJ,OAQzB,wBAGR,oBAAIsB,UAAU,qBAAd,SACI,4BAAIoI,EAAOT,YAEf,sBAAK3H,UAAU,sBAAf,UACI,0CACA,mBAAGA,UAAU,8BAAb,SACKoI,EAAOnJ,WAEZ,wBACIe,UAAU,aACVa,QAAS,WACLhE,GAAoBD,GACpBG,EAAgBqL,EAAOnJ,WAJ/B,SAOI,cAAC,IAAD,CACIe,UAAU,cACV,eAAa,EACb0D,WAAW,YAK3B,yBAAS1D,UAAU,4BAAnB,SACI,sBAAKA,UAAU,4BAAf,UACI,wBACItB,GAAG,WACHsB,UAAS,yCACe,SAApB8G,EAAOpL,SACD,qBACA,IAEVmF,QAAS,kBAAMkG,EAAU,CAAErL,SAAU,UAPzC,kBAWA,wBACIgD,GAAG,aACHsB,UAAS,2CACe,WAApB8G,EAAOpL,SACD,qBACA,IAEVmF,QAAS,kBACLkG,EAAU,CAAErL,SAAU,YAR9B,0BAea,WAApBoL,EAAOpL,cACqB4L,IAAzBgB,EAAa1K,QACT,qBAAKoC,UAAU,qBAAf,SACKsI,EAAa1K,QAAQ8G,KAAI,SAACqD,EAAQzE,GAC/B,OACI,gCACI,cAAC,EAAD,CAEI6C,OAAQ4B,EAAO5B,OACfC,QAAS7G,EACLwI,EAAOC,YAEX3B,OAAQ0B,EAAOE,SALV3E,GAOT,wBACItD,UAAU,0BACVa,QAAS,WACLhE,GACKD,GAELG,EACIgL,EAAOE,UAPnB,SAWI,cAAC,IAAD,CACIjI,UAAU,cACV,eAAa,EACb0D,WAAW,cAQnC,wBAEgB,SAApBoD,EAAOpL,eACe4L,IAAtBkB,EAAaZ,KACT,qBAAK5H,UAAU,kBAAf,SACKwI,EAAaZ,KAAKlD,KAAI,SAACkD,GACpB,OACI,sBAEI5H,UAAU,cAFd,UAI2B,OAAtB4H,EAAKC,aACF,qBAAK7H,UAAU,0BAAf,SACI,cAAC,IAAD,CACIA,UAAU,gBACV,eAAa,EACb0D,WAAW,MAInB,qBACI1D,UAAU,WACVwD,IAAG,0CAAqCoE,EAAKC,cAC7CpE,IAAI,KAIZ,cAAC,IAAD,CACI7C,GAAE,yBAAoBgH,EAAKlJ,IAC3BsB,UAAU,YAFd,SAIK4H,EAAKE,YAEV,mBAAG9H,UAAU,YAAb,SACK4H,EAAK1I,SA1BL0I,EAAKlJ,SAoC9B,8BAIZ,sBACIsB,UACIpD,EACM,yBACA,yBAJd,UAOI,wBACIoD,UAAU,iBACVa,QAAS,kBAAMhE,GAAmB,IAFtC,SAII,cAAC,IAAD,CACImD,UAAU,iBACV,eAAa,EACb0D,WAAW,MAGnB,mBAAG1D,UAAU,kBAAb,SAAgClD,W,QCZjC+L,EA1QgB,WAC3B,IAAQnK,EAAO6H,cAAP7H,GACR,EAAoC5E,mBAAS,IAA7C,mBAAOgP,EAAP,KAAmBC,EAAnB,KACA,EAAgDjP,mBAAS,IAAzD,mBAAOkP,EAAP,KAAyBC,EAAzB,KACA,EAA8CnP,mBAAS,IAAvD,mBAAOoP,EAAP,KAAwBC,EAAxB,KACA,EAA4BrP,mBAAS,CAAE4B,SAAU,WAAjD,mBAAOoL,EAAP,KAAeC,EAAf,KACA,EAAkCjN,oBAAS,GAA3C,mBAAOsP,EAAP,KAAkBC,EAAlB,KACA,EAAgCvP,mBAAS,MAAzC,mBAAOwP,EAAP,KAAiBC,EAAjB,KAEA,EAMInJ,IALAb,EADJ,EACIA,YACA3C,EAFJ,EAEIA,gBACAC,EAHJ,EAGIA,mBACAC,EAJJ,EAIIA,aACAC,EALJ,EAKIA,gBAGEyM,EAAa,uCAAG,8BAAAjM,EAAA,sEACKC,MAAM,uCAAD,OACekB,EADf,6DADV,cACZjB,EADY,gBAICA,EAASC,OAJV,OAIZC,EAJY,OAKlBoL,EAAcpL,GALI,2CAAH,qDAQb8L,EAAmB,uCAAG,8BAAAlM,EAAA,sEACDC,MAAM,uCAAD,OACekB,EADf,8EADJ,cAClBjB,EADkB,gBAILA,EAASC,OAJJ,OAIlBC,EAJkB,OAKxBsL,EAAoBtL,GALI,2CAAH,qDAQnB+L,EAAkB,uCAAG,8BAAAnM,EAAA,sEACAC,MAAM,uCAAD,OACekB,EADf,qDADL,cACjBjB,EADiB,gBAIJA,EAASC,OAJL,OAIjBC,EAJiB,OAKvBwL,EAAmBxL,GALI,2CAAH,qDAcxB,OANArD,qBAAU,WACNkP,IACAC,IACAC,MACD,IAGC,sBAAK1J,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACiC,OAA5B8I,EAAWjB,aACR,qBAAK7H,UAAU,iBAAf,SACI,cAAC,IAAD,CACIA,UAAU,gBACV,eAAa,EACb0D,WAAW,MAInB,qBACI1D,UAAU,iBACVwD,IAAG,0CAAqCsF,EAAWjB,cACnDpE,IAAI,KAGZ,0BAASzD,UAAU,4BAAnB,UACI,0BAASA,UAAU,kBAAnB,UACI,oBAAIA,UAAU,mBAAd,SAAkC8I,EAAW5J,OAC7C,sBAAKc,UAAU,cAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,oBAAd,wBAGA,mBAAGA,UAAU,mBAAb,SACKT,EAAYuJ,EAAWa,eAGhC,sBAAK3J,UAAU,kBAAf,UACI,oBAAIA,UAAU,oBAAd,6BAGA,mBAAGA,UAAU,mBAAb,SACK8I,EAAWc,oBAGpB,sBAAK5J,UAAU,kBAAf,UACI,oBAAIA,UAAU,oBAAd,wBAGA,mBAAGA,UAAU,mBAAb,SACK8I,EAAWe,6BAIxB,sBAAK7J,UAAU,mBAAf,UACI,2CACA,mBAAGA,UAAU,qBAAb,SACK8I,EAAWgB,YAEhB,wBACI9J,UAAU,wBACVa,QAAS,WACLhE,GAAoBD,GACpBG,EAAgB+L,EAAWgB,YAJnC,SAOI,cAAC,IAAD,CACI9J,UAAU,cACV,eAAa,EACb0D,WAAW,YAK3B,yBAAS1D,UAAU,4BAAnB,SACI,sBAAKA,UAAU,4BAAf,UACI,wBACItB,GAAG,WACHsB,UAAS,yCACe,WAApB8G,EAAOpL,SACD,qBACA,IAEVmF,QAAS,kBACLkG,EAAU,CAAErL,SAAU,YAR9B,mBAaA,wBACIgD,GAAG,aACHsB,UAAS,2CACe,UAApB8G,EAAOpL,SACD,qBACA,IAEVmF,QAAS,kBAAMkG,EAAU,CAAErL,SAAU,WAPzC,yBAaa,WAApBoL,EAAOpL,SACJ,qBAAKsE,UAAU,yBAAf,cAC+BsH,IAA1B0B,EAAiBpB,KACdoB,EAAiBpB,KAAKlD,KAAI,SAACkD,EAAMtE,GAC7B,OACI,sBAEItD,UAAU,gBAFd,UAI0B,OAArB4H,EAAKhJ,YACF,qBAAKoB,UAAU,0BAAf,SACI,cAAC,IAAD,CACIA,UAAU,gBACV,eAAa,EACb0D,WAAW,MAInB,qBACI1D,UAAU,oBACVwD,IAAG,0CAAqCoE,EAAKhJ,aAC7C6E,IAAI,KAGZ,cAAC,IAAD,CACI7C,GAAE,wBAAmBgH,EAAKlJ,IAC1BsB,UAAU,YAFd,SAII,mBAAGA,UAAU,YAAb,SACK4H,EAAKnL,UAGd,mBAAGuD,UAAU,mBAAb,SACK4H,EAAKE,cA3BLxE,MAiCjB,0BAGY,UAApBwD,EAAOpL,SACP,qBAAKsE,UAAU,qCAAf,SACkC,OAA7BkJ,EAAgBa,SACbb,EAAgBa,SAASrF,KAAI,SAACsF,EAAK1G,GAC/B,OACI,sBAAKtD,UAAU,uBAAf,UACI,qBAEIA,UAAU,aACVwD,IAAG,0CAAqCwG,EAAIC,WAC5CxG,IAAI,IAHCH,GAKT,qBACItD,UAAU,mBACVa,QAAS,WACLwI,GAAcD,GACdG,EACI,qBAEIvJ,UAAU,mBACVwD,IAAG,0CAAqCwG,EAAIC,WAC5CxG,IAAI,IAHCH,KANrB,SAcI,cAAC,IAAD,CACItD,UAAU,yBACV,eAAa,EACb0D,WAAW,YAO/B,0BAIR,8BAIZ,sBACI1D,UACIpD,EACM,yBACA,yBAJd,UAOI,wBACIoD,UAAU,iBACVa,QAAS,kBAAMhE,GAAmB,IAFtC,SAII,cAAC,IAAD,CACImD,UAAU,iBACV,eAAa,EACb0D,WAAW,MAGnB,mBAAG1D,UAAU,kBAAb,SAAgClD,OAEpC,sBACIkD,UAAWoJ,EAAY,mBAAqB,mBADhD,UAGI,wBACIpJ,UAAU,qBACVa,QAAS,kBAAMwI,GAAcD,IAFjC,SAII,cAAC,IAAD,CACIpJ,UAAU,iBACV,eAAa,EACb0D,WAAW,MAGnB,qBAAK1D,UAAU,YAAf,SAA4BsJ,W,QC9M7BY,EA3DO,SAAC,GAWhB,IAVHpH,EAUE,EAVFA,MACAC,EASE,EATFA,OACAC,EAQE,EARFA,OACAvG,EAOE,EAPFA,MACAwC,EAME,EANFA,SACAgE,EAKE,EALFA,KACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,OACAC,EACE,EADFA,MAEA,EAAgDjD,IAAxC9B,EAAR,EAAQA,eAAgBa,EAAxB,EAAwBA,oBAExB,OACI,sBAAKa,UAAU,cAAf,UACI,qBACIwD,IAAG,0CAAqCT,GACxCU,IAAI,GACJzD,UAAU,uBAEd,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAMY,GAAIoC,EAAQhD,UAAU,sBAA5B,SACI,6BAAKvD,MAET,sBAAKuD,UAAU,yCAAf,UACI,oBAAGA,UAAU,sBAAb,UACI,cAAC,IAAD,CAAYA,UAAU,wBACrBiD,KAEL,mBAAGjD,UAAU,0BAAb,SAAwCf,UAGhD,wBACIe,UAAU,uBACVa,QAAS,WACLiC,EACM3D,EAAoB+D,EAAWC,GAC/B7E,EAAe8E,EAAQC,IALrC,SAQKP,EACG,cAAC,IAAD,CACI9C,UAAU,cACV,eAAa,EACb0D,WAAW,IAGf,cAAC,IAAD,CACI1D,UAAU,WACV,eAAa,EACb0D,WAAW,UCUpByG,EA7DO,SAAC,GAWhB,IAVHrH,EAUE,EAVFA,MACAC,EASE,EATFA,OACAC,EAQE,EARFA,OACAvG,EAOE,EAPFA,MACAwC,EAME,EANFA,SACAgE,EAKE,EALFA,KACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,OACAC,EACE,EADFA,MAEA,EAAgDjD,IAAxC9B,EAAR,EAAQA,eAAgBa,EAAxB,EAAwBA,oBAExB,OACI,sBAAKa,UAAU,cAAf,UACI,cAAC,IAAD,CAAMY,GAAIoC,EAAQhD,UAAU,0BAA5B,SACI,qBACIwD,IAAG,0CAAqCT,GACxCU,IAAI,GACJzD,UAAU,yBAGlB,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAMY,GAAIoC,EAAQhD,UAAU,sBAA5B,SACI,6BAAKvD,MAET,sBAAKuD,UAAU,yCAAf,UACI,oBAAGA,UAAU,sBAAb,UACI,cAAC,IAAD,CAAYA,UAAU,wBACrBiD,KAEL,mBAAGjD,UAAU,0BAAb,SAAwCf,UAGhD,wBACIe,UAAU,uBACVa,QAAS,WACLiC,EACM3D,EAAoB+D,EAAWC,GAC/B7E,EAAe8E,EAAQC,IALrC,SAQKP,EACG,cAAC,IAAD,CACI9C,UAAU,cACV,eAAa,EACb0D,WAAW,IAGf,cAAC,IAAD,CACI1D,UAAU,WACV,eAAa,EACb0D,WAAW,UC6PpB0G,EAjTG,WACd,MAMIhK,IALAnE,EADJ,EACIA,UACAoD,EAFJ,EAEIA,mBACAC,EAHJ,EAGIA,oBACAtC,EAJJ,EAIIA,WACAE,EALJ,EAKIA,QAGJ,EAA4CpD,mBAASmC,EAAUN,OAA/D,mBAAO0O,EAAP,KAAuBC,EAAvB,KACA,EAAsCxQ,mBAASmC,EAAUL,IAAzD,mBAAO2O,EAAP,KAAoBC,EAApB,KACA,EAAsC1Q,mBAAS,CAC3C2Q,UAAW,GACXC,WAAY,KAFhB,mBAAOC,EAAP,KAAoBC,EAApB,KAIA,EAA0C9Q,mBAAS,QAAnD,mBAAO+Q,EAAP,KAAsBC,EAAtB,KACA,EAAwChR,oBAAS,GAAjD,mBAAOiR,EAAP,KAAqBC,EAArB,KACA,EAAkClR,oBAAS,GAA3C,mBAAOmR,EAAP,KAAkBC,EAAlB,KAEMC,EAAiBlK,mBACjBmK,EAAsBnK,mBACtBoK,EAAoBpK,mBACpBqK,EAAiBrK,mBAqBjBsK,EAAgB,SAAChO,EAAGiO,GACtB,IAAMC,EAAoB,YAAOlO,GAC3BmO,EAAiB,YAAOF,GACO,iBAAjCL,EAAejL,QAAQ7B,QACvBuM,EAAe,CAAEH,UAAW,MAAOC,WAAY,QAC/Ce,EAAqBE,KAAKC,GAC1BF,EAAkBC,KAAKE,IAEU,WAAjCV,EAAejL,QAAQ7B,QACvBuM,EAAe,CAAEH,UAAW,WAAYC,WAAY,aACpDe,EAAqBE,KAAKG,GAC1BJ,EAAkBC,KAAKG,IAEU,eAAjCX,EAAejL,QAAQ7B,QACvBuM,EAAe,CAAEH,UAAW,UAAWC,WAAY,YACnDe,EAAqBE,KAAKI,GAC1BL,EAAkBC,KAAKI,IAEe,eAAtCX,EAAoBlL,QAAQ7B,QAC5BoN,EAAqBO,UACrBN,EAAkBM,WAEtB1B,EAAkBmB,GAClBjB,EAAekB,IAEbE,EAAmB,SAACrO,EAAGiO,GACzB,IAAMS,EAAQ1O,EAAEd,MAAMyP,cAChBC,EAAQX,EAAE/O,MAAMyP,cACtB,OAAID,EAAQE,EACD,EAEPF,EAAQE,GACA,EAEL,GAELN,EAAgB,SAACtO,EAAGiO,GACtB,IAAMS,EAAQ1O,EAAE2B,KAAKgN,cACfC,EAAQX,EAAEtM,KAAKgN,cACrB,OAAID,EAAQE,EACD,EAEPF,EAAQE,GACA,EAEL,GAELL,EAAgB,SAACvO,EAAGiO,GACtB,OAAOjO,EAAEsB,aAAe2M,EAAE3M,cAExBkN,EAAc,SAACxO,EAAGiO,GACpB,OAAOA,EAAE1M,WAAavB,EAAEuB,YAO5B,OAJAsN,2BAAgB,WACZb,EAActP,EAAUN,MAAOM,EAAUL,MAC1C,CAACK,IAGA,sBAAKyC,GAAG,sCAAR,UACI,qBAAKsB,UAAU,oBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,yBACId,KAAK,OACLa,IAAKoL,EACLkB,SAAU,kBACNd,EAActP,EAAUN,MAAOM,EAAUL,KAE7CoE,UAAU,8BACVtB,GAAG,oBAPP,UASI,wBAAQL,MAAM,eAAd,0BACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,SAAd,uBAEJ,yBACIa,KAAK,YACLa,IAAKqL,EACLiB,SAAU,kBACNd,EAActP,EAAUN,MAAOM,EAAUL,KAE7CoE,UAAU,8BACVtB,GAAG,uBAPP,UASI,wBAAQL,MAAM,YAAd,SACKsM,EAAYF,YAEjB,wBAAQpM,MAAM,aAAd,SACKsM,EAAYD,mBAIzB,sBAAK1K,UAAU,iBAAf,UACI,sCACA,sBAAKA,UAAU,qBAAf,UACI,wBACIA,UAAU,WACVa,QAAS,kBAAMiK,EAAiB,SAFpC,SAII,cAAC,IAAD,CAAY9K,UAAU,oBAE1B,wBACIA,UAAU,WACVa,QAAS,kBAAMiK,EAAiB,SAFpC,SAII,cAAC,IAAD,CAAY9K,UAAU,+BAM1C,sBAAKtB,GAAG,sCAAR,UACI,qBAAKsB,UAAU,4BAAf,SACI,oBAAIA,UAAU,gBAAd,8BAEJ,sBAAKtB,GAAG,uBAAR,UACI,0BACIsB,UAAU,iCACVtB,GAAG,6BAFP,UAII,sBACIsB,UAAU,4BACVa,QAAS,WA7IzBkK,GACAM,EAAkBnL,QAAQoM,MAAMC,QAAU,OAC1CvB,GAAiBD,KAEjBM,EAAkBnL,QAAQoM,MAAMC,QAAU,OAC1CvB,GAAiBD,KAsIL,UAII,iDACA,+CAAkB/N,KACjB+N,EAAe,cAAC,IAAD,IAAkB,cAAC,IAAD,OAEtC,qBAEI/K,UACsB,SAAlB6K,EACM,oCACA,oCAEV9K,IAAKsL,EAPT,SAS+B,IAA1BhB,EAAelM,OACZ,qBAAK6B,UAAU,kBAAf,SACI,8DAGJqK,EAAe3F,KAAI,SAACnG,GAChB,MAAsB,SAAlBsM,EAEI,cAAC,EAAD,CAEInM,GAAIH,EAAKG,GACToE,MAAOzD,EACHd,EAAKG,IAETqE,OAAQxE,EAAKK,YACboE,OAAM,wBAAmBzE,EAAKG,IAC9BjC,MAAO8B,EAAK9B,MACZwC,SAAUV,EAAKU,SACfgE,KAAM1E,EAAKM,aACXqE,UAAW,QACXC,SAAU5E,EAAKG,GACf0E,OAAQ,QACRC,MAAO9E,GAbFA,EAAKG,IAkBd,cAAC,EAAD,CAEIA,GAAIH,EAAKG,GACToE,MAAOzD,EACHd,EAAKG,IAETqE,OAAQxE,EAAKK,YACboE,OAAM,wBAAmBzE,EAAKG,IAC9BjC,MAAO8B,EAAK9B,MACZwC,SAAUV,EAAKU,SACfgE,KAAM1E,EAAKM,aACXqE,UAAW,QACXC,SAAU5E,EAAKG,GACf0E,OAAQ,QACRC,MAAO9E,GAbFA,EAAKG,YAqBtC,0BACIsB,UAAU,iCACVtB,GAAG,0BAFP,UAII,sBACIsB,UAAU,4BACVa,QAAS,WA1MzBoK,GACAK,EAAepL,QAAQoM,MAAMC,QAAU,OACvCrB,GAAcD,KAEdK,EAAepL,QAAQoM,MAAMC,QAAU,OACvCrB,GAAcD,KAmMF,UAII,mDACA,+CAAkB/N,KACjB+N,EAAY,cAAC,IAAD,IAAkB,cAAC,IAAD,OAEnC,qBACIjL,UACsB,SAAlB6K,EACM,oCACA,oCAEV9K,IAAKuL,EANT,SAQ4B,IAAvBf,EAAYpM,OACT,qBAAK6B,UAAU,kBAAf,SACI,8DAGJuK,EAAY7F,KAAI,SAACnG,GACb,MAAsB,SAAlBsM,EAEI,cAAC,EAAD,CAEInM,GAAIH,EAAKG,GACToE,MAAOxD,EACHf,EAAKG,IAETqE,OAAQxE,EAAKK,YACboE,OAAM,qBAAgBzE,EAAKG,IAC3BjC,MAAO8B,EAAKW,KACZD,SAAUV,EAAKU,SACfgE,KAAM1E,EAAKM,aACXqE,UAAW,KACXC,SAAU5E,EAAKG,GACf0E,OAAQ,KACRC,MAAO9E,GAbFA,EAAKG,IAkBd,cAAC,EAAD,CAEIA,GAAIH,EAAKG,GACToE,MAAOxD,EACHf,EAAKG,IAETqE,OAAQxE,EAAKK,YACboE,OAAM,qBAAgBzE,EAAKG,IAC3BjC,MAAO8B,EAAKW,KACZD,SAAUV,EAAKU,SACfgE,KAAM1E,EAAKM,aACXqE,UAAW,KACXC,SAAU5E,EAAKG,GACf0E,OAAQ,KACRC,MAAO9E,GAbFA,EAAKG,sBC9I3C8N,EA3IG,WACd,MAAsC1S,mBAAS,IAA/C,mBAAO2S,EAAP,KAAoBC,EAApB,KACA,EAAgC5S,mBAAS,SAAzC,mBAAO4B,EAAP,KAAiBiR,EAAjB,KAEA,EAMIvM,IALArC,EADJ,EACIA,OACA1B,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,gBACAN,EAJJ,EAIIA,iBACAD,EALJ,EAKIA,cAoBJ,OAJAzB,qBAAU,WACNgC,EAAgB,2BAAKD,GAAN,IAAoBF,KAAMT,OAC1C,CAACA,IAGA,sBAAMgD,GAAG,kBAAT,SACI,sBAAKsB,UAAU,YAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,uBACItB,GAAG,cACHvC,KAAK,OACLkC,MAAOoO,EACPG,YAzBU,WAC1B,OAAQlR,GACJ,IAAK,QACD,MAAO,qBACX,IAAK,KACD,MAAO,uBACX,IAAK,SACD,MAAO,uBAkBcmR,GACbR,SAAU,SAACjL,GACPsL,EAAetL,EAAE0L,OAAOzO,UAGhC,wBACIK,GAAG,aACHvC,KAAK,SACL0E,QAAS,SAACO,GACN,GAAoB,KAAhBqL,EACA,OAAQ/Q,GACJ,IAAK,QACD,OAAOqR,MACH,4BAER,IAAK,KACD,OAAOA,MACH,8BAER,IAAK,SACD,OAAOA,MACH,iCAMZ3L,EAAEE,iBACFvD,EAAOrC,EAAU+Q,GACjBC,EAAe,KAxB3B,SA4BI,cAAC,IAAD,CAAU1M,UAAU,yBAG5B,sBAAKA,UAAU,yBAAf,UACI,wBACItB,GAAG,qBACHsB,UAAS,0CACQ,UAAbtE,EAAuB,kBAAoB,IAE/CmF,QAAS,WACL8L,EAAY,SACZ3Q,EAAiB,2BACVD,GADS,IAEZL,SAAU,YATtB,mBAeA,wBACIgD,GAAG,kBACHsB,UAAS,uCACQ,OAAbtE,EAAoB,kBAAoB,IAE5CmF,QAAS,WACL8L,EAAY,MACZ3Q,EAAiB,2BACVD,GADS,IAEZL,SAAU,SATtB,gBAeA,wBACIgD,GAAG,sBACHsB,UAAS,2CACQ,WAAbtE,EAAwB,kBAAoB,IAEhDmF,QAAS,WACL8L,EAAY,UACZ3Q,EAAiB,2BACVD,GADS,IAEZL,SAAU,aATtB,uBAgBJ,wBACIgD,GAAG,mBACHmC,QAAS,WACL7E,EAAiB,CACbN,SAAU,QACVC,MAAO,GACPC,GAAI,GACJC,OAAQ,GACRC,MAAO,MARnB,yBCrCDkR,EAjFW,SAAC,GAUpB,IATHtO,EASE,EATFA,GACAsE,EAQE,EARFA,OACAgH,EAOE,EAPFA,IACAvN,EAME,EANFA,MACAwQ,EAKE,EALFA,QACAhO,EAIE,EAJFA,SACA9C,EAGE,EAHFA,KACA2G,EAEE,EAFFA,MACAG,EACE,EADFA,KAEA,EACI7C,IADI9B,EAAR,EAAQA,eAAgBa,EAAxB,EAAwBA,oBAAqBI,EAA7C,EAA6CA,YAGvCZ,EAAM,CACRD,GAAIA,EACJjC,MAAOA,EACPmC,YAAaoL,EACbnL,aAAcoE,EACdnE,WAAYC,KAAKC,MACjBC,SAAUA,GAGd,OACI,sBAAKe,UAAU,iBAAf,UACI,cAAC,IAAD,CAAMY,GAAIoC,EAAQhD,UAAU,uBAA5B,SACa,OAARgK,EACG,qBAAKhK,UAAU,aAAf,SACI,cAAC,IAAD,CACIA,UAAU,WACV,eAAa,EACb0D,WAAW,MAInB,qBACI1D,UAAU,aACVwD,IAAG,0CAAqCwG,GACxCvG,IAAI,OAIhB,sBAAKzD,UAAU,cAAf,UACI,cAAC,IAAD,CAAMY,GAAIoC,EAAQhD,UAAU,eAA5B,SACKvD,IAEL,sBAAKuD,UAAU,oCAAf,UACI,mBAAGA,UAAU,sBAAb,SACKT,EAAY0N,KAEjB,mBAAGjN,UAAU,kBAAb,SAAgCf,UAGxC,8BACI,wBACIe,UAAU,uBACVa,QAAS,WACLiC,EACM3D,EAAoBhD,EAAMuC,GAC1BJ,EAAenC,EAAMwC,IALnC,SAQKmE,EACG,cAAC,IAAD,CACI9C,UAAU,cACV,eAAa,EACb0D,WAAW,IAGf,cAAC,IAAD,CACI1D,UAAU,WACV,eAAa,EACb0D,WAAW,YC1BxBwJ,EAhDU,SAAC,GAAgB,IAAd9Q,EAAa,EAAbA,OACxB,OACI,sBAAK4D,UAAU,6BAAf,UACI,cAAC,IAAD,CACIY,GAAE,yBAAoBxE,EAAOsC,IAC7BsB,UAAU,yBAFd,SAI6B,OAAxB5D,EAAOyL,aACJ,cAAC,IAAD,CACI7H,UAAU,WACV,eAAa,EACb0D,WAAW,IAGf,qBACI1D,UAAU,oBACVwD,IAAG,0CAAqCpH,EAAOyL,cAC/CpE,IAAI,OAIhB,sBAAKzD,UAAU,qBAAf,UACI,cAAC,IAAD,CACIY,GAAE,yBAAoBxE,EAAOsC,IAC7BsB,UAAU,cAFd,SAIK5D,EAAO8C,OAEZ,sBAAKc,UAAU,8BAAf,UACI,oBAAGA,UAAU,mBAAb,wBACgB5D,EAAOyN,wBAEtBzN,EAAO+Q,UAAUzI,KAAI,SAAC0I,GACnB,OACI,sBAAmBpN,UAAU,iBAA7B,UACI,mBAAGA,UAAU,kBAAb,SAAgCoN,EAAK3Q,QACrC,mBAAGuD,UAAU,iBAAb,SACKoN,EAAK/F,iBAHJ+F,EAAK1O,iBCpB5B2O,EAfM,SAAC,GAA8B,IAA5B5Q,EAA2B,EAA3BA,MAAOuN,EAAoB,EAApBA,IAAKtL,EAAe,EAAfA,GAAI4O,EAAW,EAAXA,KACpC,OACI,sBAAKtN,UAAU,gBAAf,UACI,qBACIwD,IAAG,0CAAqCwG,GACxCvG,IAAI,GACJzD,UAAU,iBAEd,cAAC,IAAD,CAAMY,GAAE,kBAAa0M,EAAb,YAAqB5O,GAAMsB,UAAU,gBAA7C,SACI,oBAAIA,UAAU,iBAAd,SAAgCvD,UCwWjC8Q,EA3WO,WAClB,MAMInN,IALArE,EADJ,EACIA,cACAM,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,gBACA+C,EAJJ,EAIIA,mBACAC,EALJ,EAKIA,oBAGEkO,EAAmB1M,GAAoB,GACvC2M,EAAgB3M,GAAoB,GACpC4M,EAAoB5M,GAAoB,GAE9C,EAA2BrG,IAApBC,EAAP,oBAEMiT,EAAoB,uCAAG,8BAAApQ,EAAA,sEACFC,MAAM,4FADJ,cACnBC,EADmB,gBAINA,EAASC,OAJH,cAInBC,EAJmB,yBAKlBA,EAAKC,SALa,2CAAH,qDAOpBgQ,EAAiB,uCAAG,8BAAArQ,EAAA,sEACCC,MAAM,yFADP,cAChBC,EADgB,gBAIHA,EAASC,OAJN,cAIhBC,EAJgB,yBAKfA,EAAKC,SALU,2CAAH,qDAOjBiQ,EAAqB,uCAAG,8BAAAtQ,EAAA,sEACHC,MAAM,6FADH,cACpBC,EADoB,gBAIPA,EAASC,OAJF,cAIpBC,EAJoB,yBAKnBA,EAAKC,SALc,2CAAH,qDAQrBkQ,EAAc,uCAAG,4BAAAvQ,EAAA,sEAGFoQ,IAHE,mCAILC,IAJK,mCAKDC,IALC,mBACblP,EADa,CAEfxC,KAAM,QACNR,MAHe,KAIfC,GAJe,KAKfQ,OALe,MAOnBE,EAAgBqC,GAPG,4CAAH,qDAcpB,GAJArE,qBAAU,WACNwT,MACD,IAECpT,EAAiBI,OAAS,IAC1B,OAAQuB,EAAaF,MACjB,IAAK,QACD,OAAmC,IAA/BJ,EAAcJ,MAAMwC,OAEhB,sBAAK6B,UAAU,8BAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,oBAAIA,UAAU,wBAAd,+BAIJ,cAAC,EAAD,UACK3D,EAAaV,MAAM+I,KAAI,SAACqJ,GACrB,OACI,cAAC,EAAD,CAEIrP,GAAIqP,EAAKrP,GACTjC,MAAOsR,EAAKtR,MACZuN,IAAK+D,EAAKnP,YACV0O,KAAM,SAJDS,EAAKrP,YAa9B,sBAAKsB,UAAU,2BAAf,UACI,qBAAIA,UAAU,sBAAd,kCAEKjE,EAAcD,MAAMH,MAAMuQ,cAF/B,OAKCnQ,EAAcJ,MAAM+I,KAAI,SAAC/I,GACtB,OACI,cAAC,EAAD,CAEI+C,GAAI/C,EAAM+C,GACVoE,MAAOzD,EAAmB1D,EAAM+C,IAChCsE,OAAM,wBAAmBrH,EAAM+C,IAC/BsL,IAAKrO,EAAMiD,YACXnC,MAAOd,EAAMc,MACbwQ,QAAStR,EAAM0L,aACfpI,SAAUtD,EAAMsD,SAChB9C,KAAM,QACN8G,KAAMtH,EAAMkD,cATPlD,EAAM+C,UAgBvC,IAAK,KACD,OAAgC,IAA5B3C,EAAcH,GAAGuC,OAEb,sBAAK6B,UAAU,8BAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,oBAAIA,UAAU,wBAAd,iCAIJ,cAAC,EAAD,UACK3D,EAAaT,GAAG8I,KAAI,SAACsJ,GAClB,OACI,cAAC,EAAD,CAEItP,GAAIsP,EAAKtP,GACTjC,MAAOuR,EAAK9O,KACZ8K,IAAKgE,EAAKpP,YACV0O,KAAM,MAJDU,EAAKtP,YAa9B,sBAAKsB,UAAU,2BAAf,UACI,qBAAIA,UAAU,sBAAd,kCAEKjE,EAAcD,MAAMF,GAAGsQ,cAF5B,OAICnQ,EAAcH,GAAG8I,KAAI,SAACuJ,GACnB,OACI,cAAC,EAAD,CAEIvP,GAAIuP,EAAOvP,GACXoE,MAAOxD,EAAoB2O,EAAOvP,IAClCsE,OAAM,qBAAgBiL,EAAOvP,IAC7BsL,IAAKiE,EAAOrP,YACZnC,MAAOwR,EAAO/O,KACd+N,QAASgB,EAAOC,eAChBjP,SAAUgP,EAAOhP,SACjB9C,KAAM,KACN8G,KAAMgL,EAAOpP,cATRoP,EAAOvP,UAgBxC,IAAK,SACD,OAAoC,IAAhC3C,EAAcF,OAAOsC,OAEjB,sBAAK6B,UAAU,8BAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,oBAAIA,UAAU,wBAAd,+BAIJ,cAAC,EAAD,UACK3D,EAAaD,OAAOsI,KAAI,SAACyJ,GACtB,OACI,cAAC,EAAD,CAEIzP,GAAIyP,EAAKzP,GACTjC,MAAO0R,EAAKjP,KACZ8K,IAAKmE,EAAKtG,aACVyF,KAAM,UAJDa,EAAKzP,YAa9B,sBAAKsB,UAAU,kCAAf,UACI,qBAAIA,UAAU,sBAAd,kCAEKjE,EAAcD,MAAMM,OAAO8P,cAFhC,OAIA,qBAAKlM,UAAU,wBAAf,SACKjE,EAAcF,OAAO6I,KAAI,SAACnG,EAAM+E,GAC7B,OACI,cAAC,EAAD,CAEIA,MAAOA,EACPlH,OAAQmC,GAFHA,EAAKG,YAclD,OAAQrC,EAAaF,MACjB,IAAK,QACD,OAAmC,IAA/BJ,EAAcJ,MAAMwC,OAEhB,sBAAK6B,UAAU,2BAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,oBAAIA,UAAU,wBAAd,+BAIJ,qBACIA,UAAU,0BACVD,IAAKyN,EAFT,SAIKnR,EAAaV,MAAM+I,KAAI,SAACqJ,GACrB,OACI,cAAC,EAAD,CAEIrP,GAAIqP,EAAKrP,GACTjC,MAAOsR,EAAKtR,MACZuN,IAAK+D,EAAKnP,YACV0O,KAAM,SAJDS,EAAKrP,YAa9B,sBAAKsB,UAAU,2BAAf,UACI,qBAAIA,UAAU,sBAAd,kCAEKjE,EAAcD,MAAMH,MAAMuQ,cAF/B,OAICnQ,EAAcJ,MAAM+I,KAAI,SAAC/I,GACtB,OACI,cAAC,EAAD,CAEI+C,GAAI/C,EAAM+C,GACVoE,MAAOzD,EAAmB1D,EAAM+C,IAChCsE,OAAM,wBAAmBrH,EAAM+C,IAC/BsL,IAAKrO,EAAMiD,YACXnC,MAAOd,EAAMc,MACbwQ,QAAStR,EAAM0L,aACfpI,SAAUtD,EAAMsD,SAChB9C,KAAM,QACN8G,KAAMtH,EAAMkD,cATPlD,EAAM+C,UAgBvC,IAAK,KACD,OAAgC,IAA5B3C,EAAcH,GAAGuC,OAEb,sBAAK6B,UAAU,2BAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,oBAAIA,UAAU,wBAAd,iCAIJ,qBACIA,UAAU,0BACVD,IAAK0N,EAFT,SAIKpR,EAAaT,GAAG8I,KAAI,SAACsJ,GAClB,OACI,cAAC,EAAD,CAEItP,GAAIsP,EAAKtP,GACTjC,MAAOuR,EAAK9O,KACZ8K,IAAKgE,EAAKpP,YACV0O,KAAM,MAJDU,EAAKtP,YAa9B,sBAAKsB,UAAU,2BAAf,UACI,qBAAIA,UAAU,sBAAd,kCAEKjE,EAAcD,MAAMF,GAAGsQ,cAF5B,OAICnQ,EAAcH,GAAG8I,KAAI,SAACuJ,GACnB,OACI,cAAC,EAAD,CAEIvP,GAAIuP,EAAOvP,GACXoE,MAAOxD,EAAoB2O,EAAOvP,IAClCsE,OAAM,qBAAgBiL,EAAOvP,IAC7BsL,IAAKiE,EAAOrP,YACZnC,MAAOwR,EAAO/O,KACd+N,QAASgB,EAAOC,eAChBjP,SAAUgP,EAAOhP,SACjB9C,KAAM,KACN8G,KAAMgL,EAAOpP,cATRoP,EAAOvP,UAgBxC,IAAK,SACD,OAAoC,IAAhC3C,EAAcF,OAAOsC,OAEjB,sBAAK6B,UAAU,2BAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,oBAAIA,UAAU,wBAAd,+BAIJ,qBACIA,UAAU,0BACVD,IAAK2N,EAFT,SAIKrR,EAAaD,OAAOsI,KAAI,SAACyJ,GACtB,OACI,cAAC,EAAD,CAEIzP,GAAIyP,EAAKzP,GACTjC,MAAO0R,EAAKjP,KACZ8K,IAAKmE,EAAKtG,aACVyF,KAAM,UAJDa,EAAKzP,YAa9B,sBAAKsB,UAAU,kCAAf,UACI,qBAAIA,UAAU,sBAAd,kCAEKjE,EAAcD,MAAMM,OAAO8P,cAFhC,OAIA,qBAAKlM,UAAU,wBAAf,SACKjE,EAAcF,OAAO6I,KAAI,SAACnG,EAAM+E,GAC7B,OACI,cAAC,EAAD,CAEIA,MAAOA,EACPlH,OAAQmC,GAFHA,EAAKG,cCrUnC0P,EA1BA,WACX,MAAqChO,IAA7B/C,EAAR,EAAQA,YAAayC,EAArB,EAAqBA,YACfuO,EAAYpN,mBAElB,EAA2BxG,IAApBC,EAAP,oBAEA,OACI,sBACIqF,IAAKsO,EACLrO,UAAWtF,EAAiBI,MAAQ,IAAM,gBAAkB,GAC5D4D,GAAG,mBACHuH,SAAU,WACFoI,EAAUnO,QAAQC,WAAa,EAC/B9C,GAAY,GAEZA,GAAY,IARxB,UAYI,cAAC,EAAD,IACA,cAAC,EAAD,IACC3C,EAAiBI,MAAQ,IAAMgF,EAAYuO,GAAa,SCAtDC,EAxBY,WACvB,IAAQ5R,EAAmB0D,IAAnB1D,eACR,OACI,qBACIgC,GAAG,kBACHsB,UACItD,EAAeH,QACT,QACAG,EAAeF,UACf,UACA,GAPd,SAUKE,EAAeH,QACZ,sDAAyBG,EAAeD,SACxCC,EAAeF,UACf,0DAA6BE,EAAeD,SAE5C,yBCVD,SAAS8R,IACpB,OACI,cAAC,IAAD,UACI,sBAAK7P,GAAG,gBAAR,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8P,KAAK,UAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,cCtBxBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,UACI,cAACJ,EAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.71c1bead.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key, initialState) => {\r\n    const [state, setState] = useState(() => {\r\n        const retrieve = localStorage.getItem(key);\r\n        return retrieve ? JSON.parse(retrieve) : initialState;\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (state) {\r\n            localStorage.setItem(key, JSON.stringify(state));\r\n        }\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState({});\r\n\r\n    const getWindowDimensions = () => {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return { width, height };\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowDimensions(getWindowDimensions());\r\n        };\r\n        handleResize();\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, []);\r\n    return [windowDimensions];\r\n};\r\n\r\nexport default useWindowDimensions;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport useWindowDimensions from \"./hooks/useWindowDimensions\";\r\nimport { BiUpArrow } from \"react-icons/bi\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [searchResults, setSearchResults] = useState({\r\n        category: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n        people: [],\r\n        query: {},\r\n    });\r\n    const [watchList, setWatchList] = useLocalStorage(\"Watchlist\", {\r\n        category: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n    });\r\n    const [trendingData, setTrendingData] = useState({\r\n        type: \"movie\",\r\n        movie: [],\r\n        tv: [],\r\n        person: [],\r\n    });\r\n    const [watchListAlert, setWatchListAlert] = useState({\r\n        isAdded: false,\r\n        isRemoved: false,\r\n        title: \"\",\r\n    });\r\n    const [expandBiography, setExpandBiography] = useState(false);\r\n    const [modalContent, setModalContent] = useState(null);\r\n    const [movieCount, setMovieCount] = useState(0);\r\n    const [tvCount, setTvCount] = useState(0);\r\n    const [isScroll, setIsScroll] = useState(false);\r\n    const [windowDimensions] = useWindowDimensions();\r\n\r\n    const searchMovies = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        setSearchResults({\r\n            ...searchResults,\r\n            category: \"movie\",\r\n            movie: data.results,\r\n            query: { ...searchResults.query, movie: query },\r\n        });\r\n    };\r\n\r\n    const searchTVShows = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/tv?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        setSearchResults({\r\n            ...searchResults,\r\n            category: \"tv\",\r\n            tv: data.results,\r\n            query: { ...searchResults.query, tv: query },\r\n        });\r\n    };\r\n\r\n    const searchPeople = async (query) => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/person?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB&query=${query}&page=1&include_adult=false`\r\n        );\r\n        const data = await response.json();\r\n        setSearchResults({\r\n            ...searchResults,\r\n            category: \"people\",\r\n            people: data.results,\r\n            query: { ...searchResults.query, person: query },\r\n        });\r\n    };\r\n\r\n    const search = async (category, query) => {\r\n        switch (category) {\r\n            case \"movie\":\r\n                searchMovies(query);\r\n                break;\r\n            case \"tv\":\r\n                searchTVShows(query);\r\n                break;\r\n            case \"people\":\r\n                searchPeople(query);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const convertDate = (info) => {\r\n        const date = new Date(info);\r\n        const string = date.toLocaleString(\"default\", {\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n        });\r\n        return string;\r\n    };\r\n\r\n    const addToWatchList = (category, item) => {\r\n        if ([...watchList.movie, ...watchList.tv].find((w) => w.id === item.id))\r\n            return;\r\n        if (category === \"movie\") {\r\n            const obj = {\r\n                id: item.id,\r\n                title: item.title,\r\n                poster_path: item.poster_path,\r\n                vote_average: item.vote_average,\r\n                date_added: Date.now(),\r\n                overview: item.overview,\r\n            };\r\n            setWatchList({\r\n                ...watchList,\r\n                movie: [...watchList.movie, obj],\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: true,\r\n                isRemoved: false,\r\n                title: item.title,\r\n            });\r\n        } else if (category === \"tv\") {\r\n            const obj = {\r\n                id: item.id,\r\n                name: item.name,\r\n                poster_path: item.poster_path,\r\n                vote_average: item.vote_average,\r\n                date_added: Date.now(),\r\n                overview: item.overview,\r\n            };\r\n            setWatchList({\r\n                ...watchList,\r\n                tv: [...watchList.tv, obj],\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: true,\r\n                isRemoved: false,\r\n                title: item.name,\r\n            });\r\n        }\r\n    };\r\n\r\n    const removeFromWatchList = (category, id) => {\r\n        if (category === \"movie\") {\r\n            setWatchList({\r\n                ...watchList,\r\n                movie: watchList.movie.filter((item) => item.id !== id),\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: false,\r\n                isRemoved: true,\r\n                title: watchList.movie.find((item) => item.id === id).title,\r\n            });\r\n        } else if (category === \"tv\") {\r\n            setWatchList({\r\n                ...watchList,\r\n                tv: watchList.tv.filter((item) => item.id !== id),\r\n            });\r\n            setWatchListAlert({\r\n                isAdded: false,\r\n                isRemoved: true,\r\n                title: watchList.tv.find((item) => item.id === id).name,\r\n            });\r\n        }\r\n    };\r\n\r\n    const isMovieInWatchlist = (id) => {\r\n        return watchList.movie.find((item) => item.id === id);\r\n    };\r\n    const isTvShowInWatchlist = (id) => {\r\n        return watchList.tv.find((item) => item.id === id);\r\n    };\r\n\r\n    const toggleWatchlistCategory = () => {\r\n        setWatchList({\r\n            ...watchList,\r\n            category: watchList.category === \"movie\" ? \"tv\" : \"movie\",\r\n        });\r\n    };\r\n\r\n    const returnToTop = (ref) => {\r\n        if (isScroll) {\r\n            return (\r\n                <button\r\n                    className=\"return-to-top\"\r\n                    onTouchStart={() => {\r\n                        ref.current.scrollTop = 0;\r\n                    }}\r\n                >\r\n                    <BiUpArrow className=\"up-icon\" />\r\n                </button>\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setWatchListAlert({ isAdded: false, isRemoved: false, title: \"\" });\r\n        }, 3000);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n    }, [watchListAlert]);\r\n\r\n    useEffect(() => {\r\n        setMovieCount(watchList.movie.length);\r\n        setTvCount(watchList.tv.length);\r\n    }, [watchList]);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                trendingData,\r\n                setTrendingData,\r\n                setSearchResults,\r\n                search,\r\n                searchResults,\r\n                watchList,\r\n                setWatchList,\r\n                addToWatchList,\r\n                removeFromWatchList,\r\n                isMovieInWatchlist,\r\n                isTvShowInWatchlist,\r\n                convertDate,\r\n                watchListAlert,\r\n                movieCount,\r\n                tvCount,\r\n                expandBiography,\r\n                setExpandBiography,\r\n                modalContent,\r\n                setModalContent,\r\n                toggleWatchlistCategory,\r\n                isScroll,\r\n                setIsScroll,\r\n                returnToTop,\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Navbar = () => {\r\n    const {\r\n        setSearchResults,\r\n        setExpandBiography,\r\n        setModalContent,\r\n        isScroll,\r\n        setIsScroll,\r\n    } = useGlobalContext();\r\n\r\n    const [isHover, setIsHover] = useState(false);\r\n    const toggleHover = () => setIsHover(!isHover);\r\n\r\n    return (\r\n        <nav\r\n            className={isScroll ? \"navbar hidden-navbar\" : \"navbar\"}\r\n            onMouseEnter={toggleHover}\r\n            onMouseLeave={toggleHover}\r\n        >\r\n            <ul id=\"navbar-list\">\r\n                <li>\r\n                    <Link\r\n                        // className=\"nav-link\"\r\n                        className={\r\n                            isScroll ? \"nav-link hidden-link\" : \"nav-link\"\r\n                        }\r\n                        id={isHover ? \"visible-link\" : \"\"}\r\n                        to=\"/\"\r\n                        onClick={() => {\r\n                            setSearchResults({\r\n                                category: \"movie\",\r\n                                movie: [],\r\n                                tv: [],\r\n                                people: [],\r\n                            });\r\n                            setExpandBiography(false);\r\n                            setModalContent(\"\");\r\n                            setIsScroll(false);\r\n                        }}\r\n                    >\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        // className=\"nav-link\"\r\n                        className={\r\n                            isScroll ? \"nav-link hidden-link\" : \"nav-link\"\r\n                        }\r\n                        id={isHover ? \"visible-link\" : \"\"}\r\n                        to=\"/watchlist\"\r\n                        onClick={() => {\r\n                            setExpandBiography(false);\r\n                            setModalContent(\"\");\r\n                            setIsScroll(false);\r\n                        }}\r\n                    >\r\n                        Watchlist\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        // className=\"nav-link search-icon-link\"\r\n                        className={\r\n                            isScroll\r\n                                ? \"nav-link search-icon-link hidden-link\"\r\n                                : \"nav-link search-icon-link\"\r\n                        }\r\n                        id={isHover ? \"visible-link\" : \"\"}\r\n                        to=\"/search\"\r\n                        onClick={() => {\r\n                            setExpandBiography(false);\r\n                            setModalContent(\"\");\r\n                            setIsScroll(false);\r\n                        }}\r\n                    >\r\n                        <GoSearch className=\"link-icon\" />\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nconst useHorizontalScroll = (preventParentScrolling = true) => {\r\n    const elRef = useRef();\r\n    useEffect(() => {\r\n        const el = elRef.current;\r\n        if (el) {\r\n            const onWheel = (e) => {\r\n                if (e.deltaY === 0) return;\r\n                if (preventParentScrolling === true) {\r\n                    e.preventDefault();\r\n                } else if (\r\n                    !(el.scrollLeft === 0 && e.deltaY < 0) &&\r\n                    !(\r\n                        el.scrollWidth -\r\n                            el.clientWidth -\r\n                            Math.round(el.scrollLeft) ===\r\n                            0 && e.deltaY > 0\r\n                    )\r\n                ) {\r\n                    e.preventDefault();\r\n                }\r\n                el.scrollTo({\r\n                    left: el.scrollLeft + e.deltaY,\r\n                });\r\n            };\r\n            el.addEventListener(\"wheel\", onWheel);\r\n            return () => el.removeEventListener(\"wheel\", onWheel);\r\n        }\r\n    }, []);\r\n    return elRef;\r\n};\r\n\r\nexport default useHorizontalScroll;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                setData(await response.json());\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [url]);\r\n    return [data, loading, error];\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nconst ToggleButton = ({ handleClick, active }) => {\r\n    return (\r\n        <div className=\"toggle-button-group\">\r\n            <button\r\n                className={`toggle-btn movie-toggle ${\r\n                    active === \"movie\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={handleClick}\r\n                disabled={active === \"movie\"}\r\n            >\r\n                Movie\r\n            </button>\r\n            <button\r\n                className={`toggle-btn tv-toggle ${\r\n                    active === \"tv\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={handleClick}\r\n                disabled={active === \"tv\"}\r\n            >\r\n                TV\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\nimport { useGlobalContext } from \"../../../context\";\r\n\r\nconst RenderedCard = ({\r\n    found,\r\n    imgSrc,\r\n    linkTo,\r\n    title,\r\n    vote,\r\n    removeCat,\r\n    removeID,\r\n    addCat,\r\n    addID,\r\n    index,\r\n    position = \"\",\r\n}) => {\r\n    const { addToWatchList, removeFromWatchList } = useGlobalContext();\r\n\r\n    return (\r\n        <div\r\n            // className=\"render-card\"\r\n            className={`render-card ${position}`}\r\n        >\r\n            <img\r\n                src={`https://image.tmdb.org/t/p/w500/${imgSrc}`}\r\n                alt=\"\"\r\n                className=\"render-img\"\r\n            />\r\n            <Link to={linkTo} className=\"render-card-link\">\r\n                <h3>{title}</h3>\r\n            </Link>\r\n            <p className=\"render-vote\">\r\n                <AiFillStar className=\"render-icon\" />\r\n                {vote}\r\n            </p>\r\n            <button\r\n                className=\"remove-from-wishlist\"\r\n                onClick={() => {\r\n                    found\r\n                        ? removeFromWatchList(removeCat, removeID)\r\n                        : addToWatchList(addCat, addID);\r\n                }}\r\n            >\r\n                {found ? (\r\n                    <IoMdRemoveCircleOutline\r\n                        className=\"remove-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                ) : (\r\n                    <IoMdAddCircleOutline\r\n                        className=\"add-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RenderedCard;\r\n","import React, { useState } from \"react\";\r\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\r\n\r\nconst Carousel = ({ children }) => {\r\n    const [activeCardIndex, setActiveCardIndex] = useState(0);\r\n    const [touchStart, setTouchStart] = useState(0);\r\n    const [touchEnd, setTouchEnd] = useState(0);\r\n\r\n    const handlePreviousClick = () => {\r\n        const newIndex = activeCardIndex - 1;\r\n        setActiveCardIndex(newIndex < 0 ? children.length - 1 : newIndex);\r\n    };\r\n    const handleNextClick = () => {\r\n        const newIndex = activeCardIndex + 1;\r\n        setActiveCardIndex(newIndex > children.length - 1 ? 0 : newIndex);\r\n    };\r\n    const getPositionClassName = (index) => {\r\n        return index < activeCardIndex\r\n            ? \"previous-card\"\r\n            : index > activeCardIndex\r\n            ? \"next-card\"\r\n            : \"active-card\";\r\n    };\r\n    const handleTouchStart = (e) => {\r\n        setTouchStart(e.targetTouches[0].clientX);\r\n    };\r\n    const handleTouchMove = (e) => {\r\n        setTouchEnd(e.targetTouches[0].clientX);\r\n    };\r\n    const handleTouchEnd = () => {\r\n        if (touchEnd === 0) return;\r\n        if (touchStart - touchEnd > 150) {\r\n            handleNextClick();\r\n        }\r\n        if (touchStart - touchEnd < -150) {\r\n            handlePreviousClick();\r\n        }\r\n        setTouchStart(0);\r\n        setTouchEnd(0);\r\n    };\r\n    return (\r\n        <section\r\n            className=\"carousel-container\"\r\n            onTouchStart={handleTouchStart}\r\n            onTouchMove={handleTouchMove}\r\n            onTouchEnd={handleTouchEnd}\r\n        >\r\n            {children.length > 1 && (\r\n                <button className=\"previous-btn\" onClick={handlePreviousClick}>\r\n                    <BiLeftArrow\r\n                        className=\"previous-next-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                </button>\r\n            )}\r\n            {children.length > 1 && (\r\n                <button className=\"next-btn\" onClick={handleNextClick}>\r\n                    <BiRightArrow\r\n                        className=\"previous-next-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                </button>\r\n            )}\r\n            {children.map((child, index) => {\r\n                return (\r\n                    <div\r\n                        className={`carousel-card ${getPositionClassName(\r\n                            index\r\n                        )}`}\r\n                    >\r\n                        {child}\r\n                    </div>\r\n                );\r\n            })}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Carousel;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\r\nimport useHorizontalScroll from \"../../hooks/useHorizontalScroll\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport ToggleButton from \"../ToggleButton/toggleButton\";\r\nimport RenderedCard from \"./RenderedCard/renderedCard\";\r\nimport Carousel from \"../Carousel/Carousel\";\r\n\r\nconst Homepage = () => {\r\n    const {\r\n        watchList,\r\n        isMovieInWatchlist,\r\n        isTvShowInWatchlist,\r\n        toggleWatchlistCategory,\r\n        setIsScroll,\r\n    } = useGlobalContext();\r\n\r\n    const [popularMovieData, popularMovieLoading, popularMovieError] = useFetch(\r\n        `https://api.themoviedb.org/3/movie/popular?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n    );\r\n    const [popularTVData, popularTVLoading, popularTVError] = useFetch(\r\n        `https://api.themoviedb.org/3/tv/popular?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n    );\r\n    const [topRatedMovieData, topRatedMovieLoading, topRatedMovieError] =\r\n        useFetch(\r\n            `https://api.themoviedb.org/3/movie/top_rated?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n    const [topRatedTVData, topRatedTVLoading, topRatedTVError] = useFetch(\r\n        `https://api.themoviedb.org/3/tv/top_rated?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n    );\r\n\r\n    const [popularCategory, setPopularCategory] = useState(\"movie\");\r\n    const [topRatedCategory, setTopRatedCategory] = useState(\"movie\");\r\n\r\n    const homeScroll = useRef();\r\n\r\n    const popScrollRef = useHorizontalScroll(false);\r\n    const topScrollRef = useHorizontalScroll(false);\r\n    const watchScrollRef = useHorizontalScroll(false);\r\n\r\n    const [windowDimensions] = useWindowDimensions();\r\n\r\n    const togglePopularCategory = () => {\r\n        setPopularCategory(popularCategory === \"movie\" ? \"tv\" : \"movie\");\r\n    };\r\n\r\n    const toggleTopRatedCategory = () => {\r\n        setTopRatedCategory(topRatedCategory === \"movie\" ? \"tv\" : \"movie\");\r\n    };\r\n\r\n    const getMappedCards = (array, category) => {\r\n        switch (category) {\r\n            case \"movie\":\r\n                return array.map((item) => {\r\n                    return (\r\n                        <RenderedCard\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            found={isMovieInWatchlist(item.id)}\r\n                            imgSrc={item.poster_path}\r\n                            linkTo={`/result/movie/${item.id}`}\r\n                            title={item.title}\r\n                            vote={item.vote_average}\r\n                            removeCat={\"movie\"}\r\n                            removeID={item.id}\r\n                            addCat={\"movie\"}\r\n                            addID={item}\r\n                        />\r\n                    );\r\n                });\r\n            case \"tv\":\r\n                return array.map((item) => {\r\n                    return (\r\n                        <RenderedCard\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            found={isTvShowInWatchlist(item.id)}\r\n                            imgSrc={item.poster_path}\r\n                            linkTo={`/result/tv/${item.id}`}\r\n                            title={item.name}\r\n                            vote={item.vote_average}\r\n                            removeCat={\"tv\"}\r\n                            removeID={item.id}\r\n                            addCat={\"tv\"}\r\n                            addID={item}\r\n                        />\r\n                    );\r\n                });\r\n            default:\r\n                throw new Error(\"category not found\");\r\n        }\r\n    };\r\n\r\n    if (windowDimensions.width <= 450) {\r\n        return (\r\n            <div id=\"homepage\">\r\n                <section id=\"popular\" className=\"section\">\r\n                    <div className=\"section-title-container\">\r\n                        <h2 className=\"section-title\">What's Popular</h2>\r\n                    </div>\r\n                    <ToggleButton\r\n                        handleClick={togglePopularCategory}\r\n                        active={popularCategory}\r\n                    />\r\n                    {popularMovieLoading || popularTVLoading ? (\r\n                        <div className=\"card-loading\">\r\n                            <h2>Loading...</h2>\r\n                        </div>\r\n                    ) : (\r\n                        <Carousel>\r\n                            {getMappedCards(\r\n                                popularCategory === \"movie\"\r\n                                    ? popularMovieData.results\r\n                                    : popularTVData.results,\r\n                                popularCategory\r\n                            )}\r\n                        </Carousel>\r\n                    )}\r\n                </section>\r\n                <section id=\"rated\" className=\"section\">\r\n                    <div className=\"section-title-container\">\r\n                        <h2 className=\"section-title\">Top Rated</h2>\r\n                    </div>\r\n                    <ToggleButton\r\n                        handleClick={toggleTopRatedCategory}\r\n                        active={topRatedCategory}\r\n                    />\r\n                    {topRatedMovieLoading || topRatedTVLoading ? (\r\n                        <div className=\"card-loading\">\r\n                            <h2>Loading...</h2>\r\n                        </div>\r\n                    ) : (\r\n                        <Carousel>\r\n                            {getMappedCards(\r\n                                topRatedCategory === \"movie\"\r\n                                    ? topRatedMovieData.results\r\n                                    : topRatedTVData.results,\r\n                                topRatedCategory\r\n                            )}\r\n                        </Carousel>\r\n                    )}\r\n                </section>\r\n                <section id=\"watchlist\" className=\"section\">\r\n                    <div className=\"section-title-container\">\r\n                        <h2 className=\"section-title\">Watchlist</h2>\r\n                    </div>\r\n                    <ToggleButton\r\n                        handleClick={toggleWatchlistCategory}\r\n                        active={watchList.category}\r\n                    />\r\n                    {(watchList.category === \"movie\" &&\r\n                        !watchList.movie.length) ||\r\n                    (watchList.category === \"tv\" && !watchList.tv.length) ? (\r\n                        <div id=\"watchlist-empty\">\r\n                            <h2>Your Watchlist is Empty...</h2>\r\n                        </div>\r\n                    ) : (\r\n                        <Carousel>\r\n                            {getMappedCards(\r\n                                watchList.category === \"movie\"\r\n                                    ? watchList.movie\r\n                                    : watchList.tv,\r\n                                watchList.category\r\n                            )}\r\n                        </Carousel>\r\n                    )}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={homeScroll}\r\n            id=\"homepage\"\r\n            onScroll={() => {\r\n                if (windowDimensions.width > 926) {\r\n                    if (homeScroll.current.scrollTop <= 0) {\r\n                        setIsScroll(false);\r\n                    } else {\r\n                        setIsScroll(true);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            <section id=\"popular\" className=\"section\">\r\n                <div className=\"section-title-container\">\r\n                    <h2 className=\"section-title\">What's Popular</h2>\r\n                </div>\r\n                <ToggleButton\r\n                    handleClick={togglePopularCategory}\r\n                    active={popularCategory}\r\n                />\r\n                <div\r\n                    id=\"popular-container\"\r\n                    className=\"homepage-render-container\"\r\n                    ref={popScrollRef}\r\n                >\r\n                    {popularMovieLoading || popularTVLoading ? (\r\n                        <h2>Loading</h2>\r\n                    ) : (\r\n                        getMappedCards(\r\n                            popularCategory === \"movie\"\r\n                                ? popularMovieData.results\r\n                                : popularTVData.results,\r\n                            popularCategory\r\n                        )\r\n                    )}\r\n                </div>\r\n            </section>\r\n            <section id=\"rated\" className=\"section\">\r\n                <div className=\"section-title-container\">\r\n                    <h2 className=\"section-title\">Top Rated</h2>\r\n                </div>\r\n                <ToggleButton\r\n                    handleClick={toggleTopRatedCategory}\r\n                    active={topRatedCategory}\r\n                />\r\n                <div\r\n                    id=\"top-rated-container\"\r\n                    className=\"homepage-render-container\"\r\n                    ref={topScrollRef}\r\n                >\r\n                    {topRatedMovieLoading || topRatedTVLoading ? (\r\n                        <h2>Loading</h2>\r\n                    ) : (\r\n                        getMappedCards(\r\n                            topRatedCategory === \"movie\"\r\n                                ? topRatedMovieData.results\r\n                                : topRatedTVData.results,\r\n                            topRatedCategory\r\n                        )\r\n                    )}\r\n                </div>\r\n            </section>\r\n            <section id=\"watchlist\" className=\"section\">\r\n                <div className=\"section-title-container\">\r\n                    <h2 className=\"section-title\">Watchlist</h2>\r\n                </div>\r\n                <ToggleButton\r\n                    handleClick={toggleWatchlistCategory}\r\n                    active={watchList.category}\r\n                />\r\n                <div\r\n                    id=\"watchlist-container\"\r\n                    className=\"homepage-render-container\"\r\n                    ref={watchScrollRef}\r\n                >\r\n                    {(watchList.category === \"movie\" &&\r\n                        !watchList.movie.length) ||\r\n                    (watchList.category === \"tv\" && !watchList.tv.length) ? (\r\n                        <div id=\"watchlist-empty\">\r\n                            <h2>Your Watchlist is Empty...</h2>\r\n                        </div>\r\n                    ) : (\r\n                        getMappedCards(\r\n                            watchList.category === \"movie\"\r\n                                ? watchList.movie\r\n                                : watchList.tv,\r\n                            watchList.category\r\n                        )\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\n\r\nconst FullScreenReview = ({ author, written, review }) => {\r\n    return (\r\n        <div className=\"fullscreen-review\">\r\n            <h4>A review by {author}</h4>\r\n            <h5>\r\n                <i>\r\n                    Written by {author} on {written}\r\n                </i>\r\n            </h5>\r\n            <p className=\"review-content\">{review}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FullScreenReview;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport {\r\n    AiFillStar,\r\n    AiOutlineFileImage,\r\n    AiOutlineClose,\r\n    AiOutlineExpandAlt,\r\n} from \"react-icons/ai\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport FullScreenReview from \"./fullscreenreview/fullscreenreview\";\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\r\n\r\nconst MovieFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [movieData, setMovieData] = useState({});\r\n    const [movieReviewData, setMovieReviewData] = useState({});\r\n    const [movieCreditData, setMovieCreditData] = useState({});\r\n    const [toggle, setToggle] = useState({ category: \"cast\" });\r\n    const [mobileToggle, setMobileToggle] = useState({ category: \"overview\" });\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isMovieInWatchlist,\r\n        convertDate,\r\n        expandBiography,\r\n        setExpandBiography,\r\n        modalContent,\r\n        setModalContent,\r\n    } = useGlobalContext();\r\n\r\n    const [windowDimensions] = useWindowDimensions();\r\n    const found = isMovieInWatchlist(movieData.id);\r\n\r\n    const getMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieData(data);\r\n    };\r\n\r\n    const getMovieReview = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieReviewData(data);\r\n    };\r\n\r\n    const getMovieCredit = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setMovieCreditData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMovieData();\r\n        getMovieReview();\r\n        getMovieCredit();\r\n    }, []);\r\n\r\n    const movieContentToggle = () => {\r\n        switch (mobileToggle.category) {\r\n            case \"overview\":\r\n                return (\r\n                    <div className=\"mobile-fullscreen-overview\">\r\n                        <div className=\"mobile-fullscreen-list-info\">\r\n                            <p className=\"mobile-fullscreen-release-date\">\r\n                                {convertDate(movieData.release_date)}\r\n                            </p>\r\n                            <div className=\"ball\"></div>\r\n                            <div className=\"mobile-fullscreen-genre\">\r\n                                {movieData.genres !== undefined ? (\r\n                                    movieData.genres.map((type) => {\r\n                                        return <p key={type.id}>{type.name}</p>;\r\n                                    })\r\n                                ) : (\r\n                                    <p></p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"ball\"></div>\r\n                            <p>{movieData.runtime} mins</p>\r\n                        </div>\r\n                        <div className=\"mobile-fullscreen-rating\">\r\n                            <h4 className=\"mobile-average-score-title\">\r\n                                Average Score:\r\n                            </h4>\r\n                            <p className=\"mobile-fullscreen-vote\">\r\n                                <AiFillStar className=\"render-icon\" />\r\n                                {movieData.vote_average}\r\n                            </p>\r\n                            <button\r\n                                className=\"add-remove-button\"\r\n                                onClick={() => {\r\n                                    found\r\n                                        ? removeFromWatchList(\r\n                                              \"movie\",\r\n                                              movieData.id\r\n                                          )\r\n                                        : addToWatchList(\"movie\", movieData);\r\n                                }}\r\n                            >\r\n                                {found ? (\r\n                                    <IoMdRemoveCircleOutline\r\n                                        className=\"remove-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                ) : (\r\n                                    <IoMdAddCircleOutline\r\n                                        className=\"add-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"mobile-fullscreen-production\">\r\n                            {movieData.production_companies !== undefined ? (\r\n                                movieData.production_companies.map(\r\n                                    (company) => {\r\n                                        return (\r\n                                            <p\r\n                                                key={company.id}\r\n                                                className=\"mobile-company-name\"\r\n                                            >\r\n                                                {company.name}\r\n                                            </p>\r\n                                        );\r\n                                    }\r\n                                )\r\n                            ) : (\r\n                                <p></p>\r\n                            )}\r\n                        </div>\r\n                        <h4 className=\"mobile-fullscreen-tagline\">\r\n                            <i>{movieData.tagline}</i>\r\n                        </h4>\r\n                        <div className=\"mobile-fullscreen-overview-text\">\r\n                            <h3>Overview</h3>\r\n                            <p className=\"mobile-fullscreen-overview-content\">\r\n                                {movieData.overview}\r\n                            </p>\r\n                            <button\r\n                                className=\"mobile-expand-btn\"\r\n                                onClick={() => {\r\n                                    setExpandBiography(!expandBiography);\r\n                                    setModalContent(movieData.overview);\r\n                                }}\r\n                            >\r\n                                <AiOutlineExpandAlt\r\n                                    className=\"expand-icon\"\r\n                                    aria-hidden={true}\r\n                                    focusable={false}\r\n                                />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case \"cast\":\r\n                return movieCreditData.cast !== undefined ? (\r\n                    <div className=\"mobile-fullscreen-cast\">\r\n                        {movieCreditData.cast.map((cast) => {\r\n                            return (\r\n                                <div\r\n                                    key={cast.id}\r\n                                    className=\"mobile-cast-credit\"\r\n                                >\r\n                                    {cast.profile_path === null ? (\r\n                                        <div className=\"mobile-cast-btn-icon-container\">\r\n                                            <AiOutlineFileImage\r\n                                                className=\"mobile-cast-btn-icon\"\r\n                                                aria-hidden={true}\r\n                                                focusable={false}\r\n                                            />\r\n                                        </div>\r\n                                    ) : (\r\n                                        <img\r\n                                            className=\"mobile-cast-img\"\r\n                                            src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    )}\r\n                                    <Link\r\n                                        to={`/result/people/${cast.id}`}\r\n                                        className=\"mobile-cast-name\"\r\n                                    >\r\n                                        {cast.character}\r\n                                    </Link>\r\n                                    <p className=\"mobile-cast-role\">\r\n                                        {cast.name}\r\n                                    </p>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                );\r\n            case \"review\":\r\n                return movieReviewData.results !== undefined ? (\r\n                    <div className=\"mobile-fullscreen-reviews\">\r\n                        {movieReviewData.results.map((result, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <FullScreenReview\r\n                                        author={result.author}\r\n                                        written={convertDate(result.created_at)}\r\n                                        review={result.content}\r\n                                    />\r\n                                    <button\r\n                                        className=\"review-modal-expand-btn\"\r\n                                        onClick={() => {\r\n                                            setExpandBiography(\r\n                                                !expandBiography\r\n                                            );\r\n                                            setModalContent(result.content);\r\n                                        }}\r\n                                    >\r\n                                        <AiOutlineExpandAlt\r\n                                            className=\"expand-icon\"\r\n                                            aria-hidden={true}\r\n                                            focusable={false}\r\n                                        />\r\n                                    </button>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    if (windowDimensions.width <= 950) {\r\n        return (\r\n            <div className=\"mobile-fullscreen\">\r\n                <div className=\"mobile-fullscreen-card\">\r\n                    <img\r\n                        className=\"mobile-fullscreen-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${movieData.poster_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                    <div className=\"mobile-fullscreen-section-container\">\r\n                        <h1 className=\"mobile-fullscreen-title\">\r\n                            {movieData.title}\r\n                        </h1>\r\n                        <nav className=\"mobile-fullscreen-header-container\">\r\n                            <ul className=\"mobile-fullscreen-header\">\r\n                                <li\r\n                                    className={`mobile-toggle-btn mobile-overview-btn ${\r\n                                        mobileToggle.category === \"overview\"\r\n                                            ? \"active\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                    onTouchStart={() =>\r\n                                        setMobileToggle({\r\n                                            category: \"overview\",\r\n                                        })\r\n                                    }\r\n                                    disabled={\r\n                                        mobileToggle.category === \"overview\"\r\n                                    }\r\n                                >\r\n                                    Overview\r\n                                </li>\r\n                                <li\r\n                                    className={`mobile-toggle-btn mobile-cast-btn ${\r\n                                        mobileToggle.category === \"cast\"\r\n                                            ? \"active\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                    onTouchStart={() =>\r\n                                        setMobileToggle({\r\n                                            category: \"cast\",\r\n                                        })\r\n                                    }\r\n                                    disabled={mobileToggle.category === \"cast\"}\r\n                                >\r\n                                    Cast\r\n                                </li>\r\n                                <li\r\n                                    className={`mobile-toggle-btn mobile-review-btn ${\r\n                                        mobileToggle.category === \"review\"\r\n                                            ? \"active\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                    onTouchStart={() =>\r\n                                        setMobileToggle({\r\n                                            category: \"review\",\r\n                                        })\r\n                                    }\r\n                                    disabled={\r\n                                        mobileToggle.category === \"review\"\r\n                                    }\r\n                                >\r\n                                    Review\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                        {movieContentToggle()}\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            expandBiography\r\n                                ? \"modal-biography-active\"\r\n                                : \"modal-biography-hidden\"\r\n                        }\r\n                    >\r\n                        <button\r\n                            className=\"model-exit-btn\"\r\n                            onClick={() => setExpandBiography(false)}\r\n                        >\r\n                            <AiOutlineClose\r\n                                className=\"model-btn-icon\"\r\n                                aria-hidden={true}\r\n                                focusable={false}\r\n                            />\r\n                        </button>\r\n                        <p className=\"modal-biography\">{modalContent}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <div className=\"fullscreen-card\">\r\n                <img\r\n                    className=\"fullscreen-img\"\r\n                    src={`https://image.tmdb.org/t/p/w500/${movieData.poster_path}`}\r\n                    alt=\"\"\r\n                />\r\n                <section className=\"fullscreen-section\">\r\n                    <section className=\"fullscreen-info\">\r\n                        <h1 className=\"fullscreen-title\">{movieData.title}</h1>\r\n                        <div className=\"fullscreen-list-info\">\r\n                            <p className=\"fullscreen-release-date\">\r\n                                {convertDate(movieData.release_date)}\r\n                            </p>\r\n                            <div className=\"ball\"></div>\r\n                            <div className=\"fullscreen-genre\">\r\n                                {movieData.genres !== undefined ? (\r\n                                    movieData.genres.map((type) => {\r\n                                        return <p key={type.id}>{type.name}</p>;\r\n                                    })\r\n                                ) : (\r\n                                    <p></p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"ball\"></div>\r\n                            <p>{movieData.runtime} mins</p>\r\n                        </div>\r\n                        <div className=\"fullscreen-rating\">\r\n                            <h4 className=\"average-score-title\">\r\n                                Average Score:\r\n                            </h4>\r\n                            <p className=\"fullscreen-vote\">\r\n                                <AiFillStar className=\"render-icon\" />\r\n                                {movieData.vote_average}\r\n                            </p>\r\n                            <button\r\n                                className=\"add-remove-button\"\r\n                                onClick={() => {\r\n                                    found\r\n                                        ? removeFromWatchList(\r\n                                              \"movie\",\r\n                                              movieData.id\r\n                                          )\r\n                                        : addToWatchList(\"movie\", movieData);\r\n                                }}\r\n                            >\r\n                                {found ? (\r\n                                    <IoMdRemoveCircleOutline\r\n                                        className=\"remove-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                ) : (\r\n                                    <IoMdAddCircleOutline\r\n                                        className=\"add-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"fullscreen-production\">\r\n                            {movieData.production_companies !== undefined ? (\r\n                                movieData.production_companies.map(\r\n                                    (company) => {\r\n                                        return (\r\n                                            <p\r\n                                                key={company.id}\r\n                                                className=\"company-name\"\r\n                                            >\r\n                                                {company.name}\r\n                                            </p>\r\n                                        );\r\n                                    }\r\n                                )\r\n                            ) : (\r\n                                <p></p>\r\n                            )}\r\n                        </div>\r\n                        <h4 className=\"fullscreen-tagline\">\r\n                            <i>{movieData.tagline}</i>\r\n                        </h4>\r\n                        <div className=\"fullscreen-overview\">\r\n                            <h3>Overview</h3>\r\n                            <p className=\"fullscreen-overview-content\">\r\n                                {movieData.overview}\r\n                            </p>\r\n                            <button\r\n                                className=\"expand-btn\"\r\n                                onClick={() => {\r\n                                    setExpandBiography(!expandBiography);\r\n                                    setModalContent(movieData.overview);\r\n                                }}\r\n                            >\r\n                                <AiOutlineExpandAlt\r\n                                    className=\"expand-icon\"\r\n                                    aria-hidden={true}\r\n                                    focusable={false}\r\n                                />\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"review-cast-btn-container\">\r\n                        <div className=\"review-cast-toggle-button\">\r\n                            <button\r\n                                id=\"cast-btn\"\r\n                                className={`fullscreen-toggle-btn cast-btn ${\r\n                                    toggle.category === \"cast\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() => setToggle({ category: \"cast\" })}\r\n                            >\r\n                                Cast\r\n                            </button>\r\n                            <button\r\n                                id=\"review-btn\"\r\n                                className={`fullscreen-toggle-btn review-btn ${\r\n                                    toggle.category === \"review\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() =>\r\n                                    setToggle({ category: \"review\" })\r\n                                }\r\n                            >\r\n                                Reviews\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    {toggle.category === \"review\" ? (\r\n                        movieReviewData.results !== undefined ? (\r\n                            <div className=\"fullscreen-reviews\">\r\n                                {movieReviewData.results.map(\r\n                                    (result, index) => {\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <FullScreenReview\r\n                                                    author={result.author}\r\n                                                    written={convertDate(\r\n                                                        result.created_at\r\n                                                    )}\r\n                                                    review={result.content}\r\n                                                />\r\n                                                <button\r\n                                                    className=\"review-modal-expand-btn\"\r\n                                                    onClick={() => {\r\n                                                        setExpandBiography(\r\n                                                            !expandBiography\r\n                                                        );\r\n                                                        setModalContent(\r\n                                                            result.content\r\n                                                        );\r\n                                                    }}\r\n                                                >\r\n                                                    <AiOutlineExpandAlt\r\n                                                        className=\"expand-icon\"\r\n                                                        aria-hidden={true}\r\n                                                        focusable={false}\r\n                                                    />\r\n                                                </button>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : toggle.category === \"cast\" ? (\r\n                        movieCreditData.cast !== undefined ? (\r\n                            <div className=\"fullscreen-cast\">\r\n                                {movieCreditData.cast.map((cast) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={cast.id}\r\n                                            className=\"cast-credit\"\r\n                                        >\r\n                                            {cast.profile_path === null ? (\r\n                                                <div className=\"cast-btn-icon-container\">\r\n                                                    <AiOutlineFileImage\r\n                                                        className=\"cast-btn-icon\"\r\n                                                        aria-hidden={true}\r\n                                                        focusable={false}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : (\r\n                                                <img\r\n                                                    className=\"cast-img\"\r\n                                                    src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            )}\r\n\r\n                                            <Link\r\n                                                to={`/result/people/${cast.id}`}\r\n                                                className=\"cast-name\"\r\n                                            >\r\n                                                {cast.character}\r\n                                            </Link>\r\n                                            <p className=\"cast-role\">\r\n                                                {cast.name}\r\n                                            </p>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n            <div\r\n                className={\r\n                    expandBiography\r\n                        ? \"modal-biography-active\"\r\n                        : \"modal-biography-hidden\"\r\n                }\r\n            >\r\n                <button\r\n                    className=\"model-exit-btn\"\r\n                    onClick={() => setExpandBiography(false)}\r\n                >\r\n                    <AiOutlineClose\r\n                        className=\"model-btn-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                </button>\r\n                <p className=\"modal-biography\">{modalContent}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieFullScreenResult;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport {\r\n    AiFillStar,\r\n    AiOutlineFileImage,\r\n    AiOutlineClose,\r\n    AiOutlineExpandAlt,\r\n} from \"react-icons/ai\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport FullScreenReview from \"./fullscreenreview/fullscreenreview\";\r\n\r\nconst TvFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [tvData, setTvData] = useState({});\r\n    const [tvResultData, setTvResultData] = useState({});\r\n    const [tvCreditData, setTvCreditData] = useState({});\r\n    const [toggle, setToggle] = useState({ category: \"cast\" });\r\n    const {\r\n        addToWatchList,\r\n        removeFromWatchList,\r\n        isTvShowInWatchlist,\r\n        convertDate,\r\n        expandBiography,\r\n        setExpandBiography,\r\n        modalContent,\r\n        setModalContent,\r\n    } = useGlobalContext();\r\n\r\n    const getTvData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvData(data);\r\n    };\r\n\r\n    const getTvReview = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvResultData(data);\r\n    };\r\n\r\n    const getTvCredit = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/tv/${id}/credits?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setTvCreditData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTvData();\r\n        getTvReview();\r\n        getTvCredit();\r\n    }, []);\r\n\r\n    const found = isTvShowInWatchlist(tvData.id);\r\n\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <div className=\"fullscreen-card\">\r\n                <img\r\n                    className=\"fullscreen-img\"\r\n                    src={`https://image.tmdb.org/t/p/w500/${tvData.poster_path}`}\r\n                    alt=\"\"\r\n                />\r\n                <section className=\"fullscreen-section\">\r\n                    <section className=\"fullscreen-info\">\r\n                        <h1 className=\"fullscreen-title\">{tvData.name}</h1>\r\n                        <div className=\"fullscreen-list-info\">\r\n                            <p className=\"fullscreen-release-date\">\r\n                                {convertDate(tvData.release_date)}\r\n                            </p>\r\n                            <div className=\"ball\"></div>\r\n                            <div className=\"fullscreen-genre\">\r\n                                {tvData.genres !== undefined ? (\r\n                                    tvData.genres.map((type) => {\r\n                                        return <p key={type.id}>{type.name}</p>;\r\n                                    })\r\n                                ) : (\r\n                                    <p></p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"ball\"></div>\r\n                            <p>{tvData.runtime} mins</p>\r\n                        </div>\r\n                        <div className=\"fullscreen-rating\">\r\n                            <h4 className=\"average-score-title\">\r\n                                Average Score:\r\n                            </h4>\r\n                            <p className=\"fullscreen-vote\">\r\n                                <AiFillStar className=\"render-icon\" />\r\n                                {tvData.vote_average}\r\n                            </p>\r\n                            <button\r\n                                className=\"add-remove-button\"\r\n                                onClick={() => {\r\n                                    found\r\n                                        ? removeFromWatchList(\"tv\", tvData.id)\r\n                                        : addToWatchList(\"tv\", tvData);\r\n                                }}\r\n                            >\r\n                                {found ? (\r\n                                    <IoMdRemoveCircleOutline\r\n                                        className=\"remove-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                ) : (\r\n                                    <IoMdAddCircleOutline\r\n                                        className=\"add-icon\"\r\n                                        aria-hidden={true}\r\n                                        focusable={false}\r\n                                    />\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"fullscreen-production\">\r\n                            {tvData.production_companies !== undefined ? (\r\n                                tvData.production_companies.map((company) => {\r\n                                    return (\r\n                                        <p\r\n                                            key={company.id}\r\n                                            className=\"company-name\"\r\n                                        >\r\n                                            {company.name}\r\n                                        </p>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <p></p>\r\n                            )}\r\n                        </div>\r\n                        <h4 className=\"fullscreen-tagline\">\r\n                            <i>{tvData.tagline}</i>\r\n                        </h4>\r\n                        <div className=\"fullscreen-overview\">\r\n                            <h3>Overview</h3>\r\n                            <p className=\"fullscreen-overview-content\">\r\n                                {tvData.overview}\r\n                            </p>\r\n                            <button\r\n                                className=\"expand-btn\"\r\n                                onClick={() => {\r\n                                    setExpandBiography(!expandBiography);\r\n                                    setModalContent(tvData.overview);\r\n                                }}\r\n                            >\r\n                                <AiOutlineExpandAlt\r\n                                    className=\"expand-icon\"\r\n                                    aria-hidden={true}\r\n                                    focusable={false}\r\n                                />\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"review-cast-btn-container\">\r\n                        <div className=\"review-cast-toggle-button\">\r\n                            <button\r\n                                id=\"cast-btn\"\r\n                                className={`fullscreen-toggle-btn cast-btn ${\r\n                                    toggle.category === \"cast\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() => setToggle({ category: \"cast\" })}\r\n                            >\r\n                                Cast\r\n                            </button>\r\n                            <button\r\n                                id=\"review-btn\"\r\n                                className={`fullscreen-toggle-btn review-btn ${\r\n                                    toggle.category === \"review\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() =>\r\n                                    setToggle({ category: \"review\" })\r\n                                }\r\n                            >\r\n                                Reviews\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    {toggle.category === \"review\" ? (\r\n                        tvResultData.results !== undefined ? (\r\n                            <div className=\"fullscreen-reviews\">\r\n                                {tvResultData.results.map((result, index) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <FullScreenReview\r\n                                                key={index}\r\n                                                author={result.author}\r\n                                                written={convertDate(\r\n                                                    result.created_at\r\n                                                )}\r\n                                                review={result.content}\r\n                                            />\r\n                                            <button\r\n                                                className=\"review-modal-expand-btn\"\r\n                                                onClick={() => {\r\n                                                    setExpandBiography(\r\n                                                        !expandBiography\r\n                                                    );\r\n                                                    setModalContent(\r\n                                                        result.content\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                <AiOutlineExpandAlt\r\n                                                    className=\"expand-icon\"\r\n                                                    aria-hidden={true}\r\n                                                    focusable={false}\r\n                                                />\r\n                                            </button>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : toggle.category === \"cast\" ? (\r\n                        tvCreditData.cast !== undefined ? (\r\n                            <div className=\"fullscreen-cast\">\r\n                                {tvCreditData.cast.map((cast) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={cast.id}\r\n                                            className=\"cast-credit\"\r\n                                        >\r\n                                            {cast.profile_path === null ? (\r\n                                                <div className=\"cast-btn-icon-container\">\r\n                                                    <AiOutlineFileImage\r\n                                                        className=\"cast-btn-icon\"\r\n                                                        aria-hidden={true}\r\n                                                        focusable={false}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : (\r\n                                                <img\r\n                                                    className=\"cast-img\"\r\n                                                    src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            )}\r\n\r\n                                            <Link\r\n                                                to={`/result/people/${cast.id}`}\r\n                                                className=\"cast-name\"\r\n                                            >\r\n                                                {cast.character}\r\n                                            </Link>\r\n                                            <p className=\"cast-role\">\r\n                                                {cast.name}\r\n                                            </p>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n            <div\r\n                className={\r\n                    expandBiography\r\n                        ? \"modal-biography-active\"\r\n                        : \"modal-biography-hidden\"\r\n                }\r\n            >\r\n                <button\r\n                    className=\"model-exit-btn\"\r\n                    onClick={() => setExpandBiography(false)}\r\n                >\r\n                    <AiOutlineClose\r\n                        className=\"model-btn-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                </button>\r\n                <p className=\"modal-biography\">{modalContent}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TvFullScreenResult;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport {\r\n    AiOutlineFileImage,\r\n    AiOutlineClose,\r\n    AiOutlineExpandAlt,\r\n} from \"react-icons/ai\";\r\nimport { GiExpand } from \"react-icons/gi\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PeopleFullScreenResult = () => {\r\n    const { id } = useParams();\r\n    const [peopleData, setPeopleData] = useState({});\r\n    const [peopleCreditData, setPeopleCreditData] = useState({});\r\n    const [peopleImageData, setPeopleImageData] = useState({});\r\n    const [toggle, setToggle] = useState({ category: \"credit\" });\r\n    const [expandImg, setExpandImg] = useState(false);\r\n    const [imgModal, setImgModal] = useState(null);\r\n\r\n    const {\r\n        convertDate,\r\n        expandBiography,\r\n        setExpandBiography,\r\n        modalContent,\r\n        setModalContent,\r\n    } = useGlobalContext();\r\n\r\n    const getPeopleData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/person/${id}?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPeopleData(data);\r\n    };\r\n\r\n    const getPeopleCreditData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/person/${id}/combined_credits?api_key=9ddeebbe780fac8f3f13322ce56a87af&language=en-GB`\r\n        );\r\n        const data = await response.json();\r\n        setPeopleCreditData(data);\r\n    };\r\n\r\n    const getPeopleImageData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/person/${id}/images?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        setPeopleImageData(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPeopleData();\r\n        getPeopleCreditData();\r\n        getPeopleImageData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <div className=\"fullscreen-card\">\r\n                {peopleData.profile_path === null ? (\r\n                    <div className=\"fullscreen-img\">\r\n                        <AiOutlineFileImage\r\n                            className=\"cast-btn-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <img\r\n                        className=\"fullscreen-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${peopleData.profile_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n                <section className=\"person-fullscreen-section\">\r\n                    <section className=\"fullscreen-info\">\r\n                        <h1 className=\"fullscreen-title\">{peopleData.name}</h1>\r\n                        <div className=\"person-info\">\r\n                            <div className=\"person-info-div\">\r\n                                <h4 className=\"person-info-title\">\r\n                                    Birthdate:\r\n                                </h4>\r\n                                <p className=\"person-info-para\">\r\n                                    {convertDate(peopleData.birthday)}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"person-info-div\">\r\n                                <h4 className=\"person-info-title\">\r\n                                    Place of Birth:\r\n                                </h4>\r\n                                <p className=\"person-info-para\">\r\n                                    {peopleData.place_of_birth}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"person-info-div\">\r\n                                <h4 className=\"person-info-title\">\r\n                                    Known For:\r\n                                </h4>\r\n                                <p className=\"person-info-para\">\r\n                                    {peopleData.known_for_department}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"person-biography\">\r\n                            <h3>Biography</h3>\r\n                            <p className=\"person-bio-content\">\r\n                                {peopleData.biography}\r\n                            </p>\r\n                            <button\r\n                                className=\"person-bio-expand-btn\"\r\n                                onClick={() => {\r\n                                    setExpandBiography(!expandBiography);\r\n                                    setModalContent(peopleData.biography);\r\n                                }}\r\n                            >\r\n                                <AiOutlineExpandAlt\r\n                                    className=\"expand-icon\"\r\n                                    aria-hidden={true}\r\n                                    focusable={false}\r\n                                />\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"review-cast-btn-container\">\r\n                        <div className=\"review-cast-toggle-button\">\r\n                            <button\r\n                                id=\"cast-btn\"\r\n                                className={`fullscreen-toggle-btn cast-btn ${\r\n                                    toggle.category === \"credit\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() =>\r\n                                    setToggle({ category: \"credit\" })\r\n                                }\r\n                            >\r\n                                Movie\r\n                            </button>\r\n                            <button\r\n                                id=\"review-btn\"\r\n                                className={`fullscreen-toggle-btn review-btn ${\r\n                                    toggle.category === \"image\"\r\n                                        ? \"review-cast-active\"\r\n                                        : \"\"\r\n                                }`}\r\n                                onClick={() => setToggle({ category: \"image\" })}\r\n                            >\r\n                                Images\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                    {toggle.category === \"credit\" ? (\r\n                        <div className=\"person-fullscreen-cast\">\r\n                            {peopleCreditData.cast !== undefined ? (\r\n                                peopleCreditData.cast.map((cast, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={index}\r\n                                            className=\"person-credit\"\r\n                                        >\r\n                                            {cast.poster_path === null ? (\r\n                                                <div className=\"cast-btn-icon-container\">\r\n                                                    <AiOutlineFileImage\r\n                                                        className=\"cast-btn-icon\"\r\n                                                        aria-hidden={true}\r\n                                                        focusable={false}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : (\r\n                                                <img\r\n                                                    className=\"person-credit-img\"\r\n                                                    src={`https://image.tmdb.org/t/p/w500/${cast.poster_path}`}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            )}\r\n                                            <Link\r\n                                                to={`/result/movie/${cast.id}`}\r\n                                                className=\"cast-name\"\r\n                                            >\r\n                                                <p className=\"cast-name\">\r\n                                                    {cast.title}\r\n                                                </p>\r\n                                            </Link>\r\n                                            <p className=\"person-cast-role\">\r\n                                                {cast.character}\r\n                                            </p>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <div></div>\r\n                            )}\r\n                        </div>\r\n                    ) : toggle.category === \"image\" ? (\r\n                        <div className=\"person-fullscreen-images-container\">\r\n                            {peopleImageData.profiles !== null ? (\r\n                                peopleImageData.profiles.map((img, index) => {\r\n                                    return (\r\n                                        <div className=\"person-img-container\">\r\n                                            <img\r\n                                                key={index}\r\n                                                className=\"person-img\"\r\n                                                src={`https://image.tmdb.org/t/p/w500/${img.file_path}`}\r\n                                                alt=\"\"\r\n                                            />\r\n                                            <div\r\n                                                className=\"person-img-hover\"\r\n                                                onClick={() => {\r\n                                                    setExpandImg(!expandImg);\r\n                                                    setImgModal(\r\n                                                        <img\r\n                                                            key={index}\r\n                                                            className=\"model-person-img\"\r\n                                                            src={`https://image.tmdb.org/t/p/w500/${img.file_path}`}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    );\r\n                                                }}\r\n                                            >\r\n                                                <GiExpand\r\n                                                    className=\"person-expand-btn-icon\"\r\n                                                    aria-hidden={true}\r\n                                                    focusable={false}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <div></div>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n            <div\r\n                className={\r\n                    expandBiography\r\n                        ? \"modal-biography-active\"\r\n                        : \"modal-biography-hidden\"\r\n                }\r\n            >\r\n                <button\r\n                    className=\"model-exit-btn\"\r\n                    onClick={() => setExpandBiography(false)}\r\n                >\r\n                    <AiOutlineClose\r\n                        className=\"model-btn-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                </button>\r\n                <p className=\"modal-biography\">{modalContent}</p>\r\n            </div>\r\n            <div\r\n                className={expandImg ? \"modal-img-active\" : \"modal-img-hidden\"}\r\n            >\r\n                <button\r\n                    className=\"model-img-exit-btn\"\r\n                    onClick={() => setExpandImg(!expandImg)}\r\n                >\r\n                    <AiOutlineClose\r\n                        className=\"model-btn-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                </button>\r\n                <div className=\"modal-img\">{imgModal}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleFullScreenResult;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\nimport { useGlobalContext } from \"../../../context\";\r\n\r\nconst WatchlistCard = ({\r\n    found,\r\n    imgSrc,\r\n    linkTo,\r\n    title,\r\n    overview,\r\n    vote,\r\n    removeCat,\r\n    removeID,\r\n    addCat,\r\n    addID,\r\n}) => {\r\n    const { addToWatchList, removeFromWatchList } = useGlobalContext();\r\n\r\n    return (\r\n        <div className=\"card-active\">\r\n            <img\r\n                src={`https://image.tmdb.org/t/p/w500/${imgSrc}`}\r\n                alt=\"\"\r\n                className=\"watchlist-card-img\"\r\n            />\r\n            <div className=\"watchlist-card-info\">\r\n                <Link to={linkTo} className=\"watchlist-card-link\">\r\n                    <h3>{title}</h3>\r\n                </Link>\r\n                <div className=\"watchlist-card-overview-vote-container\">\r\n                    <p className=\"watchlist-card-vote\">\r\n                        <AiFillStar className=\"watchlist-card-icon\" />\r\n                        {vote}\r\n                    </p>\r\n                    <p className=\"watchlist-card-overview\">{overview}</p>\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"remove-from-wishlist\"\r\n                onClick={() => {\r\n                    found\r\n                        ? removeFromWatchList(removeCat, removeID)\r\n                        : addToWatchList(addCat, addID);\r\n                }}\r\n            >\r\n                {found ? (\r\n                    <IoMdRemoveCircleOutline\r\n                        className=\"remove-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                ) : (\r\n                    <IoMdAddCircleOutline\r\n                        className=\"add-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WatchlistCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\nimport { useGlobalContext } from \"../../../context\";\r\n\r\nconst WatchlistList = ({\r\n    found,\r\n    imgSrc,\r\n    linkTo,\r\n    title,\r\n    overview,\r\n    vote,\r\n    removeCat,\r\n    removeID,\r\n    addCat,\r\n    addID,\r\n}) => {\r\n    const { addToWatchList, removeFromWatchList } = useGlobalContext();\r\n\r\n    return (\r\n        <div className=\"list-active\">\r\n            <Link to={linkTo} className=\"watchlist-list-img-link\">\r\n                <img\r\n                    src={`https://image.tmdb.org/t/p/w500/${imgSrc}`}\r\n                    alt=\"\"\r\n                    className=\"watchlist-list-img\"\r\n                />\r\n            </Link>\r\n            <div className=\"watchlist-list-info\">\r\n                <Link to={linkTo} className=\"watchlist-list-link\">\r\n                    <h3>{title}</h3>\r\n                </Link>\r\n                <div className=\"watchlist-list-overview-vote-container\">\r\n                    <p className=\"watchlist-list-vote\">\r\n                        <AiFillStar className=\"watchlist-list-icon\" />\r\n                        {vote}\r\n                    </p>\r\n                    <p className=\"watchlist-list-overview\">{overview}</p>\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"remove-from-wishlist\"\r\n                onClick={() => {\r\n                    found\r\n                        ? removeFromWatchList(removeCat, removeID)\r\n                        : addToWatchList(addCat, addID);\r\n                }}\r\n            >\r\n                {found ? (\r\n                    <IoMdRemoveCircleOutline\r\n                        className=\"remove-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                ) : (\r\n                    <IoMdAddCircleOutline\r\n                        className=\"add-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                )}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WatchlistList;\r\n","import React, { useState, useRef, useLayoutEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport { HiViewGrid, HiViewList } from \"react-icons/hi\";\r\nimport { BiDownArrow, BiRightArrow } from \"react-icons/bi\";\r\nimport WatchlistCard from \"./WatchlistCard/watchlistcard\";\r\nimport WatchlistList from \"./WatchlistCard/watchlistList\";\r\n\r\nconst Watchlist = () => {\r\n    const {\r\n        watchList,\r\n        isMovieInWatchlist,\r\n        isTvShowInWatchlist,\r\n        movieCount,\r\n        tvCount,\r\n    } = useGlobalContext();\r\n\r\n    const [movieWatchlist, setMovieWatchlist] = useState(watchList.movie);\r\n    const [tvWatchlist, setTvWatchlist] = useState(watchList.tv);\r\n    const [valueSelect, setValueSelect] = useState({\r\n        ascending: \"\",\r\n        descending: \"\",\r\n    });\r\n    const [watchlistView, setWatchlistView] = useState(\"card\");\r\n    const [isMovieShown, setIsMovieShown] = useState(true);\r\n    const [isTVShown, setIsTVShown] = useState(true);\r\n\r\n    const sortingTypeRef = useRef();\r\n    const sortingDirectionRef = useRef();\r\n    const movieWatchlistRef = useRef();\r\n    const tvWatchlistRef = useRef();\r\n\r\n    const adjustMovieWatchlistHeight = () => {\r\n        if (isMovieShown) {\r\n            movieWatchlistRef.current.style.display = \"none\";\r\n            setIsMovieShown(!isMovieShown);\r\n        } else {\r\n            movieWatchlistRef.current.style.display = \"flex\";\r\n            setIsMovieShown(!isMovieShown);\r\n        }\r\n    };\r\n    const adjustTVWatchlistHeight = () => {\r\n        if (isTVShown) {\r\n            tvWatchlistRef.current.style.display = \"none\";\r\n            setIsTVShown(!isTVShown);\r\n        } else {\r\n            tvWatchlistRef.current.style.display = \"flex\";\r\n            setIsTVShown(!isTVShown);\r\n        }\r\n    };\r\n\r\n    const sortWatchlist = (a, b) => {\r\n        const sortedMovieWatchlist = [...a];\r\n        const sortedTvWatchlist = [...b];\r\n        if (sortingTypeRef.current.value === \"alphabetical\") {\r\n            setValueSelect({ ascending: \"A-Z\", descending: \"Z-A\" });\r\n            sortedMovieWatchlist.sort(compareMovieName);\r\n            sortedTvWatchlist.sort(compareTvName);\r\n        }\r\n        if (sortingTypeRef.current.value === \"rating\") {\r\n            setValueSelect({ ascending: \"Low-High\", descending: \"High-Low\" });\r\n            sortedMovieWatchlist.sort(compareRating);\r\n            sortedTvWatchlist.sort(compareRating);\r\n        }\r\n        if (sortingTypeRef.current.value === \"date-added\") {\r\n            setValueSelect({ ascending: \"New-Old\", descending: \"Old-New\" });\r\n            sortedMovieWatchlist.sort(compareDate);\r\n            sortedTvWatchlist.sort(compareDate);\r\n        }\r\n        if (sortingDirectionRef.current.value === \"descending\") {\r\n            sortedMovieWatchlist.reverse();\r\n            sortedTvWatchlist.reverse();\r\n        }\r\n        setMovieWatchlist(sortedMovieWatchlist);\r\n        setTvWatchlist(sortedTvWatchlist);\r\n    };\r\n    const compareMovieName = (a, b) => {\r\n        const nameA = a.title.toUpperCase();\r\n        const nameB = b.title.toUpperCase();\r\n        if (nameA > nameB) {\r\n            return 1;\r\n        }\r\n        if (nameA < nameB) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    };\r\n    const compareTvName = (a, b) => {\r\n        const nameA = a.name.toUpperCase();\r\n        const nameB = b.name.toUpperCase();\r\n        if (nameA > nameB) {\r\n            return 1;\r\n        }\r\n        if (nameA < nameB) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    };\r\n    const compareRating = (a, b) => {\r\n        return a.vote_average - b.vote_average;\r\n    };\r\n    const compareDate = (a, b) => {\r\n        return b.date_added - a.date_added;\r\n    };\r\n\r\n    useLayoutEffect(() => {\r\n        sortWatchlist(watchList.movie, watchList.tv);\r\n    }, [watchList]);\r\n\r\n    return (\r\n        <div id=\"fullscreen-watchlist-root-container\">\r\n            <div className=\"sorting-selection\">\r\n                <nav className=\"sorting-options-grid\">\r\n                    <div className=\"date-rating-alpha-sorting\">\r\n                        <select\r\n                            name=\"type\"\r\n                            ref={sortingTypeRef}\r\n                            onChange={() =>\r\n                                sortWatchlist(watchList.movie, watchList.tv)\r\n                            }\r\n                            className=\"date-rating-alpha-selection\"\r\n                            id=\"date-rating-alpha\"\r\n                        >\r\n                            <option value=\"alphabetical\">Alphabetical</option>\r\n                            <option value=\"date-added\">Date Added</option>\r\n                            <option value=\"rating\">Rating</option>\r\n                        </select>\r\n                        <select\r\n                            name=\"direction\"\r\n                            ref={sortingDirectionRef}\r\n                            onChange={() =>\r\n                                sortWatchlist(watchList.movie, watchList.tv)\r\n                            }\r\n                            className=\"date-rating-alpha-selection\"\r\n                            id=\"ascending-descending\"\r\n                        >\r\n                            <option value=\"ascending\">\r\n                                {valueSelect.ascending}\r\n                            </option>\r\n                            <option value=\"descending\">\r\n                                {valueSelect.descending}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"view-selection\">\r\n                        <p>View:</p>\r\n                        <div className=\"view-btn-container\">\r\n                            <button\r\n                                className=\"view-btn\"\r\n                                onClick={() => setWatchlistView(\"card\")}\r\n                            >\r\n                                <HiViewGrid className=\"view-btn-icon\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"view-btn\"\r\n                                onClick={() => setWatchlistView(\"list\")}\r\n                            >\r\n                                <HiViewList className=\"view-btn-icon\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <div id=\"fullscreen-watchlist-flex-container\">\r\n                <div className=\"watchlist-title-container\">\r\n                    <h2 className=\"section-title\">Your Watchlist</h2>\r\n                </div>\r\n                <div id=\"fullscreen-watchlist\">\r\n                    <section\r\n                        className=\"fullscreen-watchlist-container\"\r\n                        id=\"movie-watchlist-fullscreen\"\r\n                    >\r\n                        <div\r\n                            className=\"fullscreen-watchlist-head\"\r\n                            onClick={() => adjustMovieWatchlistHeight()}\r\n                        >\r\n                            <h3>Movie Watchlist</h3>\r\n                            <p>Total Added - {movieCount}</p>\r\n                            {isMovieShown ? <BiDownArrow /> : <BiRightArrow />}\r\n                        </div>\r\n                        <div\r\n                            // className=\"fullscreen-watchlist-map\"\r\n                            className={\r\n                                watchlistView === \"card\"\r\n                                    ? \"fullscreen-watchlist-map card-map\"\r\n                                    : \"fullscreen-watchlist-map list-map\"\r\n                            }\r\n                            ref={movieWatchlistRef}\r\n                        >\r\n                            {movieWatchlist.length === 0 ? (\r\n                                <div className=\"empty-watchlist\">\r\n                                    <h1>Your Watchlist is Empty...</h1>\r\n                                </div>\r\n                            ) : (\r\n                                movieWatchlist.map((item) => {\r\n                                    if (watchlistView === \"card\") {\r\n                                        return (\r\n                                            <WatchlistCard\r\n                                                key={item.id}\r\n                                                id={item.id}\r\n                                                found={isMovieInWatchlist(\r\n                                                    item.id\r\n                                                )}\r\n                                                imgSrc={item.poster_path}\r\n                                                linkTo={`/result/movie/${item.id}`}\r\n                                                title={item.title}\r\n                                                overview={item.overview}\r\n                                                vote={item.vote_average}\r\n                                                removeCat={\"movie\"}\r\n                                                removeID={item.id}\r\n                                                addCat={\"movie\"}\r\n                                                addID={item}\r\n                                            />\r\n                                        );\r\n                                    } else {\r\n                                        return (\r\n                                            <WatchlistList\r\n                                                key={item.id}\r\n                                                id={item.id}\r\n                                                found={isMovieInWatchlist(\r\n                                                    item.id\r\n                                                )}\r\n                                                imgSrc={item.poster_path}\r\n                                                linkTo={`/result/movie/${item.id}`}\r\n                                                title={item.title}\r\n                                                overview={item.overview}\r\n                                                vote={item.vote_average}\r\n                                                removeCat={\"movie\"}\r\n                                                removeID={item.id}\r\n                                                addCat={\"movie\"}\r\n                                                addID={item}\r\n                                            />\r\n                                        );\r\n                                    }\r\n                                })\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n                    <section\r\n                        className=\"fullscreen-watchlist-container\"\r\n                        id=\"tv-watchlist-fullscreen\"\r\n                    >\r\n                        <div\r\n                            className=\"fullscreen-watchlist-head\"\r\n                            onClick={() => adjustTVWatchlistHeight()}\r\n                        >\r\n                            <h3>TV Show Watchlist</h3>\r\n                            <p>Total Added - {tvCount}</p>\r\n                            {isTVShown ? <BiDownArrow /> : <BiRightArrow />}\r\n                        </div>\r\n                        <div\r\n                            className={\r\n                                watchlistView === \"card\"\r\n                                    ? \"fullscreen-watchlist-map card-map\"\r\n                                    : \"fullscreen-watchlist-map list-map\"\r\n                            }\r\n                            ref={tvWatchlistRef}\r\n                        >\r\n                            {tvWatchlist.length === 0 ? (\r\n                                <div className=\"empty-watchlist\">\r\n                                    <h1>Your Watchlist is Empty...</h1>\r\n                                </div>\r\n                            ) : (\r\n                                tvWatchlist.map((item) => {\r\n                                    if (watchlistView === \"card\") {\r\n                                        return (\r\n                                            <WatchlistCard\r\n                                                key={item.id}\r\n                                                id={item.id}\r\n                                                found={isTvShowInWatchlist(\r\n                                                    item.id\r\n                                                )}\r\n                                                imgSrc={item.poster_path}\r\n                                                linkTo={`/result/tv/${item.id}`}\r\n                                                title={item.name}\r\n                                                overview={item.overview}\r\n                                                vote={item.vote_average}\r\n                                                removeCat={\"tv\"}\r\n                                                removeID={item.id}\r\n                                                addCat={\"tv\"}\r\n                                                addID={item}\r\n                                            />\r\n                                        );\r\n                                    } else {\r\n                                        return (\r\n                                            <WatchlistList\r\n                                                key={item.id}\r\n                                                id={item.id}\r\n                                                found={isTvShowInWatchlist(\r\n                                                    item.id\r\n                                                )}\r\n                                                imgSrc={item.poster_path}\r\n                                                linkTo={`/result/tv/${item.id}`}\r\n                                                title={item.name}\r\n                                                overview={item.overview}\r\n                                                vote={item.vote_average}\r\n                                                removeCat={\"tv\"}\r\n                                                removeID={item.id}\r\n                                                addCat={\"tv\"}\r\n                                                addID={item}\r\n                                            />\r\n                                        );\r\n                                    }\r\n                                })\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Watchlist;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../../context\";\r\nimport { GoSearch } from \"react-icons/go\";\r\n\r\nconst Searchbar = () => {\r\n    const [searchTitle, setSearchTitle] = useState(\"\");\r\n    const [category, setCategory] = useState(\"movie\");\r\n\r\n    const {\r\n        search,\r\n        trendingData,\r\n        setTrendingData,\r\n        setSearchResults,\r\n        searchResults,\r\n    } = useGlobalContext();\r\n\r\n    const placeHolderSearchText = () => {\r\n        switch (category) {\r\n            case \"movie\":\r\n                return \"Search for a Movie\";\r\n            case \"tv\":\r\n                return \"Search for a TV Show\";\r\n            case \"people\":\r\n                return \"Search for a Person\";\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTrendingData({ ...trendingData, type: category });\r\n    }, [category]);\r\n\r\n    return (\r\n        <form id=\"title-searchbar\">\r\n            <div className=\"title-bar\">\r\n                <div className=\"search-input-container\">\r\n                    <input\r\n                        id=\"title-input\"\r\n                        type=\"text\"\r\n                        value={searchTitle}\r\n                        placeholder={placeHolderSearchText()}\r\n                        onChange={(e) => {\r\n                            setSearchTitle(e.target.value);\r\n                        }}\r\n                    />\r\n                    <button\r\n                        id=\"search-btn\"\r\n                        type=\"submit\"\r\n                        onClick={(e) => {\r\n                            if (searchTitle === \"\") {\r\n                                switch (category) {\r\n                                    case \"movie\":\r\n                                        return alert(\r\n                                            \"Please Enter Movie Title\"\r\n                                        );\r\n                                    case \"tv\":\r\n                                        return alert(\r\n                                            \"Please Enter TV Show Title\"\r\n                                        );\r\n                                    case \"people\":\r\n                                        return alert(\r\n                                            \"Please Enter Person Name\"\r\n                                        );\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            } else {\r\n                                e.preventDefault();\r\n                                search(category, searchTitle);\r\n                                setSearchTitle(\"\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        <GoSearch className=\"search-btn-icon\" />\r\n                    </button>\r\n                </div>\r\n                <div className=\"category-btn-container\">\r\n                    <button\r\n                        id=\"category-movie-btn\"\r\n                        className={`category-btn category-movie-btn ${\r\n                            category === \"movie\" ? \"category-active\" : \"\"\r\n                        }`}\r\n                        onClick={() => {\r\n                            setCategory(\"movie\");\r\n                            setSearchResults({\r\n                                ...searchResults,\r\n                                category: \"movie\",\r\n                            });\r\n                        }}\r\n                    >\r\n                        Movie\r\n                    </button>\r\n                    <button\r\n                        id=\"category-tv-btn\"\r\n                        className={`category-btn category-tv-btn ${\r\n                            category === \"tv\" ? \"category-active\" : \"\"\r\n                        }`}\r\n                        onClick={() => {\r\n                            setCategory(\"tv\");\r\n                            setSearchResults({\r\n                                ...searchResults,\r\n                                category: \"tv\",\r\n                            });\r\n                        }}\r\n                    >\r\n                        TV\r\n                    </button>\r\n                    <button\r\n                        id=\"category-people-btn\"\r\n                        className={`category-btn category-people-btn ${\r\n                            category === \"people\" ? \"category-active\" : \"\"\r\n                        }`}\r\n                        onClick={() => {\r\n                            setCategory(\"people\");\r\n                            setSearchResults({\r\n                                ...searchResults,\r\n                                category: \"people\",\r\n                            });\r\n                        }}\r\n                    >\r\n                        Person\r\n                    </button>\r\n                </div>\r\n                <button\r\n                    id=\"clear-search-btn\"\r\n                    onClick={() => {\r\n                        setSearchResults({\r\n                            category: \"movie\",\r\n                            movie: [],\r\n                            tv: [],\r\n                            people: [],\r\n                            query: {},\r\n                        });\r\n                    }}\r\n                >\r\n                    Clear\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\nimport { IoMdRemoveCircleOutline, IoMdAddCircleOutline } from \"react-icons/io\";\r\nimport { useGlobalContext } from \"../../../../context\";\r\n\r\nconst MovieTVResultData = ({\r\n    id,\r\n    linkTo,\r\n    img,\r\n    title,\r\n    release,\r\n    overview,\r\n    type,\r\n    found,\r\n    vote,\r\n}) => {\r\n    const { addToWatchList, removeFromWatchList, convertDate } =\r\n        useGlobalContext();\r\n\r\n    const obj = {\r\n        id: id,\r\n        title: title,\r\n        poster_path: img,\r\n        vote_average: vote,\r\n        date_added: Date.now(),\r\n        overview: overview,\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-results\">\r\n            <Link to={linkTo} className=\"image-link-container\">\r\n                {img === null ? (\r\n                    <div className=\"search-img\">\r\n                        <AiOutlineFileImage\r\n                            className=\"btn-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <img\r\n                        className=\"search-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${img}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n            </Link>\r\n            <div className=\"search-info\">\r\n                <Link to={linkTo} className=\"search-title\">\r\n                    {title}\r\n                </Link>\r\n                <div className=\"search-release-overview-container\">\r\n                    <p className=\"search-release-date\">\r\n                        {convertDate(release)}\r\n                    </p>\r\n                    <p className=\"search-overview\">{overview}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className=\"remove-from-wishlist\"\r\n                    onClick={() => {\r\n                        found\r\n                            ? removeFromWatchList(type, id)\r\n                            : addToWatchList(type, obj);\r\n                    }}\r\n                >\r\n                    {found ? (\r\n                        <IoMdRemoveCircleOutline\r\n                            className=\"remove-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    ) : (\r\n                        <IoMdAddCircleOutline\r\n                            className=\"add-icon\"\r\n                            aria-hidden={true}\r\n                            focusable={false}\r\n                        />\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieTVResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineFileImage } from \"react-icons/ai\";\r\n\r\nconst PeopleResultData = ({ person }) => {\r\n    return (\r\n        <div className=\"person-search-results-card\">\r\n            <Link\r\n                to={`/result/people/${person.id}`}\r\n                className=\"person-image-container\"\r\n            >\r\n                {person.profile_path === null ? (\r\n                    <AiOutlineFileImage\r\n                        className=\"btn-icon\"\r\n                        aria-hidden={true}\r\n                        focusable={false}\r\n                    />\r\n                ) : (\r\n                    <img\r\n                        className=\"person-search-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500/${person.profile_path}`}\r\n                        alt=\"\"\r\n                    />\r\n                )}\r\n            </Link>\r\n            <div className=\"person-search-info\">\r\n                <Link\r\n                    to={`/result/people/${person.id}`}\r\n                    className=\"person-name\"\r\n                >\r\n                    {person.name}\r\n                </Link>\r\n                <div className=\"person-known-role-container\">\r\n                    <p className=\"person-known-for\">\r\n                        Known for: {person.known_for_department}\r\n                    </p>\r\n                    {person.known_for.map((role) => {\r\n                        return (\r\n                            <div key={role.id} className=\"known-for-role\">\r\n                                <p className=\"known-for-title\">{role.title}</p>\r\n                                <p className=\"known-for-date\">\r\n                                    {role.release_date}\r\n                                </p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleResultData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TrendingData = ({ title, img, id, link }) => {\r\n    return (\r\n        <div className=\"trending-tile\">\r\n            <img\r\n                src={`https://image.tmdb.org/t/p/w500/${img}`}\r\n                alt=\"\"\r\n                className=\"trending-img\"\r\n            />\r\n            <Link to={`/result/${link}/${id}`} className=\"trending-link\">\r\n                <h3 className=\"trending-title\">{title}</h3>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrendingData;\r\n","import React, { useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../../../context\";\r\nimport MovieTVResultData from \"./SearchResultsCard/movietvresultdata\";\r\nimport PeopleResultData from \"./SearchResultsCard/peopleresultdata\";\r\nimport useHorizontalScroll from \"../../../hooks/useHorizontalScroll\";\r\nimport TrendingData from \"./SearchTrending/trendingdata\";\r\nimport useWindowDimensions from \"../../../hooks/useWindowDimensions\";\r\nimport Carousel from \"../../Carousel/Carousel\";\r\n\r\nconst SearchResults = () => {\r\n    const {\r\n        searchResults,\r\n        trendingData,\r\n        setTrendingData,\r\n        isMovieInWatchlist,\r\n        isTvShowInWatchlist,\r\n    } = useGlobalContext();\r\n\r\n    const movieTrendingRef = useHorizontalScroll(false);\r\n    const tvTrendingRef = useHorizontalScroll(false);\r\n    const peopleTrendingRef = useHorizontalScroll(false);\r\n\r\n    const [windowDimensions] = useWindowDimensions();\r\n\r\n    const getTrendingMovieData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/movie/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n    const getTrendingTVData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/tv/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n    const getTrendingPeopleData = async () => {\r\n        const response = await fetch(\r\n            `https://api.themoviedb.org/3/trending/person/day?api_key=9ddeebbe780fac8f3f13322ce56a87af`\r\n        );\r\n        const data = await response.json();\r\n        return data.results;\r\n    };\r\n\r\n    const getAllTrending = async () => {\r\n        const obj = {\r\n            type: \"movie\",\r\n            movie: await getTrendingMovieData(),\r\n            tv: await getTrendingTVData(),\r\n            person: await getTrendingPeopleData(),\r\n        };\r\n        setTrendingData(obj);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllTrending();\r\n    }, []);\r\n\r\n    if (windowDimensions.width <= 450) {\r\n        switch (trendingData.type) {\r\n            case \"movie\":\r\n                if (searchResults.movie.length === 0) {\r\n                    return (\r\n                        <div className=\"trending-carousel-container\">\r\n                            <div className=\"search-trending-title-container\">\r\n                                <h2 className=\"search-trending-title\">\r\n                                    Trending Movies\r\n                                </h2>\r\n                            </div>\r\n                            <Carousel>\r\n                                {trendingData.movie.map((film) => {\r\n                                    return (\r\n                                        <TrendingData\r\n                                            key={film.id}\r\n                                            id={film.id}\r\n                                            title={film.title}\r\n                                            img={film.poster_path}\r\n                                            link={\"movie\"}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </Carousel>\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"search-results-container\">\r\n                            <h3 className=\"showing-results-for\">\r\n                                Showing results for \"\r\n                                {searchResults.query.movie.toUpperCase()}\"\r\n                            </h3>\r\n\r\n                            {searchResults.movie.map((movie) => {\r\n                                return (\r\n                                    <MovieTVResultData\r\n                                        key={movie.id}\r\n                                        id={movie.id}\r\n                                        found={isMovieInWatchlist(movie.id)}\r\n                                        linkTo={`/result/movie/${movie.id}`}\r\n                                        img={movie.poster_path}\r\n                                        title={movie.title}\r\n                                        release={movie.release_date}\r\n                                        overview={movie.overview}\r\n                                        type={\"movie\"}\r\n                                        vote={movie.vote_average}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                }\r\n            case \"tv\":\r\n                if (searchResults.tv.length === 0) {\r\n                    return (\r\n                        <div className=\"trending-carousel-container\">\r\n                            <div className=\"search-trending-title-container\">\r\n                                <h2 className=\"search-trending-title\">\r\n                                    Trending TV Shows\r\n                                </h2>\r\n                            </div>\r\n                            <Carousel>\r\n                                {trendingData.tv.map((show) => {\r\n                                    return (\r\n                                        <TrendingData\r\n                                            key={show.id}\r\n                                            id={show.id}\r\n                                            title={show.name}\r\n                                            img={show.poster_path}\r\n                                            link={\"tv\"}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </Carousel>\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"search-results-container\">\r\n                            <h3 className=\"showing-results-for\">\r\n                                Showing results for \"\r\n                                {searchResults.query.tv.toUpperCase()}\"\r\n                            </h3>\r\n                            {searchResults.tv.map((tvshow) => {\r\n                                return (\r\n                                    <MovieTVResultData\r\n                                        key={tvshow.id}\r\n                                        id={tvshow.id}\r\n                                        found={isTvShowInWatchlist(tvshow.id)}\r\n                                        linkTo={`/result/tv/${tvshow.id}`}\r\n                                        img={tvshow.poster_path}\r\n                                        title={tvshow.name}\r\n                                        release={tvshow.first_air_date}\r\n                                        overview={tvshow.overview}\r\n                                        type={\"tv\"}\r\n                                        vote={tvshow.vote_average}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                }\r\n            case \"people\":\r\n                if (searchResults.people.length === 0) {\r\n                    return (\r\n                        <div className=\"trending-carousel-container\">\r\n                            <div className=\"search-trending-title-container\">\r\n                                <h2 className=\"search-trending-title\">\r\n                                    Trending People\r\n                                </h2>\r\n                            </div>\r\n                            <Carousel>\r\n                                {trendingData.person.map((peep) => {\r\n                                    return (\r\n                                        <TrendingData\r\n                                            key={peep.id}\r\n                                            id={peep.id}\r\n                                            title={peep.name}\r\n                                            img={peep.profile_path}\r\n                                            link={\"people\"}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </Carousel>\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"people-search-results-container\">\r\n                            <h3 className=\"showing-results-for\">\r\n                                Showing results for \"\r\n                                {searchResults.query.person.toUpperCase()}\"\r\n                            </h3>\r\n                            <div className=\"people-search-results\">\r\n                                {searchResults.people.map((item, index) => {\r\n                                    return (\r\n                                        <PeopleResultData\r\n                                            key={item.id}\r\n                                            index={index}\r\n                                            person={item}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    switch (trendingData.type) {\r\n        case \"movie\":\r\n            if (searchResults.movie.length === 0) {\r\n                return (\r\n                    <div className=\"trending-movie-container\">\r\n                        <div className=\"search-trending-title-container\">\r\n                            <h2 className=\"search-trending-title\">\r\n                                Trending Movies\r\n                            </h2>\r\n                        </div>\r\n                        <div\r\n                            className=\"trending-data-container\"\r\n                            ref={movieTrendingRef}\r\n                        >\r\n                            {trendingData.movie.map((film) => {\r\n                                return (\r\n                                    <TrendingData\r\n                                        key={film.id}\r\n                                        id={film.id}\r\n                                        title={film.title}\r\n                                        img={film.poster_path}\r\n                                        link={\"movie\"}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div className=\"search-results-container\">\r\n                        <h3 className=\"showing-results-for\">\r\n                            Showing results for \"\r\n                            {searchResults.query.movie.toUpperCase()}\"\r\n                        </h3>\r\n                        {searchResults.movie.map((movie) => {\r\n                            return (\r\n                                <MovieTVResultData\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    found={isMovieInWatchlist(movie.id)}\r\n                                    linkTo={`/result/movie/${movie.id}`}\r\n                                    img={movie.poster_path}\r\n                                    title={movie.title}\r\n                                    release={movie.release_date}\r\n                                    overview={movie.overview}\r\n                                    type={\"movie\"}\r\n                                    vote={movie.vote_average}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }\r\n        case \"tv\":\r\n            if (searchResults.tv.length === 0) {\r\n                return (\r\n                    <div className=\"trending-movie-container\">\r\n                        <div className=\"search-trending-title-container\">\r\n                            <h2 className=\"search-trending-title\">\r\n                                Trending TV Shows\r\n                            </h2>\r\n                        </div>\r\n                        <div\r\n                            className=\"trending-data-container\"\r\n                            ref={tvTrendingRef}\r\n                        >\r\n                            {trendingData.tv.map((show) => {\r\n                                return (\r\n                                    <TrendingData\r\n                                        key={show.id}\r\n                                        id={show.id}\r\n                                        title={show.name}\r\n                                        img={show.poster_path}\r\n                                        link={\"tv\"}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div className=\"search-results-container\">\r\n                        <h3 className=\"showing-results-for\">\r\n                            Showing results for \"\r\n                            {searchResults.query.tv.toUpperCase()}\"\r\n                        </h3>\r\n                        {searchResults.tv.map((tvshow) => {\r\n                            return (\r\n                                <MovieTVResultData\r\n                                    key={tvshow.id}\r\n                                    id={tvshow.id}\r\n                                    found={isTvShowInWatchlist(tvshow.id)}\r\n                                    linkTo={`/result/tv/${tvshow.id}`}\r\n                                    img={tvshow.poster_path}\r\n                                    title={tvshow.name}\r\n                                    release={tvshow.first_air_date}\r\n                                    overview={tvshow.overview}\r\n                                    type={\"tv\"}\r\n                                    vote={tvshow.vote_average}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }\r\n        case \"people\":\r\n            if (searchResults.people.length === 0) {\r\n                return (\r\n                    <div className=\"trending-movie-container\">\r\n                        <div className=\"search-trending-title-container\">\r\n                            <h2 className=\"search-trending-title\">\r\n                                Trending People\r\n                            </h2>\r\n                        </div>\r\n                        <div\r\n                            className=\"trending-data-container\"\r\n                            ref={peopleTrendingRef}\r\n                        >\r\n                            {trendingData.person.map((peep) => {\r\n                                return (\r\n                                    <TrendingData\r\n                                        key={peep.id}\r\n                                        id={peep.id}\r\n                                        title={peep.name}\r\n                                        img={peep.profile_path}\r\n                                        link={\"people\"}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div className=\"people-search-results-container\">\r\n                        <h3 className=\"showing-results-for\">\r\n                            Showing results for \"\r\n                            {searchResults.query.person.toUpperCase()}\"\r\n                        </h3>\r\n                        <div className=\"people-search-results\">\r\n                            {searchResults.people.map((item, index) => {\r\n                                return (\r\n                                    <PeopleResultData\r\n                                        key={item.id}\r\n                                        index={index}\r\n                                        person={item}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useRef } from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport Searchbar from \"./Searchbar/searchbar\";\r\nimport SearchResults from \"./SearchResults/searchresults\";\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\r\n\r\nconst Search = () => {\r\n    const { setIsScroll, returnToTop } = useGlobalContext();\r\n    const scrollRef = useRef();\r\n\r\n    const [windowDimensions] = useWindowDimensions();\r\n\r\n    return (\r\n        <div\r\n            ref={scrollRef}\r\n            className={windowDimensions.width < 926 ? \"mobile-scroll\" : \"\"}\r\n            id=\"search-container\"\r\n            onScroll={() => {\r\n                if (scrollRef.current.scrollTop <= 0) {\r\n                    setIsScroll(false);\r\n                } else {\r\n                    setIsScroll(true);\r\n                }\r\n            }}\r\n        >\r\n            <Searchbar />\r\n            <SearchResults />\r\n            {windowDimensions.width < 926 ? returnToTop(scrollRef) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nconst Addremovewatchlist = () => {\r\n    const { watchListAlert } = useGlobalContext();\r\n    return (\r\n        <div\r\n            id=\"watchlist-alert\"\r\n            className={\r\n                watchListAlert.isAdded\r\n                    ? \"added\"\r\n                    : watchListAlert.isRemoved\r\n                    ? \"removed\"\r\n                    : \"\"\r\n            }\r\n        >\r\n            {watchListAlert.isAdded ? (\r\n                <p>Added to Watchlist - {watchListAlert.title}</p>\r\n            ) : watchListAlert.isRemoved ? (\r\n                <p>Removed from Watchlist - {watchListAlert.title}</p>\r\n            ) : (\r\n                <p></p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Addremovewatchlist;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/navbar\";\r\nimport Homepage from \"./components/Homepage/homepage\";\r\nimport MovieFullScreenResult from \"./components/FullScreenResult/moviefullscreenresult\";\r\nimport TvFullScreenResult from \"./components/FullScreenResult/tvfullscreenresult\";\r\nimport PeopleFullScreenResult from \"./components/FullScreenResult/peoplefullscreenresults\";\r\nimport Watchlist from \"./components/Watchlist/watchlist\";\r\nimport Search from \"./components/Search/Search\";\r\nimport Addremovewatchlist from \"./components/Navbar/addremovewatchlist\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <div id=\"app-container\">\r\n                <Navbar />\r\n                <Addremovewatchlist />\r\n                <Switch>\r\n                    <Route path=\"/search\">\r\n                        <Search />\r\n                    </Route>\r\n                    <Route path=\"/result/movie/:id\">\r\n                        <MovieFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/result/tv/:id\">\r\n                        <TvFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/result/people/:id\">\r\n                        <PeopleFullScreenResult />\r\n                    </Route>\r\n                    <Route path=\"/watchlist\">\r\n                        <Watchlist />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Homepage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./components/Navbar/navbar.css\";\r\nimport \"./components/Homepage/homepage.css\";\r\nimport \"./components/Search/Searchbar/searchbar.css\";\r\nimport \"./components/Search/SearchResults/searchresults.css\";\r\nimport \"./components/FullScreenResult/fullscreenresults.css\";\r\nimport \"./components/Watchlist/watchlist.css\";\r\nimport App from \"./App\";\r\nimport { AppProvider } from \"./context\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppProvider>\r\n            <App />\r\n        </AppProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}